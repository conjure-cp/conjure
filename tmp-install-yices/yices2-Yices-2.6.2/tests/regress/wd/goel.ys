(set-param var-elim false)
(set-param keep-ite true)

(define-type tau!4)
(define Add_4_4::(-> tau!4 tau!4 tau!4 ))
(define Le_4_4::(-> tau!4 tau!4 bool ))
(define X::tau!4)
(define X$next::tau!4)
(define Y::tau!4)
(define Y$next::tau!4)
(define prop::bool)
(define prop$next::bool)
(define y$10::bool)
(define y$100::bool)
(define y$101::bool)
(define y$103::bool)
(define y$12::bool)
(define y$13::bool)
(define y$14::tau!4)
(define y$15::tau!4)
(define y$16::bool)
(define y$18::bool)
(define y$19::tau!4)
(define y$2::bool)
(define y$20::tau!4)
(define y$21::tau!4)
(define y$22::bool)
(define y$23::bool)
(define y$25::bool)
(define y$26::bool)
(define y$31::bool)
(define y$33::bool)
(define y$34::bool)
(define y$35::bool)
(define y$36::bool)
(define y$37::bool)
(define y$4::bool)
(define y$45::bool)
(define y$46::bool)
(define y$47::bool)
(define y$48::bool)
(define y$49::bool)
(define y$50::bool)
(define y$57::bool)
(define y$58::bool)
(define y$59::bool)
(define y$65::bool)
(define y$68::bool)
(define y$7::bool)
(define y$76::bool)
(define y$77::bool)
(define y$78::bool)
(define y$79::bool)
(define y$80::bool)
(define y$81::bool)
(define y$82::bool)
(define y$83::bool)
(define y$84::bool)
(define y$85::bool)
(define y$86::bool)
(define y$87::bool)
(define y$9::tau!4)
(define y$90::bool)
(define y$99::bool)
(define y$n0s4::tau!4)
(define y$n15s4::tau!4)
(define y$n1s4::tau!4)
(assert y$2)
(assert (= y$2 (= X y$n0s4)))
(assert y$4)
(assert (= y$4 (= y$n0s4 Y)))
(assert prop)
(assert (= prop (not y$31)))
(assert (= y$10 (Le_4_4 X Y)))
(assert (= y$10 (not y$25)))
(assert y$26)
(assert (= y$26 (= prop y$25)))
(assert (= y$45 (and y$4 y$31 y$26)))
(assert prop$next)
(assert (= y$34 (Le_4_4 X$next Y$next)))
(assert (= y$34 (not y$35)))
(assert y$36)
(assert (= y$36 (= prop$next y$35)))
(assert (= y$47 (= y$n0s4 Y$next)))
(assert (= prop$next (not y$33)))
(assert (= y$48 (and y$36 y$47 y$33)))
(assert y$46)
(assert (= y$45 (not y$46)))
(assert y$57)
(assert (= y$48 (not y$57)))
(assert (= y$7 (= X Y)))
(assert (= y$9 (Add_4_4 Y y$n1s4)))
(assert (= y$12 (not (= X y$n15s4))))
(assert (= y$13 (or y$10 y$12)))
(assert (= y$14 (ite y$13 Y X)))
(assert (= y$15 (ite y$7 y$9 y$14)))
(check)
;; (show-model)

(eval (= y$15 (ite y$7 y$9 y$14)))
