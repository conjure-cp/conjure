(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_IDL)
(declare-fun v0 () Int)
(declare-fun v1 () Int)
(assert (let ((e2 11))
(let ((e3 1))
(let ((e4 2))
(let ((e5 5))
(let ((e6 (= (- v1 v0) e3)))
(let ((e7 (< v0 v1)))
(let ((e8 (> v0 v0)))
(let ((e9 (< v1 v1)))
(let ((e10 (> (- v1 v0) e5)))
(let ((e11 (< (- v0 v1) (- e5))))
(let ((e12 (< v1 v1)))
(let ((e13 (<= (- v1 v1) e5)))
(let ((e14 (<= (- v1 v1) (- e2))))
(let ((e15 (distinct v1 v1)))
(let ((e16 (= (- v1 v1) (- e4))))
(let ((e17 (= v1 v0)))
(let ((e18 (<= v1 v0)))
(let ((e19 (= (- v1 v0) (- e4))))
(let ((e20 (distinct v0 v0)))
(let ((e21 (<= v1 v1)))
(let ((e22 (> (- v0 v0) (- e5))))
(let ((e23 (distinct (- v0 v1) (- e4))))
(let ((e24 (>= v0 v0)))
(let ((e25 (distinct v1 v0)))
(let ((e26 (< (- v0 v1) (- e3))))
(let ((e27 (= (- v0 v1) e2)))
(let ((e28 (< (- v0 v1) e3)))
(let ((e29 (<= (- v0 v0) e2)))
(let ((e30 (distinct v1 v0)))
(let ((e31 (= v1 v0)))
(let ((e32 (= (- v0 v0) (- e4))))
(let ((e33 (= v0 v0)))
(let ((e34 (= v0 v0)))
(let ((e35 (= v1 v0)))
(let ((e36 (< (- v0 v0) (- e5))))
(let ((e37 (distinct v0 v1)))
(let ((e38 (and e25 e10)))
(let ((e39 (xor e24 e9)))
(let ((e40 (and e11 e34)))
(let ((e41 (xor e6 e8)))
(let ((e42 (not e36)))
(let ((e43 (not e21)))
(let ((e44 (or e17 e40)))
(let ((e45 (not e20)))
(let ((e46 (not e19)))
(let ((e47 (ite e27 e32 e37)))
(let ((e48 (not e18)))
(let ((e49 (and e23 e28)))
(let ((e50 (or e7 e49)))
(let ((e51 (and e47 e43)))
(let ((e52 (= e51 e33)))
(let ((e53 (ite e35 e45 e14)))
(let ((e54 (= e44 e39)))
(let ((e55 (xor e50 e53)))
(let ((e56 (and e46 e46)))
(let ((e57 (ite e29 e56 e12)))
(let ((e58 (= e38 e52)))
(let ((e59 (= e31 e48)))
(let ((e60 (ite e58 e16 e58)))
(let ((e61 (not e60)))
(let ((e62 (ite e54 e55 e54)))
(let ((e63 (and e13 e42)))
(let ((e64 (= e61 e15)))
(let ((e65 (and e63 e59)))
(let ((e66 (or e41 e26)))
(let ((e67 (ite e64 e66 e66)))
(let ((e68 (not e22)))
(let ((e69 (and e57 e68)))
(let ((e70 (=> e62 e30)))
(let ((e71 (=> e69 e65)))
(let ((e72 (not e70)))
(let ((e73 (or e67 e71)))
(let ((e74 (or e72 e72)))
(let ((e75 (not e73)))
(let ((e76 (not e75)))
(let ((e77 (= e74 e76)))
e77
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
