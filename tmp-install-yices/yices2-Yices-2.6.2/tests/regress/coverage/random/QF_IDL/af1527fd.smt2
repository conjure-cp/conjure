(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_IDL)
(declare-fun v0 () Int)
(declare-fun v1 () Int)
(declare-fun v2 () Int)
(assert (let ((e3 13))
(let ((e4 7))
(let ((e5 2))
(let ((e6 3))
(let ((e7 (= v0 v1)))
(let ((e8 (= v0 v0)))
(let ((e9 (>= v0 v2)))
(let ((e10 (< (- v0 v1) e3)))
(let ((e11 (= v1 v0)))
(let ((e12 (< (- v2 v1) (- e4))))
(let ((e13 (< (- v0 v0) e4)))
(let ((e14 (> (- v1 v1) e3)))
(let ((e15 (distinct v0 v1)))
(let ((e16 (distinct (- v0 v2) (- e4))))
(let ((e17 (= (- v1 v2) (- e6))))
(let ((e18 (distinct v1 v0)))
(let ((e19 (< v0 v1)))
(let ((e20 (distinct (- v2 v0) (- e4))))
(let ((e21 (> (- v2 v0) (- e6))))
(let ((e22 (distinct v0 v0)))
(let ((e23 (< v2 v2)))
(let ((e24 (<= v1 v2)))
(let ((e25 (= (- v1 v1) (- e3))))
(let ((e26 (> v0 v1)))
(let ((e27 (>= v1 v0)))
(let ((e28 (> v1 v0)))
(let ((e29 (<= v2 v0)))
(let ((e30 (> (- v2 v2) (- e3))))
(let ((e31 (>= v0 v2)))
(let ((e32 (<= v0 v0)))
(let ((e33 (<= v1 v2)))
(let ((e34 (= (- v0 v1) e6)))
(let ((e35 (< v0 v1)))
(let ((e36 (<= v0 v2)))
(let ((e37 (> v0 v0)))
(let ((e38 (< (- v0 v2) (- e5))))
(let ((e39 (> (- v0 v0) (- e4))))
(let ((e40 (distinct (- v1 v0) e5)))
(let ((e41 (< v0 v1)))
(let ((e42 (<= (- v2 v1) e5)))
(let ((e43 (<= v1 v2)))
(let ((e44 (= (- v2 v1) e3)))
(let ((e45 (< (- v1 v0) e5)))
(let ((e46 (=> e7 e10)))
(let ((e47 (=> e25 e29)))
(let ((e48 (xor e40 e19)))
(let ((e49 (not e31)))
(let ((e50 (and e37 e21)))
(let ((e51 (= e33 e26)))
(let ((e52 (= e44 e16)))
(let ((e53 (and e22 e51)))
(let ((e54 (ite e49 e38 e52)))
(let ((e55 (=> e50 e17)))
(let ((e56 (or e47 e20)))
(let ((e57 (=> e43 e36)))
(let ((e58 (and e53 e56)))
(let ((e59 (and e34 e42)))
(let ((e60 (and e14 e45)))
(let ((e61 (ite e46 e60 e54)))
(let ((e62 (or e59 e15)))
(let ((e63 (=> e32 e8)))
(let ((e64 (ite e9 e61 e13)))
(let ((e65 (=> e41 e58)))
(let ((e66 (or e27 e55)))
(let ((e67 (=> e64 e39)))
(let ((e68 (ite e35 e12 e35)))
(let ((e69 (and e63 e66)))
(let ((e70 (xor e69 e57)))
(let ((e71 (not e11)))
(let ((e72 (or e30 e65)))
(let ((e73 (and e23 e72)))
(let ((e74 (and e18 e67)))
(let ((e75 (and e70 e24)))
(let ((e76 (=> e71 e62)))
(let ((e77 (= e48 e74)))
(let ((e78 (and e73 e75)))
(let ((e79 (not e76)))
(let ((e80 (=> e28 e78)))
(let ((e81 (xor e79 e79)))
(let ((e82 (or e68 e68)))
(let ((e83 (and e80 e82)))
(let ((e84 (and e77 e77)))
(let ((e85 (not e81)))
(let ((e86 (or e84 e85)))
(let ((e87 (and e86 e86)))
(let ((e88 (= e87 e83)))
e88
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
