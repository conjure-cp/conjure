(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_IDL)
(declare-fun v0 () Int)
(declare-fun v1 () Int)
(declare-fun v2 () Int)
(assert (let ((e3 3))
(let ((e4 4))
(let ((e5 6))
(let ((e6 2))
(let ((e7 8))
(let ((e8 (<= (- v0 v0) (- e4))))
(let ((e9 (< (- v1 v1) (- e7))))
(let ((e10 (> v1 v2)))
(let ((e11 (< v0 v0)))
(let ((e12 (distinct v0 v1)))
(let ((e13 (<= (- v0 v2) (- e7))))
(let ((e14 (>= v1 v0)))
(let ((e15 (>= (- v0 v2) (- e5))))
(let ((e16 (= (- v1 v2) e5)))
(let ((e17 (> v2 v1)))
(let ((e18 (<= (- v2 v2) (- e3))))
(let ((e19 (>= (- v1 v0) (- e5))))
(let ((e20 (<= (- v0 v2) e3)))
(let ((e21 (<= v0 v1)))
(let ((e22 (>= v0 v2)))
(let ((e23 (<= v0 v0)))
(let ((e24 (>= v1 v1)))
(let ((e25 (distinct (- v1 v1) e5)))
(let ((e26 (> v0 v1)))
(let ((e27 (<= (- v1 v2) (- e3))))
(let ((e28 (<= v2 v0)))
(let ((e29 (> (- v2 v2) (- e7))))
(let ((e30 (= (- v0 v2) (- e4))))
(let ((e31 (< v1 v1)))
(let ((e32 (= (- v0 v2) e4)))
(let ((e33 (>= (- v0 v1) e4)))
(let ((e34 (> v1 v2)))
(let ((e35 (>= (- v2 v1) e4)))
(let ((e36 (<= v2 v1)))
(let ((e37 (= v0 v1)))
(let ((e38 (> v0 v0)))
(let ((e39 (>= v1 v1)))
(let ((e40 (distinct (- v0 v0) e4)))
(let ((e41 (< v2 v2)))
(let ((e42 (>= v1 v2)))
(let ((e43 (distinct v0 v2)))
(let ((e44 (= v2 v0)))
(let ((e45 (>= (- v2 v0) (- e6))))
(let ((e46 (<= (- v1 v0) e3)))
(let ((e47 (and e24 e18)))
(let ((e48 (= e33 e29)))
(let ((e49 (and e39 e17)))
(let ((e50 (= e25 e12)))
(let ((e51 (ite e16 e15 e41)))
(let ((e52 (ite e26 e43 e47)))
(let ((e53 (not e51)))
(let ((e54 (ite e8 e23 e28)))
(let ((e55 (not e42)))
(let ((e56 (not e27)))
(let ((e57 (= e52 e21)))
(let ((e58 (and e53 e53)))
(let ((e59 (= e56 e9)))
(let ((e60 (and e13 e59)))
(let ((e61 (= e37 e60)))
(let ((e62 (= e14 e50)))
(let ((e63 (xor e46 e44)))
(let ((e64 (xor e32 e58)))
(let ((e65 (or e61 e40)))
(let ((e66 (ite e35 e19 e30)))
(let ((e67 (not e55)))
(let ((e68 (or e11 e57)))
(let ((e69 (not e65)))
(let ((e70 (or e20 e22)))
(let ((e71 (=> e66 e70)))
(let ((e72 (ite e36 e31 e62)))
(let ((e73 (or e34 e54)))
(let ((e74 (and e68 e72)))
(let ((e75 (not e49)))
(let ((e76 (= e48 e64)))
(let ((e77 (not e75)))
(let ((e78 (not e74)))
(let ((e79 (not e67)))
(let ((e80 (ite e38 e38 e73)))
(let ((e81 (or e78 e63)))
(let ((e82 (not e69)))
(let ((e83 (xor e79 e71)))
(let ((e84 (ite e82 e81 e81)))
(let ((e85 (and e84 e10)))
(let ((e86 (not e76)))
(let ((e87 (or e83 e83)))
(let ((e88 (ite e86 e85 e45)))
(let ((e89 (and e80 e77)))
(let ((e90 (ite e88 e87 e88)))
(let ((e91 (and e89 e90)))
e91
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
