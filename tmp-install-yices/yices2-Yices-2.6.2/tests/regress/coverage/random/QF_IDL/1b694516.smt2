(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_IDL)
(declare-fun v0 () Int)
(declare-fun v1 () Int)
(declare-fun v2 () Int)
(assert (let ((e3 3))
(let ((e4 (= (- v0 v2) e3)))
(let ((e5 (>= (- v1 v1) (- e3))))
(let ((e6 (< v2 v2)))
(let ((e7 (< (- v1 v1) (- e3))))
(let ((e8 (< v1 v2)))
(let ((e9 (< (- v2 v0) e3)))
(let ((e10 (> v1 v0)))
(let ((e11 (> (- v1 v1) (- e3))))
(let ((e12 (< (- v1 v1) (- e3))))
(let ((e13 (< v2 v2)))
(let ((e14 (<= (- v1 v0) e3)))
(let ((e15 (distinct (- v0 v1) e3)))
(let ((e16 (and e4 e10)))
(let ((e17 (and e14 e6)))
(let ((e18 (and e17 e8)))
(let ((e19 (and e15 e5)))
(let ((e20 (not e9)))
(let ((e21 (and e20 e16)))
(let ((e22 (not e18)))
(let ((e23 (and e11 e22)))
(let ((e24 (= e19 e7)))
(let ((e25 (not e21)))
(let ((e26 (=> e23 e24)))
(let ((e27 (ite e26 e25 e25)))
(let ((e28 (or e12 e12)))
(let ((e29 (= e13 e28)))
(let ((e30 (xor e27 e29)))
e30
)))))))))))))))))))))))))))))

(check-sat)
