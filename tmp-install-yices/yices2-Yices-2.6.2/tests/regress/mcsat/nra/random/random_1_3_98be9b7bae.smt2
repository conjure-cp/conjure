(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_NRA)
(declare-fun v0 () Real)
(declare-fun v1 () Real)
(declare-fun v2 () Real)
(assert (let ((e3 4))
(let ((e4 0))
(let ((e5 (+ v0 v2)))
(let ((e6 (- v1)))
(let ((e7 (- v1)))
(let ((e8 (/ e3 (- e3))))
(let ((e9 (* e5 v1)))
(let ((e10 (/ e4 e3)))
(let ((e11 (< e8 v0)))
(let ((e12 (distinct e8 e6)))
(let ((e13 (>= e6 v2)))
(let ((e14 (= e6 v1)))
(let ((e15 (= e5 v1)))
(let ((e16 (< e7 v1)))
(let ((e17 (< e5 e7)))
(let ((e18 (distinct e5 e6)))
(let ((e19 (< e8 e10)))
(let ((e20 (<= e5 e7)))
(let ((e21 (distinct v0 v1)))
(let ((e22 (distinct e8 v0)))
(let ((e23 (< e6 e10)))
(let ((e24 (<= e6 e6)))
(let ((e25 (<= e8 e8)))
(let ((e26 (>= e5 e8)))
(let ((e27 (< e10 v0)))
(let ((e28 (distinct v1 e9)))
(let ((e29 (distinct e6 e6)))
(let ((e30 (> v1 e10)))
(let ((e31 (>= v1 e10)))
(let ((e32 (distinct e10 e8)))
(let ((e33 (distinct e6 e5)))
(let ((e34 (<= e9 v0)))
(let ((e35 (<= v1 v2)))
(let ((e36 (< v0 e8)))
(let ((e37 (> e10 e9)))
(let ((e38 (< e9 e5)))
(let ((e39 (< v0 e10)))
(let ((e40 (= e5 e6)))
(let ((e41 (< e10 v2)))
(let ((e42 (>= v0 e8)))
(let ((e43 (>= v0 e9)))
(let ((e44 (>= v2 e10)))
(let ((e45 (> e8 e9)))
(let ((e46 (>= v1 e6)))
(let ((e47 (<= e7 v0)))
(let ((e48 (=> e14 e41)))
(let ((e49 (and e25 e13)))
(let ((e50 (= e35 e32)))
(let ((e51 (xor e48 e16)))
(let ((e52 (and e12 e22)))
(let ((e53 (=> e38 e18)))
(let ((e54 (xor e43 e51)))
(let ((e55 (and e49 e42)))
(let ((e56 (xor e50 e46)))
(let ((e57 (or e21 e27)))
(let ((e58 (xor e36 e28)))
(let ((e59 (= e37 e39)))
(let ((e60 (and e30 e34)))
(let ((e61 (ite e24 e11 e33)))
(let ((e62 (and e15 e57)))
(let ((e63 (xor e17 e17)))
(let ((e64 (or e58 e61)))
(let ((e65 (or e40 e55)))
(let ((e66 (and e52 e64)))
(let ((e67 (and e31 e20)))
(let ((e68 (= e45 e60)))
(let ((e69 (ite e65 e65 e23)))
(let ((e70 (or e59 e47)))
(let ((e71 (not e70)))
(let ((e72 (not e53)))
(let ((e73 (and e29 e56)))
(let ((e74 (xor e44 e54)))
(let ((e75 (= e74 e62)))
(let ((e76 (ite e66 e66 e69)))
(let ((e77 (xor e19 e72)))
(let ((e78 (=> e73 e76)))
(let ((e79 (and e77 e68)))
(let ((e80 (=> e78 e71)))
(let ((e81 (ite e75 e26 e67)))
(let ((e82 (=> e80 e63)))
(let ((e83 (or e79 e82)))
(let ((e84 (xor e83 e81)))
e84
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
