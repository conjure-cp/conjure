
trigger:
- master

jobs:
- job: Conjure
  timeoutInMinutes: 0
  strategy:
    matrix:
      Linux:
        imageName: 'ubuntu-latest'
        runTests: true
        coverage: false
      Mac:
        imageName: 'macos-latest'
        runTests: true
        coverage: false
      CodeCoverage:
        imageName: 'ubuntu-latest'
        runTests: true
        coverage: true
  pool:
    vmImage: $(imageName)
  steps:
  - bash: BIN_DIR=${HOME}/.local/bin PATH=${HOME}/.local/bin:${PATH} COVERAGE=$(coverage) BUILD_TESTS=true make
    displayName: "Build Conjure"
  - bash: if $(runTests) ; then BIN_DIR=${HOME}/.local/bin PATH=${HOME}/.local/bin:${PATH} etc/build/install-minion.sh ; fi
    displayName: "Install minion"
  - bash: if $(runTests) ; then BIN_DIR=${HOME}/.local/bin PATH=${HOME}/.local/bin:${PATH} etc/build/install-glucose.sh ; fi
    displayName: "Install glucose"
  - bash: if $(runTests) ; then BIN_DIR=${HOME}/.local/bin PATH=${HOME}/.local/bin:${PATH} etc/build/install-cadical.sh ; fi
    displayName: "Install cadical"
  - bash: if $(runTests) ; then BIN_DIR=${HOME}/.local/bin PATH=${HOME}/.local/bin:${PATH} etc/build/install-kissat.sh ; fi
    displayName: "Install kissat"
  - bash: if $(runTests) ; then BIN_DIR=${HOME}/.local/bin PATH=${HOME}/.local/bin:${PATH} etc/build/install-gnu-parallel.sh ; fi
    displayName: "Install gnu parallel"
  - bash: if $(runTests) ; then BIN_DIR=${HOME}/.local/bin PATH=${HOME}/.local/bin:${PATH} COVERAGE=$(coverage) LIMIT_TIME=0 make test ; fi
    displayName: "Test"
  - task: DownloadSecureFile@1
    inputs:
      secureFile: azure_id_rsa
      displayName: 'Get the Github deploy key'
  - bash: COVERAGE=$(coverage) SOURCE_VERSION="$(Build.SourceVersion)" etc/build/record-coverage.sh
    displayName: "Upload code coverage report to Github"
