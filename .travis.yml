
# travis phases and our setup
# before_install
# install                           -- fetch/build non-haskell dependencies: savilerow, minion, lingeling
#                                   -- build conjure
#                                   -- save all these executables under $(pwd)/bin
# before_script
# script                            -- running tests
# after_success                     -- attempt cabal freeze
# after_failure
# OPTIONAL before_deploy
# OPTIONAL deploy
# OPTIONAL after_deploy
# after_script

language: generic

sudo: false

# superset of all addons
# addons: {apt: {sources: [hvr-ghc, ubuntu-toolchain-r-test], packages: [gcc-4.9, g++-4.9, cabal-install-1.24, ghc-7.8.4, ghc-7.10.3, ghc-8.0.2, ghc-head]}}

# apparently explicitly setting the compiler here forces travis to
# use separate caches for different compiler versions.
# as seen in the Idris .travis.yml
# (until https://github.com/travis-ci/travis-ci/issues/4393 is resolved)
matrix:

  include:

    - os: linux
      env: GHC=7.8.4 SR="-O2" SOL=minion
      compiler: ": # GHC 7.8.4"
      addons: {apt: {sources: [hvr-ghc, ubuntu-toolchain-r-test], packages: [g++-4.9, cabal-install-1.24, ghc-7.8.4]}}

    - os: linux
      env: GHC=7.10.3 SR="-O2" SOL=minion
      compiler: ": # GHC 7.10.3"
      addons: {apt: {sources: [hvr-ghc, ubuntu-toolchain-r-test], packages: [g++-4.9, cabal-install-1.24, ghc-7.10.3]}}

    - os: linux
      env: GHC=8.0.2 SR="-O0" SOL=minion
      compiler: ": # GHC 8.0.2"
      addons: {apt: {sources: [hvr-ghc, ubuntu-toolchain-r-test], packages: [g++-4.9, cabal-install-1.24, ghc-8.0.2]}}
    - os: linux
      env: GHC=8.0.2 SR="-O2" SOL=minion
      compiler: ": # GHC 8.0.2"
      addons: {apt: {sources: [hvr-ghc, ubuntu-toolchain-r-test], packages: [g++-4.9, cabal-install-1.24, ghc-8.0.2]}}
    - os: linux
      env: GHC=8.0.2 SR="-O0" SOL=lingeling
      compiler: ": # GHC 8.0.2"
      addons: {apt: {sources: [hvr-ghc, ubuntu-toolchain-r-test], packages: [gcc-4.9, g++-4.9, cabal-install-1.24, ghc-8.0.2]}}
    - os: linux
      env: GHC=8.0.2 SR="-O2" SOL=lingeling
      compiler: ": # GHC 8.0.2"
      addons: {apt: {sources: [hvr-ghc, ubuntu-toolchain-r-test], packages: [gcc-4.9, g++-4.9, cabal-install-1.24, ghc-8.0.2]}}

    - os: osx
      osx_image: xcode8.2
      env: GHC=8.0.2 SR="-O2" SOL=minion
      compiler: ": # GHC 8.0.2"

    - os: linux
      env: GHC=head SR="-O2" SOL=minion
      compiler: ": # GHC head"
      addons: {apt: {sources: [hvr-ghc, ubuntu-toolchain-r-test], packages: [g++-4.9, cabal-install-1.24, ghc-head]}}

  allow_failures:
    - env: GHC=head SR="-O2" SOL=minion
    - os: osx
      env: GHC=8.0.2 SR="-O2" SOL=minion
    - env: GHC=8.0.2 SR="-O0" SOL=lingeling
    - env: GHC=8.0.2 SR="-O2" SOL=lingeling

before_install:
  - export STARTTIME=$(date +%s)
  # expanding the names of the environment variables
  # they were only shorter in the matrix to keep travis ui clean
  - export GHC_VERSION="${GHC}"
  - export SR_OPTIONS="${SR}"
  - export SOLVER="${SOL}"
  - unset GHC
  - unset SR
  - unset SOL
  #
  - export CABALVER=1.24
  - export BIN_DIR=$(pwd)/bin
  - export PATH=${BIN_DIR}:/opt/ghc/${GHC_VERSION}/bin:/opt/cabal/${CABALVER}/bin:${HOME}/.cabal/bin:${PATH}
  - if [ ${SOLVER} = "minion" ] ; then export SR_OPTIONS="${SR_OPTIONS} -minion" ; fi
  - if [ ${SOLVER} = "lingeling" ] ; then export SR_OPTIONS="${SR_OPTIONS} -sat" ; fi
  - if [ "${TRAVIS_OS_NAME}" == "osx" ];   then export COMPILER_C=gcc     ; export COMPILER_CPP=g++     ; fi
  - if [ "${TRAVIS_OS_NAME}" == "linux" ]; then export COMPILER_C=gcc-4.9 ; export COMPILER_CPP=g++-4.9 ; fi

install:
  - mkdir -p bin

  # take the config file out of the cache
  - if [ -f .cabal-sandbox/cabal.sandbox.config ] ; then mv .cabal-sandbox/cabal.sandbox.config . ; fi

  # Conjure
  - cabal --version || echo "cabal not found"
  - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - echo ${PATH}
  - OPTIMISATION=-O1 BUILD_TESTS=yes CORES=2 INSTALL_GHC=yes INSTALL_CABAL=yes make install-with-cabal
  - conjure --version                        # print version

  # Savile Row
  - (savilerow -help | grep '85dce3ca35e1') || etc/build/install-savilerow.sh
  - savilerow -help | head -n1               # print version

  # Lingeling
  - (lingeling --help > /dev/null) || (CC=${COMPILER_C} etc/build/install-lingeling.sh)

  # Minion
  # - (minion | grep 'Minion Version 2') || (COMPILER=${COMPILER_CPP} etc/build/install-minion.sh)
  - (minion | grep 'Minion Version 1.8') || etc/build/download-minion.sh
  - minion help | head -n2                   # print version

  - ls -Alh $(find bin -type f)

  - cp cabal.sandbox.config .cabal-sandbox   # move the config file under the sandbox so it is cached

script:
  - touch conjure-testing.stdout
  - export ELAPSED=$(($(date +%s) - ${STARTTIME}))
  - echo "Time elapsed so far is ${ELAPSED} seconds."
  - if [ ${ELAPSED} -gt 900 ] ; then echo "Skipping the tests, or else travis will (very probably) time out." ; else ((time dist/build/conjure-testing/conjure-testing --limit-time 10 +RTS -s) > >(tee conjure-testing.stdout | grep -v "Conjuring\|Savile\ Row\|Validating\|Checking") 2> >(tee conjure-testing.stderr >&2)) || true; fi
  - if ! grep -A20 FAIL conjure-testing.stdout; then echo "Success!"; else exit 1 ; fi
  # - if [ ${ELAPSED} -gt 1800 ] ; then echo "Skipping the tests, or else travis will (very probably) time out." ; else time dist/build/conjure-testing/conjure-testing --limit-time 10 -p parse_print +RTS -s; fi
  - cabal sdist   # tests that a source-distribution can be generated

after_success:
  - make freeze

cache:
  directories:
    - ${HOME}/.cabal
    - ${HOME}/.ghc
    - ${HOME}/.tools
    - .cabal-sandbox
    - dist
    - bin
  timeout: 600

