
# travis phases and our setup
# before_install
# install                           -- fetch/build non-haskell dependencies: savilerow, minion, lingeling
#                                   -- build conjure
#                                   -- save all these executables under ${HOME}/.local/bin
# before_script
# script                            -- running tests
# after_success                     -- attempt cabal freeze
# after_failure
# OPTIONAL before_deploy
# OPTIONAL deploy
# OPTIONAL after_deploy
# after_script

language: generic

sudo: false


# apparently explicitly setting the compiler here forces travis to
# use separate caches for different compiler versions.
# as seen in the Idris .travis.yml
# (until https://github.com/travis-ci/travis-ci/issues/4393 is resolved)
matrix:

  include:

    - os: linux
      env: GHC=8.0 SR="-O2" SOL=minion
      compiler: ": # GHC 8.0"
      addons: {apt: {sources: [hvr-ghc, ubuntu-toolchain-r-test], packages: [gcc-4.9, g++-4.9, ghc-8.0.2]}}

    - os: linux
      env: GHC=8.2 SR="-O2" SOL=minion
      compiler: ": # GHC 8.2"
      addons: {apt: {sources: [hvr-ghc, ubuntu-toolchain-r-test], packages: [gcc-4.9, g++-4.9, ghc-8.2.2]}}
    - os: osx
      env: GHC=8.2 SR="-O2" SOL=minion
      compiler: ": # GHC 8.2"

    - os: linux
      env: GHC=8.4 SR="-O2" SOL=minion
      compiler: ": # GHC 8.4"
      addons: {apt: {sources: [hvr-ghc, ubuntu-toolchain-r-test], packages: [gcc-4.9, g++-4.9, ghc-8.4.4]}}
    - os: osx
      env: GHC=8.4 SR="-O2" SOL=minion
      compiler: ": # GHC 8.4"

    - os: linux
      env: GHC=8.6 SR="-O0" SOL=minion
      compiler: ": # GHC 8.6"
      addons: {apt: {sources: [hvr-ghc, ubuntu-toolchain-r-test], packages: [gcc-4.9, g++-4.9, ghc-8.6.3]}}
    - os: linux
      env: GHC=8.6 SR="-O2" SOL=minion
      compiler: ": # GHC 8.6"
      addons: {apt: {sources: [hvr-ghc, ubuntu-toolchain-r-test], packages: [gcc-4.9, g++-4.9, ghc-8.6.3]}}
    - os: linux
      env: GHC=8.6 SR="-O0" SOL=lingeling
      compiler: ": # GHC 8.6"
      addons: {apt: {sources: [hvr-ghc, ubuntu-toolchain-r-test], packages: [gcc-4.9, g++-4.9, ghc-8.6.3]}}
    - os: linux
      env: GHC=8.6 SR="-O2" SOL=lingeling
      compiler: ": # GHC 8.6"
      addons: {apt: {sources: [hvr-ghc, ubuntu-toolchain-r-test], packages: [gcc-4.9, g++-4.9, ghc-8.6.3]}}
    - os: osx
      env: GHC=8.6 SR="-O2" SOL=minion
      compiler: ": # GHC 8.6"

  allow_failures:
    - env: GHC=8.6 SR="-O0" SOL=minion
    - env: GHC=8.6 SR="-O2" SOL=minion
    - env: GHC=8.6 SR="-O0" SOL=lingeling
    - env: GHC=8.6 SR="-O2" SOL=lingeling
    - env: GHC=8.6 SR="-O2" SOL=minion

before_install:
  - export STARTTIME=$(date +%s)
  # expanding the names of the environment variables
  # they were only shorter in the matrix to keep travis ui clean
  - export GHC_VERSION="${GHC}"
  - export SR_OPTIONS="${SR}"
  - export SOLVER="${SOL}"
  - unset GHC
  - unset SR
  - unset SOL
  #
  - export BIN_DIR=${HOME}/.local/bin
  - echo $PATH
  - export PATH=${BIN_DIR}:/opt/ghc/bin:${HOME}/.cabal/bin:${PATH}
  - echo $PATH
  - if [ ${SOLVER} = "minion" ] ; then export SR_OPTIONS="${SR_OPTIONS} -minion" ; fi
  - if [ ${SOLVER} = "lingeling" ] ; then export SR_OPTIONS="${SR_OPTIONS} -sat -sat-family lingeling" ; fi
  - if [ "${TRAVIS_OS_NAME}" == "osx" ];   then export COMPILER_C=gcc     ; export COMPILER_CPP=g++     ; fi
  - if [ "${TRAVIS_OS_NAME}" == "linux" ]; then export COMPILER_C=gcc-4.9 ; export COMPILER_CPP=g++-4.9 ; fi

install:
  - mkdir -p ${HOME}/.local/bin

  # GHC version
  - which ghc || ghc --version || true

  # Haskell Stack
  - (stack --version) || etc/build/install-stack.sh || true
  - stack --version                          # print version

  # Conjure
  - BUILD_TESTS=true make install
  - conjure --version                        # print version

  # Savile Row
  - savilerow -help | head -n1               # print version

  # Lingeling
  - (lingeling --help > /dev/null) || (CC=${COMPILER_C} etc/build/install-lingeling.sh)

  # Minion
  - (minion | grep 'Minion Version 2') || etc/build/install-minion.sh
  - minion | head -n2                        # print version

  - ls -Alh $(find ${HOME}/.local/bin -type f)

script:
  - touch conjure-testing.stdout
  - export ELAPSED=$(($(date +%s) - ${STARTTIME}))
  - echo "Time elapsed so far is ${ELAPSED} seconds."
  # - if [ ${ELAPSED} -gt 900 ] ; then echo "Skipping the tests, or else travis will (very probably) time out." ; else ((time dist/build/conjure-testing/conjure-testing --limit-time 10 +RTS -s) > >(tee conjure-testing.stdout | grep -v "Conjuring\|Savile\ Row\|Validating\|Checking\|Running") 2> >(tee conjure-testing.stderr >&2)) || true; fi
  - cp etc/hs-deps/stack-${GHC_VERSION}.yaml stack.yaml
  - ls -l .stack-work/dist/*/*/build/conjure-testing/conjure-testing
  - cp .stack-work/dist/*/*/build/conjure-testing/conjure-testing ${BIN_DIR}/conjure-testing
  - ((time conjure-testing --limit-time 10 +RTS -s) > >(tee conjure-testing.stdout | grep -v "Conjuring\|Savile\ Row\|Validating\|Checking\|Running") 2> >(tee conjure-testing.stderr >&2)) || true
  - rm stack.yaml
  - if ! grep -A20 FAIL conjure-testing.stdout; then echo "Success!"; else exit 1 ; fi

cache:
  directories:
    - ${HOME}/.cabal
    - ${HOME}/.local/bin
    - ${HOME}/.ghc
    - ${HOME}/.tools
    - ${HOME}/.stack
    - .cabal-sandbox
    - .stack-work
    - dist
  timeout: 600


branches:
  except:
    - ide
