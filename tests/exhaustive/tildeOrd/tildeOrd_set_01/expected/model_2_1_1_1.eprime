language ESSENCE' 1.0

find a_Explicit: matrix indexed by [int(1..3)] of int(1..4)
find a_Occurrence: matrix indexed by [int(1..4)] of bool
find b_Occurrence: matrix indexed by [int(1..4)] of bool
branching on [a_Occurrence, a_Explicit, b_Occurrence]
such that
    or([toInt(or([a_Explicit[q25] = a_Explicit[q12] | q25 : int(1..3)])) < toInt(b_Occurrence[a_Explicit[q12]]) /\
        (and([a_Explicit[q26] < a_Explicit[q12] ->
              toInt(or([a_Explicit[q32] = a_Explicit[q26] | q32 : int(1..3)])) = toInt(b_Occurrence[a_Explicit[q26]])
                  | q26 : int(1..3)])
         /\
         and([and([b_Occurrence[q11], !or([a_Explicit[q30] = q11 | q30 : int(1..3)]), q11 < a_Explicit[q12]; int(1..3)])
              -> toInt(or([a_Explicit[q28] = q11 | q28 : int(1..3)])) = toInt(b_Occurrence[q11])
                  | q11 : int(1..4)]))
            | q12 : int(1..3)])
    \/
    or([b_Occurrence[q10] /\ !or([a_Explicit[q23] = q10 | q23 : int(1..3)]) /\
        (toInt(or([a_Explicit[q14] = q10 | q14 : int(1..3)])) < toInt(b_Occurrence[q10]) /\
         (and([a_Explicit[q15] < q10 ->
               toInt(or([a_Explicit[q21] = a_Explicit[q15] | q21 : int(1..3)])) = toInt(b_Occurrence[a_Explicit[q15]])
                   | q15 : int(1..3)])
          /\
          and([b_Occurrence[q11] /\ !or([a_Explicit[q19] = q11 | q19 : int(1..3)]) ->
               toInt(or([a_Explicit[q17] = q11 | q17 : int(1..3)])) = toInt(b_Occurrence[q11])
                   | q11 : int(1..4), q11 < q10])))
            | q10 : int(1..4)]),
    and([a_Explicit[q1] < a_Explicit[q1 + 1] | q1 : int(1..2)]),
    3 = sum([toInt(b_Occurrence[q3]) | q3 : int(1..4)]),
    3 = sum([toInt(a_Occurrence[q4]) | q4 : int(1..4)]),
    and([a_Occurrence[q5] -> or([a_Explicit[q7] = q5 | q7 : int(1..3)]) | q5 : int(1..4)]),
    and([a_Occurrence[a_Explicit[q9]] | q9 : int(1..3)])

