language ESSENCE' 1.0

find a_Explicit: matrix indexed by [int(1..3)] of int(1..4)
find b_Occurrence: matrix indexed by [int(1..4)] of bool
find b_Explicit: matrix indexed by [int(1..3)] of int(1..4)
branching on [a_Explicit, b_Explicit, b_Occurrence]
such that
    or([toInt(or([a_Explicit[q26] = a_Explicit[q13] | q26 : int(1..3)])) < toInt(b_Occurrence[a_Explicit[q13]]) /\
        (and([a_Explicit[q27] < a_Explicit[q13] ->
              toInt(or([a_Explicit[q33] = a_Explicit[q27] | q33 : int(1..3)])) = toInt(b_Occurrence[a_Explicit[q27]])
                  | q27 : int(1..3)])
         /\
         and([and([b_Occurrence[q12], !or([a_Explicit[q31] = q12 | q31 : int(1..3)]), q12 < a_Explicit[q13]; int(1..3)])
              -> toInt(or([a_Explicit[q29] = q12 | q29 : int(1..3)])) = toInt(b_Occurrence[q12])
                  | q12 : int(1..4)]))
            | q13 : int(1..3)])
    \/
    or([b_Occurrence[q11] /\ !or([a_Explicit[q24] = q11 | q24 : int(1..3)]) /\
        (toInt(or([a_Explicit[q15] = q11 | q15 : int(1..3)])) < toInt(b_Occurrence[q11]) /\
         (and([a_Explicit[q16] < q11 ->
               toInt(or([a_Explicit[q22] = a_Explicit[q16] | q22 : int(1..3)])) = toInt(b_Occurrence[a_Explicit[q16]])
                   | q16 : int(1..3)])
          /\
          and([b_Occurrence[q12] /\ !or([a_Explicit[q20] = q12 | q20 : int(1..3)]) ->
               toInt(or([a_Explicit[q18] = q12 | q18 : int(1..3)])) = toInt(b_Occurrence[q12])
                   | q12 : int(1..4), q12 < q11])))
            | q11 : int(1..4)]),
    and([a_Explicit[q1] < a_Explicit[q1 + 1] | q1 : int(1..2)]),
    3 = sum([toInt(b_Occurrence[q3]) | q3 : int(1..4)]),
    and([b_Explicit[q4] < b_Explicit[q4 + 1] | q4 : int(1..2)]),
    and([b_Occurrence[b_Explicit[q7]] | q7 : int(1..3)]),
    and([b_Occurrence[q8] -> or([b_Explicit[q10] = q8 | q10 : int(1..3)]) | q8 : int(1..4)])

