language ESSENCE' 1.0

find a_Explicit: matrix indexed by [int(1..3)] of int(1..4)
find a_Occurrence: matrix indexed by [int(1..4)] of bool
find b_Occurrence: matrix indexed by [int(1..4)] of bool
find b_Explicit: matrix indexed by [int(1..3)] of int(1..4)
branching on [a_Occurrence, a_Explicit, b_Explicit, b_Occurrence]
such that
    or([toInt(or([a_Explicit[q32] = a_Explicit[q19] | q32 : int(1..3)])) < toInt(b_Occurrence[a_Explicit[q19]]) /\
        (and([a_Explicit[q33] < a_Explicit[q19] ->
              toInt(or([a_Explicit[q39] = a_Explicit[q33] | q39 : int(1..3)])) = toInt(b_Occurrence[a_Explicit[q33]])
                  | q33 : int(1..3)])
         /\
         and([and([b_Occurrence[q18], !or([a_Explicit[q37] = q18 | q37 : int(1..3)]), q18 < a_Explicit[q19]; int(1..3)])
              -> toInt(or([a_Explicit[q35] = q18 | q35 : int(1..3)])) = toInt(b_Occurrence[q18])
                  | q18 : int(1..4)]))
            | q19 : int(1..3)])
    \/
    or([b_Occurrence[q17] /\ !or([a_Explicit[q30] = q17 | q30 : int(1..3)]) /\
        (toInt(or([a_Explicit[q21] = q17 | q21 : int(1..3)])) < toInt(b_Occurrence[q17]) /\
         (and([a_Explicit[q22] < q17 ->
               toInt(or([a_Explicit[q28] = a_Explicit[q22] | q28 : int(1..3)])) = toInt(b_Occurrence[a_Explicit[q22]])
                   | q22 : int(1..3)])
          /\
          and([b_Occurrence[q18] /\ !or([a_Explicit[q26] = q18 | q26 : int(1..3)]) ->
               toInt(or([a_Explicit[q24] = q18 | q24 : int(1..3)])) = toInt(b_Occurrence[q18])
                   | q18 : int(1..4), q18 < q17])))
            | q17 : int(1..4)]),
    and([a_Explicit[q1] < a_Explicit[q1 + 1] | q1 : int(1..2)]),
    3 = sum([toInt(b_Occurrence[q3]) | q3 : int(1..4)]),
    3 = sum([toInt(a_Occurrence[q4]) | q4 : int(1..4)]),
    and([a_Occurrence[q12] -> or([a_Explicit[q14] = q12 | q14 : int(1..3)]) | q12 : int(1..4)]),
    and([a_Occurrence[a_Explicit[q16]] | q16 : int(1..3)]),
    and([b_Explicit[q5] < b_Explicit[q5 + 1] | q5 : int(1..2)]),
    and([b_Occurrence[b_Explicit[q8]] | q8 : int(1..3)]),
    and([b_Occurrence[q9] -> or([b_Explicit[q11] = q9 | q11 : int(1..3)]) | q9 : int(1..4)])

