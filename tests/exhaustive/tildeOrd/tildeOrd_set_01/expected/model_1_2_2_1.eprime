language ESSENCE' 1.0

find a_Occurrence: matrix indexed by [int(1..4)] of bool
find a_Explicit: matrix indexed by [int(1..3)] of int(1..4)
find b_Explicit: matrix indexed by [int(1..3)] of int(1..4)
find b_Occurrence: matrix indexed by [int(1..4)] of bool
branching on [a_Explicit, a_Occurrence, b_Occurrence, b_Explicit]
such that
    or([a_Occurrence[q17] /\
        (toInt(a_Occurrence[q17]) < toInt(or([b_Explicit[q30] = q17 | q30 : int(1..3)])) /\
         (and([a_Occurrence[q18] -> toInt(a_Occurrence[q18]) = toInt(or([b_Explicit[q36] = q18 | q36 : int(1..3)]))
                   | q18 : int(1..4), q18 < q17])
          /\
          and([!or([a_Occurrence[q34] /\ q34 = b_Explicit[q31] | q34 : int(1..4)]) /\ b_Explicit[q31] < q17 ->
               toInt(a_Occurrence[b_Explicit[q31]]) = toInt(or([b_Explicit[q33] = b_Explicit[q31] | q33 : int(1..3)]))
                   | q31 : int(1..3)])))
            | q17 : int(1..4)])
    \/
    or([!or([a_Occurrence[q28] /\ q28 = b_Explicit[q19] | q28 : int(1..4)]) /\
        (toInt(a_Occurrence[b_Explicit[q19]]) < toInt(or([b_Explicit[q21] = b_Explicit[q19] | q21 : int(1..3)])) /\
         (and([a_Occurrence[q18] /\ q18 < b_Explicit[q19] ->
               toInt(a_Occurrence[q18]) = toInt(or([b_Explicit[q27] = q18 | q27 : int(1..3)]))
                   | q18 : int(1..4)])
          /\
          and([!or([a_Occurrence[q25] /\ q25 = b_Explicit[q22] | q25 : int(1..4)]) /\ b_Explicit[q22] < b_Explicit[q19]
               ->
               toInt(a_Occurrence[b_Explicit[q22]]) = toInt(or([b_Explicit[q24] = b_Explicit[q22] | q24 : int(1..3)]))
                   | q22 : int(1..3)])))
            | q19 : int(1..3)]),
    3 = sum([toInt(a_Occurrence[q1]) | q1 : int(1..4)]),
    and([b_Explicit[q2] < b_Explicit[q2 + 1] | q2 : int(1..2)]),
    and([a_Explicit[q4] < a_Explicit[q4 + 1] | q4 : int(1..2)]),
    and([a_Occurrence[a_Explicit[q7]] | q7 : int(1..3)]),
    and([a_Occurrence[q8] -> or([a_Explicit[q10] = q8 | q10 : int(1..3)]) | q8 : int(1..4)]),
    3 = sum([toInt(b_Occurrence[q11]) | q11 : int(1..4)]),
    and([b_Occurrence[q12] -> or([b_Explicit[q14] = q12 | q14 : int(1..3)]) | q12 : int(1..4)]),
    and([b_Occurrence[b_Explicit[q16]] | q16 : int(1..3)])

