language ESSENCE' 1.0

find a_Occurrence: matrix indexed by [int(1..4)] of bool
find b_Occurrence: matrix indexed by [int(1..4)] of bool
find b_Explicit: matrix indexed by [int(1..3)] of int(1..4)
branching on [a_Occurrence, b_Explicit, b_Occurrence]
such that
    or([a_Occurrence[q10] /\
        (toInt(a_Occurrence[q10]) < toInt(b_Occurrence[q10]) /\
         (and([a_Occurrence[q11] -> toInt(a_Occurrence[q11]) = toInt(b_Occurrence[q11]) | q11 : int(1..4), q11 < q10])
          /\
          and([b_Occurrence[q11] /\ !or([a_Occurrence[q14] /\ q14 = q11 | q14 : int(1..4)]) ->
               toInt(a_Occurrence[q11]) = toInt(b_Occurrence[q11])
                   | q11 : int(1..4), q11 < q10])))
            | q10 : int(1..4)])
    \/
    or([b_Occurrence[q10] /\ !or([a_Occurrence[q13] /\ q13 = q10 | q13 : int(1..4)]) /\
        (toInt(a_Occurrence[q10]) < toInt(b_Occurrence[q10]) /\
         (and([a_Occurrence[q11] -> toInt(a_Occurrence[q11]) = toInt(b_Occurrence[q11]) | q11 : int(1..4), q11 < q10])
          /\
          and([b_Occurrence[q11] /\ !or([a_Occurrence[q12] /\ q12 = q11 | q12 : int(1..4)]) ->
               toInt(a_Occurrence[q11]) = toInt(b_Occurrence[q11])
                   | q11 : int(1..4), q11 < q10])))
            | q10 : int(1..4)]),
    3 = sum([toInt(a_Occurrence[q1]) | q1 : int(1..4)]),
    3 = sum([toInt(b_Occurrence[q2]) | q2 : int(1..4)]),
    and([b_Explicit[q3] < b_Explicit[q3 + 1] | q3 : int(1..2)]),
    and([b_Occurrence[b_Explicit[q6]] | q6 : int(1..3)]),
    and([b_Occurrence[q7] -> or([b_Explicit[q9] = q7 | q9 : int(1..3)]) | q7 : int(1..4)])

