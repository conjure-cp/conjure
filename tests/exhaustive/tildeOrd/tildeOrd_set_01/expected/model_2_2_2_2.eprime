language ESSENCE' 1.0

find a_Occurrence: matrix indexed by [int(1..4)] of bool
find b_Occurrence: matrix indexed by [int(1..4)] of bool
branching on [a_Occurrence, b_Occurrence]
such that
    or([a_Occurrence[q3] /\
        (toInt(a_Occurrence[q3]) < toInt(b_Occurrence[q3]) /\
         (and([a_Occurrence[q4] -> toInt(a_Occurrence[q4]) = toInt(b_Occurrence[q4]) | q4 : int(1..4), q4 < q3]) /\
          and([b_Occurrence[q4] /\ !or([a_Occurrence[q7] /\ q7 = q4 | q7 : int(1..4)]) ->
               toInt(a_Occurrence[q4]) = toInt(b_Occurrence[q4])
                   | q4 : int(1..4), q4 < q3])))
            | q3 : int(1..4)])
    \/
    or([b_Occurrence[q3] /\ !or([a_Occurrence[q6] /\ q6 = q3 | q6 : int(1..4)]) /\
        (toInt(a_Occurrence[q3]) < toInt(b_Occurrence[q3]) /\
         (and([a_Occurrence[q4] -> toInt(a_Occurrence[q4]) = toInt(b_Occurrence[q4]) | q4 : int(1..4), q4 < q3]) /\
          and([b_Occurrence[q4] /\ !or([a_Occurrence[q5] /\ q5 = q4 | q5 : int(1..4)]) ->
               toInt(a_Occurrence[q4]) = toInt(b_Occurrence[q4])
                   | q4 : int(1..4), q4 < q3])))
            | q3 : int(1..4)]),
    3 = sum([toInt(a_Occurrence[q1]) | q1 : int(1..4)]),
    3 = sum([toInt(b_Occurrence[q2]) | q2 : int(1..4)])

