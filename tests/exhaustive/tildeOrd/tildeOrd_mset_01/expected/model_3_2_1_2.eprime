language ESSENCE' 1.0

find a_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
find a_ExplicitWithFlags_Flags: matrix indexed by [int(1..3)] of int(0..3)
find a_ExplicitWithFlags_Values: matrix indexed by [int(1..3)] of int(1..2)
find b_ExplicitWithRepetition_Flag: int(3)
find b_ExplicitWithRepetition_Values: matrix indexed by [int(1..3)] of int(1..2)
branching on
    [a_ExplicitWithFlags_Flags, a_ExplicitWithFlags_Values, a_MOccurrence, b_ExplicitWithRepetition_Flag,
     b_ExplicitWithRepetition_Values]
such that
    or([a_MOccurrence[q31] > 0 /\
        (a_MOccurrence[q31] < sum([toInt(b_ExplicitWithRepetition_Values[q21] = q31) | q21 : int(1..3), q21 <= 3]) /\
         (and([a_MOccurrence[q27] > 0 ->
               a_MOccurrence[q27] = sum([toInt(b_ExplicitWithRepetition_Values[q23] = q27) | q23 : int(1..3), q23 <= 3])
                   | q27 : int(1..2), q27 < q31])
          /\
          and([!or([a_MOccurrence[q26] > 0 /\ q26 = b_ExplicitWithRepetition_Values[q24] | q26 : int(1..2)]) /\
               b_ExplicitWithRepetition_Values[q24] < q31
               ->
               a_MOccurrence[b_ExplicitWithRepetition_Values[q24]] =
               sum([toInt(b_ExplicitWithRepetition_Values[q23] = b_ExplicitWithRepetition_Values[q24])
                        | q23 : int(1..3), q23 <= 3])
                   | q24 : int(1..3), q24 <= 3])))
            | q31 : int(1..2)])
    \/
    or([!or([a_MOccurrence[q30] > 0 /\ q30 = b_ExplicitWithRepetition_Values[q28] | q30 : int(1..2)]) /\
        (a_MOccurrence[b_ExplicitWithRepetition_Values[q28]] <
         sum([toInt(b_ExplicitWithRepetition_Values[q21] = b_ExplicitWithRepetition_Values[q28])
                  | q21 : int(1..3), q21 <= 3])
         /\
         (and([q27 < b_ExplicitWithRepetition_Values[q28] ->
               (a_MOccurrence[q27] > 0 ->
                a_MOccurrence[q27] =
                sum([toInt(b_ExplicitWithRepetition_Values[q23] = q27) | q23 : int(1..3), q23 <= 3]))
                   | q27 : int(1..2)])
          /\
          and([!or([a_MOccurrence[q26] > 0 /\ q26 = b_ExplicitWithRepetition_Values[q24] | q26 : int(1..2)]) /\
               b_ExplicitWithRepetition_Values[q24] < b_ExplicitWithRepetition_Values[q28]
               ->
               a_MOccurrence[b_ExplicitWithRepetition_Values[q24]] =
               sum([toInt(b_ExplicitWithRepetition_Values[q23] = b_ExplicitWithRepetition_Values[q24])
                        | q23 : int(1..3), q23 <= 3])
                   | q24 : int(1..3), q24 <= 3])))
            | q28 : int(1..3), q28 <= 3]),
    3 = sum([a_MOccurrence[q1] | q1 : int(1..2)]),
    and([b_ExplicitWithRepetition_Values[q2] <= b_ExplicitWithRepetition_Values[q2 + 1] | q2 : int(1..2), q2 + 1 <= 3]),
    and([a_ExplicitWithFlags_Flags[q7 + 1] > 0 -> a_ExplicitWithFlags_Values[q7] < a_ExplicitWithFlags_Values[q7 + 1]
             | q7 : int(1..2)]),
    and([a_ExplicitWithFlags_Flags[q8] = 0 -> a_ExplicitWithFlags_Values[q8] = 1 | q8 : int(1..3)]),
    and([a_ExplicitWithFlags_Flags[q9 + 1] > 0 -> a_ExplicitWithFlags_Flags[q9] > 0 | q9 : int(1..2)]),
    3 = sum([a_ExplicitWithFlags_Flags[q11] | q11 : int(1..3)]),
    and([a_ExplicitWithFlags_Flags[q14] > 0 ->
         sum([toInt(a_ExplicitWithFlags_Values[q15] = a_ExplicitWithFlags_Values[q14]) *
              catchUndef(a_ExplicitWithFlags_Flags[q15], 0)
                  | q15 : int(1..3)])
         = a_MOccurrence[a_ExplicitWithFlags_Values[q14]]
             | q14 : int(1..3)]),
    and([a_MOccurrence[q16] > 0 ->
         sum([toInt(a_ExplicitWithFlags_Values[q17] = q16) * catchUndef(a_ExplicitWithFlags_Flags[q17], 0)
                  | q17 : int(1..3)])
         = a_MOccurrence[q16]
             | q16 : int(1..2)])

