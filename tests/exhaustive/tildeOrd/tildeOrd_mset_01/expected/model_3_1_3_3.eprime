language ESSENCE' 1.0

find a_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
find b_ExplicitWithFlags_Flags: matrix indexed by [int(1..3)] of int(0..3)
find b_ExplicitWithFlags_Values: matrix indexed by [int(1..3)] of int(1..2)
find b_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
branching on [a_MOccurrence, b_MOccurrence, b_ExplicitWithFlags_Flags, b_ExplicitWithFlags_Values]
such that
    or([a_MOccurrence[q25] > 0 /\
        (a_MOccurrence[q25] <
         sum([toInt(b_ExplicitWithFlags_Values[q17] = q25) * catchUndef(b_ExplicitWithFlags_Flags[q17], 0)
                  | q17 : int(1..3)])
         /\
         (and([a_MOccurrence[q21] > 0 ->
               a_MOccurrence[q21] =
               sum([toInt(b_ExplicitWithFlags_Values[q18] = q21) * catchUndef(b_ExplicitWithFlags_Flags[q18], 0)
                        | q18 : int(1..3)])
                   | q21 : int(1..2), q21 < q25])
          /\
          and([and([b_ExplicitWithFlags_Flags[q22] > 0,
                    !or([a_MOccurrence[q20] > 0 /\ q20 = b_ExplicitWithFlags_Values[q22] | q20 : int(1..2)]),
                    b_ExplicitWithFlags_Values[q22] < q25;
                        int(1..3)])
               ->
               a_MOccurrence[b_ExplicitWithFlags_Values[q22]] =
               sum([toInt(b_ExplicitWithFlags_Values[q18] = b_ExplicitWithFlags_Values[q22]) *
                    catchUndef(b_ExplicitWithFlags_Flags[q18], 0)
                        | q18 : int(1..3)])
                   | q22 : int(1..3)])))
            | q25 : int(1..2)])
    \/
    or([b_ExplicitWithFlags_Flags[q26] > 0 /\
        !or([a_MOccurrence[q24] > 0 /\ q24 = b_ExplicitWithFlags_Values[q26] | q24 : int(1..2)])
        /\
        (a_MOccurrence[b_ExplicitWithFlags_Values[q26]] <
         sum([toInt(b_ExplicitWithFlags_Values[q17] = b_ExplicitWithFlags_Values[q26]) *
              catchUndef(b_ExplicitWithFlags_Flags[q17], 0)
                  | q17 : int(1..3)])
         /\
         (and([q21 < b_ExplicitWithFlags_Values[q26] ->
               (a_MOccurrence[q21] > 0 ->
                a_MOccurrence[q21] =
                sum([toInt(b_ExplicitWithFlags_Values[q18] = q21) * catchUndef(b_ExplicitWithFlags_Flags[q18], 0)
                         | q18 : int(1..3)]))
                   | q21 : int(1..2)])
          /\
          and([and([b_ExplicitWithFlags_Flags[q22] > 0,
                    !or([a_MOccurrence[q20] > 0 /\ q20 = b_ExplicitWithFlags_Values[q22] | q20 : int(1..2)]),
                    b_ExplicitWithFlags_Values[q22] < b_ExplicitWithFlags_Values[q26];
                        int(1..3)])
               ->
               a_MOccurrence[b_ExplicitWithFlags_Values[q22]] =
               sum([toInt(b_ExplicitWithFlags_Values[q18] = b_ExplicitWithFlags_Values[q22]) *
                    catchUndef(b_ExplicitWithFlags_Flags[q18], 0)
                        | q18 : int(1..3)])
                   | q22 : int(1..3)])))
            | q26 : int(1..3)]),
    3 = sum([a_MOccurrence[q1] | q1 : int(1..2)]),
    and([b_ExplicitWithFlags_Flags[q2 + 1] > 0 -> b_ExplicitWithFlags_Values[q2] < b_ExplicitWithFlags_Values[q2 + 1]
             | q2 : int(1..2)]),
    and([b_ExplicitWithFlags_Flags[q3] = 0 -> b_ExplicitWithFlags_Values[q3] = 1 | q3 : int(1..3)]),
    and([b_ExplicitWithFlags_Flags[q4 + 1] > 0 -> b_ExplicitWithFlags_Flags[q4] > 0 | q4 : int(1..2)]),
    3 = sum([b_ExplicitWithFlags_Flags[q7] | q7 : int(1..3)]),
    3 = sum([b_MOccurrence[q9] | q9 : int(1..2)]),
    and([b_MOccurrence[q11] > 0 ->
         b_MOccurrence[q11] =
         sum([toInt(b_ExplicitWithFlags_Values[q12] = q11) * catchUndef(b_ExplicitWithFlags_Flags[q12], 0)
                  | q12 : int(1..3)])
             | q11 : int(1..2)]),
    and([b_ExplicitWithFlags_Flags[q13] > 0 ->
         b_MOccurrence[b_ExplicitWithFlags_Values[q13]] =
         sum([toInt(b_ExplicitWithFlags_Values[q14] = b_ExplicitWithFlags_Values[q13]) *
              catchUndef(b_ExplicitWithFlags_Flags[q14], 0)
                  | q14 : int(1..3)])
             | q13 : int(1..3)])

