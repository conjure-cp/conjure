language ESSENCE' 1.0

find a_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
find b_ExplicitWithFlags_Flags: matrix indexed by [int(1..3)] of int(0..3)
find b_ExplicitWithFlags_Values: matrix indexed by [int(1..3)] of int(1..2)
branching on [a_MOccurrence, b_ExplicitWithFlags_Flags, b_ExplicitWithFlags_Values]
such that
    or([a_MOccurrence[q19] > 0 /\
        (a_MOccurrence[q19] <
         sum([toInt(b_ExplicitWithFlags_Values[q11] = q19) * catchUndef(b_ExplicitWithFlags_Flags[q11], 0)
                  | q11 : int(1..3)])
         /\
         (and([a_MOccurrence[q15] > 0 ->
               a_MOccurrence[q15] =
               sum([toInt(b_ExplicitWithFlags_Values[q12] = q15) * catchUndef(b_ExplicitWithFlags_Flags[q12], 0)
                        | q12 : int(1..3)])
                   | q15 : int(1..2), q15 < q19])
          /\
          and([and([b_ExplicitWithFlags_Flags[q16] > 0,
                    !or([a_MOccurrence[q14] > 0 /\ q14 = b_ExplicitWithFlags_Values[q16] | q14 : int(1..2)]),
                    b_ExplicitWithFlags_Values[q16] < q19;
                        int(1..3)])
               ->
               a_MOccurrence[b_ExplicitWithFlags_Values[q16]] =
               sum([toInt(b_ExplicitWithFlags_Values[q12] = b_ExplicitWithFlags_Values[q16]) *
                    catchUndef(b_ExplicitWithFlags_Flags[q12], 0)
                        | q12 : int(1..3)])
                   | q16 : int(1..3)])))
            | q19 : int(1..2)])
    \/
    or([b_ExplicitWithFlags_Flags[q20] > 0 /\
        !or([a_MOccurrence[q18] > 0 /\ q18 = b_ExplicitWithFlags_Values[q20] | q18 : int(1..2)])
        /\
        (a_MOccurrence[b_ExplicitWithFlags_Values[q20]] <
         sum([toInt(b_ExplicitWithFlags_Values[q11] = b_ExplicitWithFlags_Values[q20]) *
              catchUndef(b_ExplicitWithFlags_Flags[q11], 0)
                  | q11 : int(1..3)])
         /\
         (and([q15 < b_ExplicitWithFlags_Values[q20] ->
               (a_MOccurrence[q15] > 0 ->
                a_MOccurrence[q15] =
                sum([toInt(b_ExplicitWithFlags_Values[q12] = q15) * catchUndef(b_ExplicitWithFlags_Flags[q12], 0)
                         | q12 : int(1..3)]))
                   | q15 : int(1..2)])
          /\
          and([and([b_ExplicitWithFlags_Flags[q16] > 0,
                    !or([a_MOccurrence[q14] > 0 /\ q14 = b_ExplicitWithFlags_Values[q16] | q14 : int(1..2)]),
                    b_ExplicitWithFlags_Values[q16] < b_ExplicitWithFlags_Values[q20];
                        int(1..3)])
               ->
               a_MOccurrence[b_ExplicitWithFlags_Values[q16]] =
               sum([toInt(b_ExplicitWithFlags_Values[q12] = b_ExplicitWithFlags_Values[q16]) *
                    catchUndef(b_ExplicitWithFlags_Flags[q12], 0)
                        | q12 : int(1..3)])
                   | q16 : int(1..3)])))
            | q20 : int(1..3)]),
    3 = sum([a_MOccurrence[q1] | q1 : int(1..2)]),
    and([b_ExplicitWithFlags_Flags[q2 + 1] > 0 -> b_ExplicitWithFlags_Values[q2] < b_ExplicitWithFlags_Values[q2 + 1]
             | q2 : int(1..2)]),
    and([b_ExplicitWithFlags_Flags[q3] = 0 -> b_ExplicitWithFlags_Values[q3] = 1 | q3 : int(1..3)]),
    and([b_ExplicitWithFlags_Flags[q4 + 1] > 0 -> b_ExplicitWithFlags_Flags[q4] > 0 | q4 : int(1..2)]),
    3 = sum([b_ExplicitWithFlags_Flags[q7] | q7 : int(1..3)])

