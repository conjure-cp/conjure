language ESSENCE' 1.0

find a_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
find a_ExplicitWithFlags_Flags: matrix indexed by [int(1..3)] of int(0..3)
find a_ExplicitWithFlags_Values: matrix indexed by [int(1..3)] of int(1..2)
find b_ExplicitWithFlags_Flags: matrix indexed by [int(1..3)] of int(0..3)
find b_ExplicitWithFlags_Values: matrix indexed by [int(1..3)] of int(1..2)
branching on
    [a_ExplicitWithFlags_Flags, a_ExplicitWithFlags_Values, a_MOccurrence, b_ExplicitWithFlags_Flags,
     b_ExplicitWithFlags_Values]
such that
    or([a_MOccurrence[q29] > 0 /\
        (a_MOccurrence[q29] <
         sum([toInt(b_ExplicitWithFlags_Values[q21] = q29) * catchUndef(b_ExplicitWithFlags_Flags[q21], 0)
                  | q21 : int(1..3)])
         /\
         (and([a_MOccurrence[q25] > 0 ->
               a_MOccurrence[q25] =
               sum([toInt(b_ExplicitWithFlags_Values[q22] = q25) * catchUndef(b_ExplicitWithFlags_Flags[q22], 0)
                        | q22 : int(1..3)])
                   | q25 : int(1..2), q25 < q29])
          /\
          and([and([b_ExplicitWithFlags_Flags[q26] > 0,
                    !or([a_MOccurrence[q24] > 0 /\ q24 = b_ExplicitWithFlags_Values[q26] | q24 : int(1..2)]),
                    b_ExplicitWithFlags_Values[q26] < q29;
                        int(1..3)])
               ->
               a_MOccurrence[b_ExplicitWithFlags_Values[q26]] =
               sum([toInt(b_ExplicitWithFlags_Values[q22] = b_ExplicitWithFlags_Values[q26]) *
                    catchUndef(b_ExplicitWithFlags_Flags[q22], 0)
                        | q22 : int(1..3)])
                   | q26 : int(1..3)])))
            | q29 : int(1..2)])
    \/
    or([b_ExplicitWithFlags_Flags[q30] > 0 /\
        !or([a_MOccurrence[q28] > 0 /\ q28 = b_ExplicitWithFlags_Values[q30] | q28 : int(1..2)])
        /\
        (a_MOccurrence[b_ExplicitWithFlags_Values[q30]] <
         sum([toInt(b_ExplicitWithFlags_Values[q21] = b_ExplicitWithFlags_Values[q30]) *
              catchUndef(b_ExplicitWithFlags_Flags[q21], 0)
                  | q21 : int(1..3)])
         /\
         (and([q25 < b_ExplicitWithFlags_Values[q30] ->
               (a_MOccurrence[q25] > 0 ->
                a_MOccurrence[q25] =
                sum([toInt(b_ExplicitWithFlags_Values[q22] = q25) * catchUndef(b_ExplicitWithFlags_Flags[q22], 0)
                         | q22 : int(1..3)]))
                   | q25 : int(1..2)])
          /\
          and([and([b_ExplicitWithFlags_Flags[q26] > 0,
                    !or([a_MOccurrence[q24] > 0 /\ q24 = b_ExplicitWithFlags_Values[q26] | q24 : int(1..2)]),
                    b_ExplicitWithFlags_Values[q26] < b_ExplicitWithFlags_Values[q30];
                        int(1..3)])
               ->
               a_MOccurrence[b_ExplicitWithFlags_Values[q26]] =
               sum([toInt(b_ExplicitWithFlags_Values[q22] = b_ExplicitWithFlags_Values[q26]) *
                    catchUndef(b_ExplicitWithFlags_Flags[q22], 0)
                        | q22 : int(1..3)])
                   | q26 : int(1..3)])))
            | q30 : int(1..3)]),
    3 = sum([a_MOccurrence[q1] | q1 : int(1..2)]),
    and([b_ExplicitWithFlags_Flags[q2 + 1] > 0 -> b_ExplicitWithFlags_Values[q2] < b_ExplicitWithFlags_Values[q2 + 1]
             | q2 : int(1..2)]),
    and([b_ExplicitWithFlags_Flags[q3] = 0 -> b_ExplicitWithFlags_Values[q3] = 1 | q3 : int(1..3)]),
    and([b_ExplicitWithFlags_Flags[q4 + 1] > 0 -> b_ExplicitWithFlags_Flags[q4] > 0 | q4 : int(1..2)]),
    3 = sum([b_ExplicitWithFlags_Flags[q6] | q6 : int(1..3)]),
    and([a_ExplicitWithFlags_Flags[q8 + 1] > 0 -> a_ExplicitWithFlags_Values[q8] < a_ExplicitWithFlags_Values[q8 + 1]
             | q8 : int(1..2)]),
    and([a_ExplicitWithFlags_Flags[q9] = 0 -> a_ExplicitWithFlags_Values[q9] = 1 | q9 : int(1..3)]),
    and([a_ExplicitWithFlags_Flags[q10 + 1] > 0 -> a_ExplicitWithFlags_Flags[q10] > 0 | q10 : int(1..2)]),
    3 = sum([a_ExplicitWithFlags_Flags[q12] | q12 : int(1..3)]),
    and([a_ExplicitWithFlags_Flags[q15] > 0 ->
         sum([toInt(a_ExplicitWithFlags_Values[q16] = a_ExplicitWithFlags_Values[q15]) *
              catchUndef(a_ExplicitWithFlags_Flags[q16], 0)
                  | q16 : int(1..3)])
         = a_MOccurrence[a_ExplicitWithFlags_Values[q15]]
             | q15 : int(1..3)]),
    and([a_MOccurrence[q17] > 0 ->
         sum([toInt(a_ExplicitWithFlags_Values[q18] = q17) * catchUndef(a_ExplicitWithFlags_Flags[q18], 0)
                  | q18 : int(1..3)])
         = a_MOccurrence[q17]
             | q17 : int(1..2)])

