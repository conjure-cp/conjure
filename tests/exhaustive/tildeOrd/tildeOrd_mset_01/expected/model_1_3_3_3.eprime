language ESSENCE' 1.0

find a_ExplicitWithFlags_Flags: matrix indexed by [int(1..3)] of int(0..3)
find a_ExplicitWithFlags_Values: matrix indexed by [int(1..3)] of int(1..2)
find a_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
find b_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
branching on [a_MOccurrence, a_ExplicitWithFlags_Flags, a_ExplicitWithFlags_Values, b_MOccurrence]
such that
    or([a_ExplicitWithFlags_Flags[q24] > 0 /\
        (sum([toInt(a_ExplicitWithFlags_Values[q16] = a_ExplicitWithFlags_Values[q24]) *
              catchUndef(a_ExplicitWithFlags_Flags[q16], 0)
                  | q16 : int(1..3)])
         < b_MOccurrence[a_ExplicitWithFlags_Values[q24]]
         /\
         (and([a_ExplicitWithFlags_Flags[q20] > 0 /\ a_ExplicitWithFlags_Values[q20] < a_ExplicitWithFlags_Values[q24]
               ->
               sum([toInt(a_ExplicitWithFlags_Values[q17] = a_ExplicitWithFlags_Values[q20]) *
                    catchUndef(a_ExplicitWithFlags_Flags[q17], 0)
                        | q17 : int(1..3)])
               = b_MOccurrence[a_ExplicitWithFlags_Values[q20]]
                   | q20 : int(1..3)])
          /\
          and([q21 < a_ExplicitWithFlags_Values[q24] ->
               (b_MOccurrence[q21] > 0 /\
                !or([a_ExplicitWithFlags_Flags[q19] > 0 /\ a_ExplicitWithFlags_Values[q19] = q21 | q19 : int(1..3)])
                ->
                sum([toInt(a_ExplicitWithFlags_Values[q17] = q21) * catchUndef(a_ExplicitWithFlags_Flags[q17], 0)
                         | q17 : int(1..3)])
                = b_MOccurrence[q21])
                   | q21 : int(1..2)])))
            | q24 : int(1..3)])
    \/
    or([b_MOccurrence[q25] > 0 /\
        !or([a_ExplicitWithFlags_Flags[q23] > 0 /\ a_ExplicitWithFlags_Values[q23] = q25 | q23 : int(1..3)])
        /\
        (sum([toInt(a_ExplicitWithFlags_Values[q16] = q25) * catchUndef(a_ExplicitWithFlags_Flags[q16], 0)
                  | q16 : int(1..3)])
         < b_MOccurrence[q25]
         /\
         (and([a_ExplicitWithFlags_Flags[q20] > 0 /\ a_ExplicitWithFlags_Values[q20] < q25 ->
               sum([toInt(a_ExplicitWithFlags_Values[q17] = a_ExplicitWithFlags_Values[q20]) *
                    catchUndef(a_ExplicitWithFlags_Flags[q17], 0)
                        | q17 : int(1..3)])
               = b_MOccurrence[a_ExplicitWithFlags_Values[q20]]
                   | q20 : int(1..3)])
          /\
          and([b_MOccurrence[q21] > 0 /\
               !or([a_ExplicitWithFlags_Flags[q19] > 0 /\ a_ExplicitWithFlags_Values[q19] = q21 | q19 : int(1..3)])
               ->
               sum([toInt(a_ExplicitWithFlags_Values[q17] = q21) * catchUndef(a_ExplicitWithFlags_Flags[q17], 0)
                        | q17 : int(1..3)])
               = b_MOccurrence[q21]
                   | q21 : int(1..2), q21 < q25])))
            | q25 : int(1..2)]),
    and([a_ExplicitWithFlags_Flags[q1 + 1] > 0 -> a_ExplicitWithFlags_Values[q1] < a_ExplicitWithFlags_Values[q1 + 1]
             | q1 : int(1..2)]),
    and([a_ExplicitWithFlags_Flags[q2] = 0 -> a_ExplicitWithFlags_Values[q2] = 1 | q2 : int(1..3)]),
    and([a_ExplicitWithFlags_Flags[q3 + 1] > 0 -> a_ExplicitWithFlags_Flags[q3] > 0 | q3 : int(1..2)]),
    3 = sum([a_ExplicitWithFlags_Flags[q5] | q5 : int(1..3)]),
    3 = sum([b_MOccurrence[q7] | q7 : int(1..2)]),
    3 = sum([a_MOccurrence[q8] | q8 : int(1..2)]),
    and([a_MOccurrence[q10] > 0 ->
         a_MOccurrence[q10] =
         sum([toInt(a_ExplicitWithFlags_Values[q11] = q10) * catchUndef(a_ExplicitWithFlags_Flags[q11], 0)
                  | q11 : int(1..3)])
             | q10 : int(1..2)]),
    and([a_ExplicitWithFlags_Flags[q12] > 0 ->
         a_MOccurrence[a_ExplicitWithFlags_Values[q12]] =
         sum([toInt(a_ExplicitWithFlags_Values[q13] = a_ExplicitWithFlags_Values[q12]) *
              catchUndef(a_ExplicitWithFlags_Flags[q13], 0)
                  | q13 : int(1..3)])
             | q12 : int(1..3)])

