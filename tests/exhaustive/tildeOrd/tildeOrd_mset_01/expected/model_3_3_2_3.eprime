language ESSENCE' 1.0

find a_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
find a_ExplicitWithRepetition_Flag: int(3)
find a_ExplicitWithRepetition_Values: matrix indexed by [int(1..3)] of int(1..2)
find b_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
branching on [a_ExplicitWithRepetition_Flag, a_ExplicitWithRepetition_Values, a_MOccurrence, b_MOccurrence]
such that
    or([a_MOccurrence[q23] > 0 /\
        (a_MOccurrence[q23] < b_MOccurrence[q23] /\
         (and([a_MOccurrence[q19] > 0 -> a_MOccurrence[q19] = b_MOccurrence[q19] | q19 : int(1..2), q19 < q23]) /\
          and([b_MOccurrence[q20] > 0 /\ !or([a_MOccurrence[q18] > 0 /\ q18 = q20 | q18 : int(1..2)]) ->
               a_MOccurrence[q20] = b_MOccurrence[q20]
                   | q20 : int(1..2), q20 < q23])))
            | q23 : int(1..2)])
    \/
    or([b_MOccurrence[q24] > 0 /\ !or([a_MOccurrence[q22] > 0 /\ q22 = q24 | q22 : int(1..2)]) /\
        (a_MOccurrence[q24] < b_MOccurrence[q24] /\
         (and([a_MOccurrence[q19] > 0 -> a_MOccurrence[q19] = b_MOccurrence[q19] | q19 : int(1..2), q19 < q24]) /\
          and([b_MOccurrence[q20] > 0 /\ !or([a_MOccurrence[q18] > 0 /\ q18 = q20 | q18 : int(1..2)]) ->
               a_MOccurrence[q20] = b_MOccurrence[q20]
                   | q20 : int(1..2), q20 < q24])))
            | q24 : int(1..2)]),
    3 = sum([a_MOccurrence[q1] | q1 : int(1..2)]),
    3 = sum([b_MOccurrence[q2] | q2 : int(1..2)]),
    and([a_ExplicitWithRepetition_Values[q3] <= a_ExplicitWithRepetition_Values[q3 + 1] | q3 : int(1..2), q3 + 1 <= 3]),
    and([sum([toInt(a_ExplicitWithRepetition_Values[q11] = a_ExplicitWithRepetition_Values[q9])
                  | q11 : int(1..3), q11 <= 3])
         = a_MOccurrence[a_ExplicitWithRepetition_Values[q9]]
             | q9 : int(1..3), q9 <= 3]),
    and([a_MOccurrence[q12] > 0 ->
         sum([toInt(a_ExplicitWithRepetition_Values[q14] = q12) | q14 : int(1..3), q14 <= 3]) = a_MOccurrence[q12]
             | q12 : int(1..2)])

