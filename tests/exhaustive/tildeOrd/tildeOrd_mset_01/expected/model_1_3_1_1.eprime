language ESSENCE' 1.0

find a_ExplicitWithFlags_Flags: matrix indexed by [int(1..3)] of int(0..3)
find a_ExplicitWithFlags_Values: matrix indexed by [int(1..3)] of int(1..2)
find b_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
find b_ExplicitWithFlags_Flags: matrix indexed by [int(1..3)] of int(0..3)
find b_ExplicitWithFlags_Values: matrix indexed by [int(1..3)] of int(1..2)
branching on
    [a_ExplicitWithFlags_Flags, a_ExplicitWithFlags_Values, b_ExplicitWithFlags_Flags, b_ExplicitWithFlags_Values,
     b_MOccurrence]
such that
    or([a_ExplicitWithFlags_Flags[q29] > 0 /\
        (sum([toInt(a_ExplicitWithFlags_Values[q21] = a_ExplicitWithFlags_Values[q29]) *
              catchUndef(a_ExplicitWithFlags_Flags[q21], 0)
                  | q21 : int(1..3)])
         < b_MOccurrence[a_ExplicitWithFlags_Values[q29]]
         /\
         (and([a_ExplicitWithFlags_Flags[q25] > 0 /\ a_ExplicitWithFlags_Values[q25] < a_ExplicitWithFlags_Values[q29]
               ->
               sum([toInt(a_ExplicitWithFlags_Values[q22] = a_ExplicitWithFlags_Values[q25]) *
                    catchUndef(a_ExplicitWithFlags_Flags[q22], 0)
                        | q22 : int(1..3)])
               = b_MOccurrence[a_ExplicitWithFlags_Values[q25]]
                   | q25 : int(1..3)])
          /\
          and([q26 < a_ExplicitWithFlags_Values[q29] ->
               (b_MOccurrence[q26] > 0 /\
                !or([a_ExplicitWithFlags_Flags[q24] > 0 /\ a_ExplicitWithFlags_Values[q24] = q26 | q24 : int(1..3)])
                ->
                sum([toInt(a_ExplicitWithFlags_Values[q22] = q26) * catchUndef(a_ExplicitWithFlags_Flags[q22], 0)
                         | q22 : int(1..3)])
                = b_MOccurrence[q26])
                   | q26 : int(1..2)])))
            | q29 : int(1..3)])
    \/
    or([b_MOccurrence[q30] > 0 /\
        !or([a_ExplicitWithFlags_Flags[q28] > 0 /\ a_ExplicitWithFlags_Values[q28] = q30 | q28 : int(1..3)])
        /\
        (sum([toInt(a_ExplicitWithFlags_Values[q21] = q30) * catchUndef(a_ExplicitWithFlags_Flags[q21], 0)
                  | q21 : int(1..3)])
         < b_MOccurrence[q30]
         /\
         (and([a_ExplicitWithFlags_Flags[q25] > 0 /\ a_ExplicitWithFlags_Values[q25] < q30 ->
               sum([toInt(a_ExplicitWithFlags_Values[q22] = a_ExplicitWithFlags_Values[q25]) *
                    catchUndef(a_ExplicitWithFlags_Flags[q22], 0)
                        | q22 : int(1..3)])
               = b_MOccurrence[a_ExplicitWithFlags_Values[q25]]
                   | q25 : int(1..3)])
          /\
          and([b_MOccurrence[q26] > 0 /\
               !or([a_ExplicitWithFlags_Flags[q24] > 0 /\ a_ExplicitWithFlags_Values[q24] = q26 | q24 : int(1..3)])
               ->
               sum([toInt(a_ExplicitWithFlags_Values[q22] = q26) * catchUndef(a_ExplicitWithFlags_Flags[q22], 0)
                        | q22 : int(1..3)])
               = b_MOccurrence[q26]
                   | q26 : int(1..2), q26 < q30])))
            | q30 : int(1..2)]),
    and([a_ExplicitWithFlags_Flags[q1 + 1] > 0 -> a_ExplicitWithFlags_Values[q1] < a_ExplicitWithFlags_Values[q1 + 1]
             | q1 : int(1..2)]),
    and([a_ExplicitWithFlags_Flags[q2] = 0 -> a_ExplicitWithFlags_Values[q2] = 1 | q2 : int(1..3)]),
    and([a_ExplicitWithFlags_Flags[q3 + 1] > 0 -> a_ExplicitWithFlags_Flags[q3] > 0 | q3 : int(1..2)]),
    3 = sum([a_ExplicitWithFlags_Flags[q5] | q5 : int(1..3)]),
    3 = sum([b_MOccurrence[q7] | q7 : int(1..2)]),
    and([b_ExplicitWithFlags_Flags[q8 + 1] > 0 -> b_ExplicitWithFlags_Values[q8] < b_ExplicitWithFlags_Values[q8 + 1]
             | q8 : int(1..2)]),
    and([b_ExplicitWithFlags_Flags[q9] = 0 -> b_ExplicitWithFlags_Values[q9] = 1 | q9 : int(1..3)]),
    and([b_ExplicitWithFlags_Flags[q10 + 1] > 0 -> b_ExplicitWithFlags_Flags[q10] > 0 | q10 : int(1..2)]),
    3 = sum([b_ExplicitWithFlags_Flags[q12] | q12 : int(1..3)]),
    and([b_ExplicitWithFlags_Flags[q15] > 0 ->
         sum([toInt(b_ExplicitWithFlags_Values[q16] = b_ExplicitWithFlags_Values[q15]) *
              catchUndef(b_ExplicitWithFlags_Flags[q16], 0)
                  | q16 : int(1..3)])
         = b_MOccurrence[b_ExplicitWithFlags_Values[q15]]
             | q15 : int(1..3)]),
    and([b_MOccurrence[q17] > 0 ->
         sum([toInt(b_ExplicitWithFlags_Values[q18] = q17) * catchUndef(b_ExplicitWithFlags_Flags[q18], 0)
                  | q18 : int(1..3)])
         = b_MOccurrence[q17]
             | q17 : int(1..2)])

