language ESSENCE' 1.0

find a_ExplicitWithFlags_Flags: matrix indexed by [int(1..3)] of int(0..3)
find a_ExplicitWithFlags_Values: matrix indexed by [int(1..3)] of int(1..2)
find b_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
branching on [a_ExplicitWithFlags_Flags, a_ExplicitWithFlags_Values, b_MOccurrence]
such that
    or([a_ExplicitWithFlags_Flags[q18] > 0 /\
        (sum([toInt(a_ExplicitWithFlags_Values[q10] = a_ExplicitWithFlags_Values[q18]) *
              catchUndef(a_ExplicitWithFlags_Flags[q10], 0)
                  | q10 : int(1..3)])
         < b_MOccurrence[a_ExplicitWithFlags_Values[q18]]
         /\
         (and([a_ExplicitWithFlags_Flags[q14] > 0 /\ a_ExplicitWithFlags_Values[q14] < a_ExplicitWithFlags_Values[q18]
               ->
               sum([toInt(a_ExplicitWithFlags_Values[q11] = a_ExplicitWithFlags_Values[q14]) *
                    catchUndef(a_ExplicitWithFlags_Flags[q11], 0)
                        | q11 : int(1..3)])
               = b_MOccurrence[a_ExplicitWithFlags_Values[q14]]
                   | q14 : int(1..3)])
          /\
          and([q15 < a_ExplicitWithFlags_Values[q18] ->
               (b_MOccurrence[q15] > 0 /\
                !or([a_ExplicitWithFlags_Flags[q13] > 0 /\ a_ExplicitWithFlags_Values[q13] = q15 | q13 : int(1..3)])
                ->
                sum([toInt(a_ExplicitWithFlags_Values[q11] = q15) * catchUndef(a_ExplicitWithFlags_Flags[q11], 0)
                         | q11 : int(1..3)])
                = b_MOccurrence[q15])
                   | q15 : int(1..2)])))
            | q18 : int(1..3)])
    \/
    or([b_MOccurrence[q19] > 0 /\
        !or([a_ExplicitWithFlags_Flags[q17] > 0 /\ a_ExplicitWithFlags_Values[q17] = q19 | q17 : int(1..3)])
        /\
        (sum([toInt(a_ExplicitWithFlags_Values[q10] = q19) * catchUndef(a_ExplicitWithFlags_Flags[q10], 0)
                  | q10 : int(1..3)])
         < b_MOccurrence[q19]
         /\
         (and([a_ExplicitWithFlags_Flags[q14] > 0 /\ a_ExplicitWithFlags_Values[q14] < q19 ->
               sum([toInt(a_ExplicitWithFlags_Values[q11] = a_ExplicitWithFlags_Values[q14]) *
                    catchUndef(a_ExplicitWithFlags_Flags[q11], 0)
                        | q11 : int(1..3)])
               = b_MOccurrence[a_ExplicitWithFlags_Values[q14]]
                   | q14 : int(1..3)])
          /\
          and([b_MOccurrence[q15] > 0 /\
               !or([a_ExplicitWithFlags_Flags[q13] > 0 /\ a_ExplicitWithFlags_Values[q13] = q15 | q13 : int(1..3)])
               ->
               sum([toInt(a_ExplicitWithFlags_Values[q11] = q15) * catchUndef(a_ExplicitWithFlags_Flags[q11], 0)
                        | q11 : int(1..3)])
               = b_MOccurrence[q15]
                   | q15 : int(1..2), q15 < q19])))
            | q19 : int(1..2)]),
    and([a_ExplicitWithFlags_Flags[q1 + 1] > 0 -> a_ExplicitWithFlags_Values[q1] < a_ExplicitWithFlags_Values[q1 + 1]
             | q1 : int(1..2)]),
    and([a_ExplicitWithFlags_Flags[q2] = 0 -> a_ExplicitWithFlags_Values[q2] = 1 | q2 : int(1..3)]),
    and([a_ExplicitWithFlags_Flags[q3 + 1] > 0 -> a_ExplicitWithFlags_Flags[q3] > 0 | q3 : int(1..2)]),
    3 = sum([a_ExplicitWithFlags_Flags[q5] | q5 : int(1..3)]),
    3 = sum([b_MOccurrence[q7] | q7 : int(1..2)])

