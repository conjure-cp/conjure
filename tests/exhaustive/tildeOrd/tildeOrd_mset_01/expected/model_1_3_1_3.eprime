language ESSENCE' 1.0

find a_ExplicitWithFlags_Flags: matrix indexed by [int(1..3)] of int(0..3)
find a_ExplicitWithFlags_Values: matrix indexed by [int(1..3)] of int(1..2)
find b_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
branching on [a_ExplicitWithFlags_Flags, a_ExplicitWithFlags_Values, b_MOccurrence]
such that
    or([a_ExplicitWithFlags_Flags[q19] > 0 /\
        (sum([toInt(a_ExplicitWithFlags_Values[q11] = a_ExplicitWithFlags_Values[q19]) *
              catchUndef(a_ExplicitWithFlags_Flags[q11], 0)
                  | q11 : int(1..3)])
         < b_MOccurrence[a_ExplicitWithFlags_Values[q19]]
         /\
         (and([a_ExplicitWithFlags_Flags[q15] > 0 /\ a_ExplicitWithFlags_Values[q15] < a_ExplicitWithFlags_Values[q19]
               ->
               sum([toInt(a_ExplicitWithFlags_Values[q12] = a_ExplicitWithFlags_Values[q15]) *
                    catchUndef(a_ExplicitWithFlags_Flags[q12], 0)
                        | q12 : int(1..3)])
               = b_MOccurrence[a_ExplicitWithFlags_Values[q15]]
                   | q15 : int(1..3)])
          /\
          and([q16 < a_ExplicitWithFlags_Values[q19] ->
               (b_MOccurrence[q16] > 0 /\
                !or([a_ExplicitWithFlags_Flags[q14] > 0 /\ a_ExplicitWithFlags_Values[q14] = q16 | q14 : int(1..3)])
                ->
                sum([toInt(a_ExplicitWithFlags_Values[q12] = q16) * catchUndef(a_ExplicitWithFlags_Flags[q12], 0)
                         | q12 : int(1..3)])
                = b_MOccurrence[q16])
                   | q16 : int(1..2)])))
            | q19 : int(1..3)])
    \/
    or([b_MOccurrence[q20] > 0 /\
        !or([a_ExplicitWithFlags_Flags[q18] > 0 /\ a_ExplicitWithFlags_Values[q18] = q20 | q18 : int(1..3)])
        /\
        (sum([toInt(a_ExplicitWithFlags_Values[q11] = q20) * catchUndef(a_ExplicitWithFlags_Flags[q11], 0)
                  | q11 : int(1..3)])
         < b_MOccurrence[q20]
         /\
         (and([a_ExplicitWithFlags_Flags[q15] > 0 /\ a_ExplicitWithFlags_Values[q15] < q20 ->
               sum([toInt(a_ExplicitWithFlags_Values[q12] = a_ExplicitWithFlags_Values[q15]) *
                    catchUndef(a_ExplicitWithFlags_Flags[q12], 0)
                        | q12 : int(1..3)])
               = b_MOccurrence[a_ExplicitWithFlags_Values[q15]]
                   | q15 : int(1..3)])
          /\
          and([b_MOccurrence[q16] > 0 /\
               !or([a_ExplicitWithFlags_Flags[q14] > 0 /\ a_ExplicitWithFlags_Values[q14] = q16 | q14 : int(1..3)])
               ->
               sum([toInt(a_ExplicitWithFlags_Values[q12] = q16) * catchUndef(a_ExplicitWithFlags_Flags[q12], 0)
                        | q12 : int(1..3)])
               = b_MOccurrence[q16]
                   | q16 : int(1..2), q16 < q20])))
            | q20 : int(1..2)]),
    and([a_ExplicitWithFlags_Flags[q1 + 1] > 0 -> a_ExplicitWithFlags_Values[q1] < a_ExplicitWithFlags_Values[q1 + 1]
             | q1 : int(1..2)]),
    and([a_ExplicitWithFlags_Flags[q2] = 0 -> a_ExplicitWithFlags_Values[q2] = 1 | q2 : int(1..3)]),
    and([a_ExplicitWithFlags_Flags[q3 + 1] > 0 -> a_ExplicitWithFlags_Flags[q3] > 0 | q3 : int(1..2)]),
    3 = sum([a_ExplicitWithFlags_Flags[q6] | q6 : int(1..3)]),
    3 = sum([b_MOccurrence[q8] | q8 : int(1..2)])

