language ESSENCE' 1.0

find a_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
find a_ExplicitWithFlags_Flags: matrix indexed by [int(1..3)] of int(0..3)
find a_ExplicitWithFlags_Values: matrix indexed by [int(1..3)] of int(1..2)
find b_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
find b_ExplicitWithFlags_Flags: matrix indexed by [int(1..3)] of int(0..3)
find b_ExplicitWithFlags_Values: matrix indexed by [int(1..3)] of int(1..2)
branching on
    [a_ExplicitWithFlags_Flags, a_ExplicitWithFlags_Values, a_MOccurrence, b_ExplicitWithFlags_Flags,
     b_ExplicitWithFlags_Values, b_MOccurrence]
such that
    or([a_MOccurrence[q33] > 0 /\
        (a_MOccurrence[q33] < b_MOccurrence[q33] /\
         (and([a_MOccurrence[q29] > 0 -> a_MOccurrence[q29] = b_MOccurrence[q29] | q29 : int(1..2), q29 < q33]) /\
          and([b_MOccurrence[q30] > 0 /\ !or([a_MOccurrence[q28] > 0 /\ q28 = q30 | q28 : int(1..2)]) ->
               a_MOccurrence[q30] = b_MOccurrence[q30]
                   | q30 : int(1..2), q30 < q33])))
            | q33 : int(1..2)])
    \/
    or([b_MOccurrence[q34] > 0 /\ !or([a_MOccurrence[q32] > 0 /\ q32 = q34 | q32 : int(1..2)]) /\
        (a_MOccurrence[q34] < b_MOccurrence[q34] /\
         (and([a_MOccurrence[q29] > 0 -> a_MOccurrence[q29] = b_MOccurrence[q29] | q29 : int(1..2), q29 < q34]) /\
          and([b_MOccurrence[q30] > 0 /\ !or([a_MOccurrence[q28] > 0 /\ q28 = q30 | q28 : int(1..2)]) ->
               a_MOccurrence[q30] = b_MOccurrence[q30]
                   | q30 : int(1..2), q30 < q34])))
            | q34 : int(1..2)]),
    3 = sum([a_MOccurrence[q1] | q1 : int(1..2)]),
    3 = sum([b_MOccurrence[q2] | q2 : int(1..2)]),
    and([a_ExplicitWithFlags_Flags[q3 + 1] > 0 -> a_ExplicitWithFlags_Values[q3] < a_ExplicitWithFlags_Values[q3 + 1]
             | q3 : int(1..2)]),
    and([a_ExplicitWithFlags_Flags[q4] = 0 -> a_ExplicitWithFlags_Values[q4] = 1 | q4 : int(1..3)]),
    and([a_ExplicitWithFlags_Flags[q5 + 1] > 0 -> a_ExplicitWithFlags_Flags[q5] > 0 | q5 : int(1..2)]),
    3 = sum([a_ExplicitWithFlags_Flags[q7] | q7 : int(1..3)]),
    and([a_ExplicitWithFlags_Flags[q10] > 0 ->
         sum([toInt(a_ExplicitWithFlags_Values[q11] = a_ExplicitWithFlags_Values[q10]) *
              catchUndef(a_ExplicitWithFlags_Flags[q11], 0)
                  | q11 : int(1..3)])
         = a_MOccurrence[a_ExplicitWithFlags_Values[q10]]
             | q10 : int(1..3)]),
    and([a_MOccurrence[q12] > 0 ->
         sum([toInt(a_ExplicitWithFlags_Values[q13] = q12) * catchUndef(a_ExplicitWithFlags_Flags[q13], 0)
                  | q13 : int(1..3)])
         = a_MOccurrence[q12]
             | q12 : int(1..2)]),
    and([b_ExplicitWithFlags_Flags[q14 + 1] > 0 -> b_ExplicitWithFlags_Values[q14] < b_ExplicitWithFlags_Values[q14 + 1]
             | q14 : int(1..2)]),
    and([b_ExplicitWithFlags_Flags[q15] = 0 -> b_ExplicitWithFlags_Values[q15] = 1 | q15 : int(1..3)]),
    and([b_ExplicitWithFlags_Flags[q16 + 1] > 0 -> b_ExplicitWithFlags_Flags[q16] > 0 | q16 : int(1..2)]),
    3 = sum([b_ExplicitWithFlags_Flags[q18] | q18 : int(1..3)]),
    and([b_ExplicitWithFlags_Flags[q21] > 0 ->
         sum([toInt(b_ExplicitWithFlags_Values[q22] = b_ExplicitWithFlags_Values[q21]) *
              catchUndef(b_ExplicitWithFlags_Flags[q22], 0)
                  | q22 : int(1..3)])
         = b_MOccurrence[b_ExplicitWithFlags_Values[q21]]
             | q21 : int(1..3)]),
    and([b_MOccurrence[q23] > 0 ->
         sum([toInt(b_ExplicitWithFlags_Values[q24] = q23) * catchUndef(b_ExplicitWithFlags_Flags[q24], 0)
                  | q24 : int(1..3)])
         = b_MOccurrence[q23]
             | q23 : int(1..2)])

