language ESSENCE' 1.0

find a_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
find b_MOccurrence: matrix indexed by [int(1..2)] of int(0..3)
find b_ExplicitWithFlags_Flags: matrix indexed by [int(1..3)] of int(0..3)
find b_ExplicitWithFlags_Values: matrix indexed by [int(1..3)] of int(1..2)
branching on [a_MOccurrence, b_ExplicitWithFlags_Flags, b_ExplicitWithFlags_Values, b_MOccurrence]
such that
    or([a_MOccurrence[q22] > 0 /\
        (a_MOccurrence[q22] < b_MOccurrence[q22] /\
         (and([a_MOccurrence[q18] > 0 -> a_MOccurrence[q18] = b_MOccurrence[q18] | q18 : int(1..2), q18 < q22]) /\
          and([b_MOccurrence[q19] > 0 /\ !or([a_MOccurrence[q17] > 0 /\ q17 = q19 | q17 : int(1..2)]) ->
               a_MOccurrence[q19] = b_MOccurrence[q19]
                   | q19 : int(1..2), q19 < q22])))
            | q22 : int(1..2)])
    \/
    or([b_MOccurrence[q23] > 0 /\ !or([a_MOccurrence[q21] > 0 /\ q21 = q23 | q21 : int(1..2)]) /\
        (a_MOccurrence[q23] < b_MOccurrence[q23] /\
         (and([a_MOccurrence[q18] > 0 -> a_MOccurrence[q18] = b_MOccurrence[q18] | q18 : int(1..2), q18 < q23]) /\
          and([b_MOccurrence[q19] > 0 /\ !or([a_MOccurrence[q17] > 0 /\ q17 = q19 | q17 : int(1..2)]) ->
               a_MOccurrence[q19] = b_MOccurrence[q19]
                   | q19 : int(1..2), q19 < q23])))
            | q23 : int(1..2)]),
    3 = sum([a_MOccurrence[q1] | q1 : int(1..2)]),
    3 = sum([b_MOccurrence[q2] | q2 : int(1..2)]),
    and([b_ExplicitWithFlags_Flags[q3 + 1] > 0 -> b_ExplicitWithFlags_Values[q3] < b_ExplicitWithFlags_Values[q3 + 1]
             | q3 : int(1..2)]),
    and([b_ExplicitWithFlags_Flags[q4] = 0 -> b_ExplicitWithFlags_Values[q4] = 1 | q4 : int(1..3)]),
    and([b_ExplicitWithFlags_Flags[q5 + 1] > 0 -> b_ExplicitWithFlags_Flags[q5] > 0 | q5 : int(1..2)]),
    3 = sum([b_ExplicitWithFlags_Flags[q7] | q7 : int(1..3)]),
    and([b_ExplicitWithFlags_Flags[q10] > 0 ->
         sum([toInt(b_ExplicitWithFlags_Values[q11] = b_ExplicitWithFlags_Values[q10]) *
              catchUndef(b_ExplicitWithFlags_Flags[q11], 0)
                  | q11 : int(1..3)])
         = b_MOccurrence[b_ExplicitWithFlags_Values[q10]]
             | q10 : int(1..3)]),
    and([b_MOccurrence[q12] > 0 ->
         sum([toInt(b_ExplicitWithFlags_Values[q13] = q12) * catchUndef(b_ExplicitWithFlags_Flags[q13], 0)
                  | q13 : int(1..3)])
         = b_MOccurrence[q12]
             | q12 : int(1..2)])

