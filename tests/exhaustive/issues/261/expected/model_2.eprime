language ESSENCE' 1.0

given fin1: int
letting let1 be fin1
find a_FunctionNDPartialDummy: matrix indexed by [int(0..let1)] of int(0..3)
branching on [a_FunctionNDPartialDummy]
such that
    and([a_FunctionNDPartialDummy[q1] != 0 /\ a_FunctionNDPartialDummy[q2] != 0 ->
         a_FunctionNDPartialDummy[q1] != a_FunctionNDPartialDummy[q2]
             | q1 : int(0..let1), q2 : int(0..let1), q1 < q2]),
    and([or([a_FunctionNDPartialDummy[q4] = q3 | q4 : int(0..let1)]) | q3 : int(1..3)])

