language ESSENCE' 1.0

letting n be 5
letting let1 be 4
find quasigroup_Explicit: matrix indexed by [int(1..5)] of int(0..4)
find quasigroup_Occurrence: matrix indexed by [int(0..4)] of bool
such that
    and([quasigroup_Explicit[q9] * quasigroup_Explicit[q10] * (quasigroup_Explicit[q10] * quasigroup_Explicit[q9]) =
         quasigroup_Explicit[q9]
             | q9 : int(1..5), q10 : int(1..5), q10 > q9]),
    and([quasigroup_Explicit[q1] < quasigroup_Explicit[q1 + 1] | q1 : int(1..4)]),
    5 = sum([toInt(quasigroup_Occurrence[q3]) | q3 : int(0..4)]),
    and([quasigroup_Occurrence[q4] -> or([quasigroup_Explicit[q6] = q4 | q6 : int(1..5)]) | q4 : int(0..4)]),
    and([quasigroup_Occurrence[quasigroup_Explicit[q8]] | q8 : int(1..5)])

