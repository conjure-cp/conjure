language ESSENCE' 1.0

letting n be 5
letting let1 be 4
find quasigroup_Occurrence: matrix indexed by [int(0..4)] of bool
find quasigroup_Explicit: matrix indexed by [int(1..5)] of int(0..4)
such that
    and([quasigroup_Occurrence[a] /\ quasigroup_Occurrence[b] -> a * b * (b * a) = a
             | a : int(0..4), b : int(0..4), b > a]),
    5 = sum([toInt(quasigroup_Occurrence[q1]) | q1 : int(0..4)]),
    and([quasigroup_Explicit[q2] < quasigroup_Explicit[q2 + 1] | q2 : int(1..4)]),
    and([quasigroup_Occurrence[quasigroup_Explicit[q5]] | q5 : int(1..5)]),
    and([quasigroup_Occurrence[q6] -> or([quasigroup_Explicit[q8] = q6 | q8 : int(1..5)]) | q6 : int(0..4)])

