language ESSENCE' 1.0

given fin1: int
given a_Explicit: matrix indexed by [int(1..fin1)] of int(0..5)
given fin2: int
given b_Explicit: matrix indexed by [int(1..fin2)] of int(0..5)
find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..6)] of bool
find x_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..6)] of int(0..5)
find x_Occurrence: matrix indexed by [int(0..5)] of bool
such that
    and([x_ExplicitVarSizeWithFlags_Flags[q8] ->
         or([a_Explicit[q10] = x_ExplicitVarSizeWithFlags_Values[q8]
                 | q10 : int(1..fin1), or([b_Explicit[q12] = a_Explicit[q10] | q12 : int(1..fin2)])])
             | q8 : int(1..6)]),
    and([or([x_ExplicitVarSizeWithFlags_Flags[q16] /\ x_ExplicitVarSizeWithFlags_Values[q16] = a_Explicit[q14]
                 | q16 : int(1..6)])
             | q14 : int(1..fin1), or([b_Explicit[q18] = a_Explicit[q14] | q18 : int(1..fin2)])]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Values[q1] < x_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..5)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q2] = false -> x_ExplicitVarSizeWithFlags_Values[q2] = 0 | q2 : int(1..6)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q3 + 1] -> x_ExplicitVarSizeWithFlags_Flags[q3] | q3 : int(1..5)]),
    and([x_Occurrence[q19] ->
         or([x_ExplicitVarSizeWithFlags_Flags[q21] /\ x_ExplicitVarSizeWithFlags_Values[q21] = q19 | q21 : int(1..6)])
             | q19 : int(0..5)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q23] -> x_Occurrence[x_ExplicitVarSizeWithFlags_Values[q23]]
             | q23 : int(1..6)])

