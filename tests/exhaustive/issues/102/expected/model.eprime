language ESSENCE' 1.0

letting HORIZON be 10
find actions_ExplicitBounded_Length: int(0..10)
find actions_ExplicitBounded_Values_1: matrix indexed by [int(1..10)] of int(3, 5, 8)
find actions_ExplicitBounded_Values_2: matrix indexed by [int(1..10)] of int(3, 5, 8)
find actions_ExplicitBounded_Values_3: matrix indexed by [int(1..10)] of int(1..8)
letting let1 be 8
find states_ExplicitBoundedR10_Length: int(0..10)
find states_ExplicitBoundedR10_Values_Function1D: matrix indexed by [int(1..10), int(3, 5, 8)] of int(0..8)
find nbActions: int(7)
branching on
    [actions_ExplicitBounded_Length, actions_ExplicitBounded_Values_1, actions_ExplicitBounded_Values_2,
     actions_ExplicitBounded_Values_3, states_ExplicitBoundedR10_Length, states_ExplicitBoundedR10_Values_Function1D,
     nbActions]
such that
    actions_ExplicitBounded_Length = states_ExplicitBoundedR10_Length - 1,
    and([q37 <= actions_ExplicitBounded_Length ->
         actions_ExplicitBounded_Values_1[q37] != actions_ExplicitBounded_Values_2[q37]
             | q37 : int(1..10)]),
    and([q11 <= actions_ExplicitBounded_Length ->
         actions_ExplicitBounded_Values_3[q11] <=
         states_ExplicitBoundedR10_Values_Function1D[q11, actions_ExplicitBounded_Values_1[q11]]
         /\ q11 <= states_ExplicitBoundedR10_Length
             | q11 : int(1..10)]),
    and([q39 <= states_ExplicitBoundedR10_Length ->
         and([sum([states_ExplicitBoundedR10_Values_Function1D[q39, q40] | q40 : int(3, 5, 8), q40 = b]) <= b /\
              or([q41 = b | q41 : int(3, 5, 8)])
                  | b : int(3, 5, 8)])
             | q39 : int(1..10)]),
    and([q13 <= actions_ExplicitBounded_Length ->
         and([states_ExplicitBoundedR10_Values_Function1D[q13, actions_ExplicitBounded_Values_1[q13]] -
              actions_ExplicitBounded_Values_3[q13]
              = states_ExplicitBoundedR10_Values_Function1D[q13 + 1, actions_ExplicitBounded_Values_1[q13]],
              q13 <= states_ExplicitBoundedR10_Length, q13 + 1 <= states_ExplicitBoundedR10_Length;
                  int(1..3)])
             | q13 : int(1..10)]),
    and([q15 <= actions_ExplicitBounded_Length ->
         and([states_ExplicitBoundedR10_Values_Function1D[q15, actions_ExplicitBounded_Values_2[q15]] +
              actions_ExplicitBounded_Values_3[q15]
              = states_ExplicitBoundedR10_Values_Function1D[q15 + 1, actions_ExplicitBounded_Values_2[q15]],
              q15 <= states_ExplicitBoundedR10_Length, q15 + 1 <= states_ExplicitBoundedR10_Length;
                  int(1..3)])
             | q15 : int(1..10)]),
    and([q19 <= actions_ExplicitBounded_Length ->
         and([!(actions_ExplicitBounded_Values_1[q19] = b \/ actions_ExplicitBounded_Values_2[q19] = b) ->
              and([states_ExplicitBoundedR10_Values_Function1D[q19, b] =
                   states_ExplicitBoundedR10_Values_Function1D[q19 + 1, b],
                   q19 <= states_ExplicitBoundedR10_Length, q19 + 1 <= states_ExplicitBoundedR10_Length;
                       int(1..3)])
                  | b : int(3, 5, 8)])
             | q19 : int(1..10)]),
    and([q21 <= actions_ExplicitBounded_Length ->
         states_ExplicitBoundedR10_Values_Function1D[q21 + 1, actions_ExplicitBounded_Values_1[q21]] = 0 /\
         q21 + 1 <= states_ExplicitBoundedR10_Length
         \/
         states_ExplicitBoundedR10_Values_Function1D[q21 + 1, actions_ExplicitBounded_Values_2[q21]] =
         actions_ExplicitBounded_Values_2[q21]
         /\ q21 + 1 <= states_ExplicitBoundedR10_Length
             | q21 : int(1..10)]),
    and([sum([sum([0 | 3 = q23]), sum([0 | 5 = q23]), sum([8 | 8 = q23]); int(1..3)]) =
         states_ExplicitBoundedR10_Values_Function1D[1, q23]
         /\ or([3 = q23, 5 = q23, 8 = q23; int(1..3)])
             | q23 : int(3, 5, 8)]),
    states_ExplicitBoundedR10_Values_Function1D[1, 3] = 0,
    states_ExplicitBoundedR10_Values_Function1D[1, 5] = 0,
    states_ExplicitBoundedR10_Values_Function1D[1, 8] = 8,
    1 <= states_ExplicitBoundedR10_Length,
    and([sum([sum([0 | 3 = q30]), sum([4 | 5 = q30]), sum([4 | 8 = q30]); int(1..3)]) =
         states_ExplicitBoundedR10_Values_Function1D[states_ExplicitBoundedR10_Length, q30]
         /\ or([3 = q30, 5 = q30, 8 = q30; int(1..3)])
             | q30 : int(3, 5, 8)]),
    states_ExplicitBoundedR10_Values_Function1D[states_ExplicitBoundedR10_Length, 3] = 0,
    states_ExplicitBoundedR10_Values_Function1D[states_ExplicitBoundedR10_Length, 5] = 4,
    states_ExplicitBoundedR10_Values_Function1D[states_ExplicitBoundedR10_Length, 8] = 4,
    states_ExplicitBoundedR10_Length <= states_ExplicitBoundedR10_Length,
    7 = actions_ExplicitBounded_Length,
    and([q1 > states_ExplicitBoundedR10_Length ->
         and([states_ExplicitBoundedR10_Values_Function1D[q1, q4] = 0 | q4 : int(3, 5, 8)])
             | q1 : int(1..10)]),
    states_ExplicitBoundedR10_Length <= 10,
    and([q5 > actions_ExplicitBounded_Length ->
         and([actions_ExplicitBounded_Values_1[q5] = 3, actions_ExplicitBounded_Values_2[q5] = 3,
              actions_ExplicitBounded_Values_3[q5] = 1;
                  int(1..3)])
             | q5 : int(1..10)]),
    actions_ExplicitBounded_Length <= 10

