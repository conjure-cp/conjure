language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(0..10)] of bool
find x_Explicit: matrix indexed by [int(1..3)] of int(0..10)
branching on [x_Explicit, x_Occurrence]
such that
    sum([toInt(x_Occurrence[q9]) * catchUndef(q9, 0) | q9 : int(0..10)]) = 6,
    product([x_Explicit[q11] | q11 : int(1..3)]) = 6,
    3 = sum([toInt(x_Occurrence[q1]) | q1 : int(0..10)]),
    and([x_Explicit[q2] < x_Explicit[q2 + 1] | q2 : int(1..2)]),
    and([x_Occurrence[x_Explicit[q5]] | q5 : int(1..3)]),
    and([x_Occurrence[q6] -> or([x_Explicit[q8] = q6 | q8 : int(1..3)]) | q6 : int(0..10)])

