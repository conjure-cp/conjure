language ESSENCE' 1.0

find x_Explicit: matrix indexed by [int(1..3)] of int(0..10)
find x_Occurrence: matrix indexed by [int(0..10)] of bool
branching on [x_Occurrence, x_Explicit]
such that
    sum([x_Explicit[q10] | q10 : int(1..3)]) = 6,
    product([x_Explicit[q12] | q12 : int(1..3)]) = 6,
    and([x_Explicit[q1] < x_Explicit[q1 + 1] | q1 : int(1..2)]),
    3 = sum([toInt(x_Occurrence[q3]) | q3 : int(0..10)]),
    and([x_Occurrence[q4] -> or([x_Explicit[q6] = q4 | q6 : int(1..3)]) | q4 : int(0..10)]),
    and([x_Occurrence[x_Explicit[q8]] | q8 : int(1..3)])

