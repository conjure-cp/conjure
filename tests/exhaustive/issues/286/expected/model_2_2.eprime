language ESSENCE' 1.0

given b: int
find p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker: int(0..b)
find p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy:
        matrix indexed by [int(1..b), int(1..b)] of int(1..b + 1)
branching on
    [p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker,
     p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy]
such that
    sum([toInt(q25 <= p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker) | q25 : int(1..b)]) <=
    sum([1   | q26_ExplicitVarSizeWithDummy : matrix indexed by [int(1..b)] of int(1..b + 1),
               and([q26_ExplicitVarSizeWithDummy[q27] < q26_ExplicitVarSizeWithDummy[q27 + 1] \/
                    q26_ExplicitVarSizeWithDummy[q27] = b + 1
                        | q27 : int(1..b - 1)]),
               and([q26_ExplicitVarSizeWithDummy[q28] = b + 1 -> q26_ExplicitVarSizeWithDummy[q28 + 1] = b + 1
                        | q28 : int(1..b - 1)])])
    / 8,
    alldifferent_except([toInt(q18 <= p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker /\
                               p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q18, q19] !=
                               b + 1)
                         *
                         catchUndef(p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy
                                        [q18, q19],
                                    0)
                             | q18 : int(1..b), q19 : int(1..b)],
                        0),
    and([q20 <= p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker ->
         sum([toInt(p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q20, q22] != b + 1)
                  | q22 : int(1..b)])
         >= 1
             | q20 : int(1..b)]),
    and([q4 + 1 <= p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker ->
         [p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q4, q12] | q12 : int(1..b)] <lex
         [p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q4 + 1, q13] | q13 : int(1..b)]
             | q4 : int(1..b - 1)]),
    and([q5 > p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker ->
         and([p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q5, q14] = 1
                  | q14 : int(1..b)])
             | q5 : int(1..b)]),
    p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker <= b,
    and([q6 <= p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker ->
         and([p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q6, q7] <
              p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q6, q7 + 1]
              \/ p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q6, q7] = b + 1
                  | q7 : int(1..b - 1)])
             | q6 : int(1..b)]),
    and([q6 <= p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker ->
         and([p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q6, q8] = b + 1 ->
              p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q6, q8 + 1] = b + 1
                  | q8 : int(1..b - 1)])
             | q6 : int(1..b)]),
    and([q6 <= p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker ->
         sum([toInt(p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q6, q9] != b + 1)
                  | q9 : int(1..b)])
         <= b
             | q6 : int(1..b)]),
    b =
    sum([toInt(q15 <= p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker) *
         catchUndef(sum([toInt(p_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q15, q17] !=
                               b + 1)
                             | q17 : int(1..b)]),
                    0)
             | q15 : int(1..b)])

