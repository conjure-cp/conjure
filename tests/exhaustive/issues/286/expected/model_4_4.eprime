language ESSENCE' 1.0

given b: int
find p_PartitionOccurrence_NumParts: int(1..b)
find p_PartitionOccurrence_WhichPart: matrix indexed by [int(1..b)] of int(1..b)
find p_PartitionOccurrence_PartSizes: matrix indexed by [int(1..b)] of int(0..b)
find p_PartitionOccurrence_FirstIndex: matrix indexed by [int(1..b)] of int(1..b)
branching on
    [p_PartitionOccurrence_NumParts, p_PartitionOccurrence_WhichPart, p_PartitionOccurrence_PartSizes,
     p_PartitionOccurrence_FirstIndex]
such that
    sum([toInt(q12 <= p_PartitionOccurrence_NumParts) | q12 : int(1..b)]) <=
    sum([1   | q14_ExplicitVarSizeWithDummy : matrix indexed by [int(1..b)] of int(1..b + 1),
               and([q14_ExplicitVarSizeWithDummy[q15] < q14_ExplicitVarSizeWithDummy[q15 + 1] \/
                    q14_ExplicitVarSizeWithDummy[q15] = b + 1
                        | q15 : int(1..b - 1)]),
               and([q14_ExplicitVarSizeWithDummy[q16] = b + 1 -> q14_ExplicitVarSizeWithDummy[q16 + 1] = b + 1
                        | q16 : int(1..b - 1)])])
    / 8,
    and([q1 <= p_PartitionOccurrence_NumParts -> p_PartitionOccurrence_PartSizes[q1] <= b | q1 : int(1..b)]),
    and([q1 > p_PartitionOccurrence_NumParts -> p_PartitionOccurrence_PartSizes[q1] = 0 | q1 : int(1..b)]),
    p_PartitionOccurrence_NumParts <= b,
    and([q2 <= p_PartitionOccurrence_NumParts -> or([p_PartitionOccurrence_WhichPart[q3] = q2 | q3 : int(1..b)])
             | q2 : int(3..b)]),
    p_PartitionOccurrence_NumParts = max([p_PartitionOccurrence_WhichPart[q4] | q4 : int(1..b)]),
    and([p_PartitionOccurrence_PartSizes[q5] = sum([toInt(p_PartitionOccurrence_WhichPart[q6] = q5) | q6 : int(1..b)])
             | q5 : int(1..b)]),
    and([q7 <= p_PartitionOccurrence_NumParts ->
         and([p_PartitionOccurrence_WhichPart[q8] = q7 -> p_PartitionOccurrence_FirstIndex[q7] <= q8 | q8 : int(1..b)])
             | q7 : int(1..b)]),
    and([q7 <= p_PartitionOccurrence_NumParts ->
         or([p_PartitionOccurrence_WhichPart[q8] = q7 /\ p_PartitionOccurrence_FirstIndex[q7] = q8 | q8 : int(1..b)])
             | q7 : int(1..b)]),
    and([q7 > p_PartitionOccurrence_NumParts -> p_PartitionOccurrence_FirstIndex[q7] = 1 | q7 : int(1..b)]),
    and([q9 <= p_PartitionOccurrence_NumParts /\ q10 <= p_PartitionOccurrence_NumParts ->
         (q9 < q10 <-> p_PartitionOccurrence_FirstIndex[q9] < p_PartitionOccurrence_FirstIndex[q10])
             | q9 : int(1..b), q10 : int(1..b)])

