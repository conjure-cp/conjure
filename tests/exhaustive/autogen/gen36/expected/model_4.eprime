language ESSENCE' 1.0

letting let1 be 2
find var6_ExplicitVarSizeWithFlagsR19R5R3_Flags: matrix indexed by [int(1..2)] of bool
find var6_ExplicitVarSizeWithFlagsR19R5R3_Values_PartitionAsSet_ExplicitVarSizeWithMarkerR3_Marker:
        matrix indexed by [int(1..2)] of int(0..2)
find var6_ExplicitVarSizeWithFlagsR19R5R3_Values_PartitionAsSet_ExplicitVarSizeWithMarkerR3_Values_Explicit:
        matrix indexed by [int(1..2), int(1..2), int(1..0)] of int(2, 5)
branching on
    [var6_ExplicitVarSizeWithFlagsR19R5R3_Flags,
     var6_ExplicitVarSizeWithFlagsR19R5R3_Values_PartitionAsSet_ExplicitVarSizeWithMarkerR3_Marker,
     var6_ExplicitVarSizeWithFlagsR19R5R3_Values_PartitionAsSet_ExplicitVarSizeWithMarkerR3_Values_Explicit]
such that
    var6_ExplicitVarSizeWithFlagsR19R5R3_Flags[2] ->
    flatten([[var6_ExplicitVarSizeWithFlagsR19R5R3_Values_PartitionAsSet_ExplicitVarSizeWithMarkerR3_Marker[1]; int(1)],
             ([] : `matrix indexed by [int()] of int`);
                 int(1..2)])
    <lex
    flatten([[var6_ExplicitVarSizeWithFlagsR19R5R3_Values_PartitionAsSet_ExplicitVarSizeWithMarkerR3_Marker[2]; int(1)],
             ([] : `matrix indexed by [int()] of int`);
                 int(1..2)]),
    and([var6_ExplicitVarSizeWithFlagsR19R5R3_Flags[q2] = false ->
         var6_ExplicitVarSizeWithFlagsR19R5R3_Values_PartitionAsSet_ExplicitVarSizeWithMarkerR3_Marker[q2] = 0
             | q2 : int(1..2)]),
    var6_ExplicitVarSizeWithFlagsR19R5R3_Flags[2] -> var6_ExplicitVarSizeWithFlagsR19R5R3_Flags[1],
    and([var6_ExplicitVarSizeWithFlagsR19R5R3_Flags[q5] ->
         and([q23 <= var6_ExplicitVarSizeWithFlagsR19R5R3_Values_PartitionAsSet_ExplicitVarSizeWithMarkerR3_Marker[q5]
              -> false
                  | q23 : int(1..2)])
             | q5 : int(1..2)]),
    and([var6_ExplicitVarSizeWithFlagsR19R5R3_Flags[q5] ->
         (2 <= var6_ExplicitVarSizeWithFlagsR19R5R3_Values_PartitionAsSet_ExplicitVarSizeWithMarkerR3_Marker[q5] ->
          false)
             | q5 : int(1..2)]),
    and([var6_ExplicitVarSizeWithFlagsR19R5R3_Flags[q5] ->
         3 <= var6_ExplicitVarSizeWithFlagsR19R5R3_Values_PartitionAsSet_ExplicitVarSizeWithMarkerR3_Marker[q5]
             | q5 : int(1..2)]),
    and([var6_ExplicitVarSizeWithFlagsR19R5R3_Flags[q5] ->
         var6_ExplicitVarSizeWithFlagsR19R5R3_Values_PartitionAsSet_ExplicitVarSizeWithMarkerR3_Marker[q5] <= 2
             | q5 : int(1..2)]),
    and([var6_ExplicitVarSizeWithFlagsR19R5R3_Flags[q5] -> false | q5 : int(1..2)])

