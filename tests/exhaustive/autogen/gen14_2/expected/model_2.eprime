language ESSENCE' 1.0

find var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker: int(0..2)
find var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy:
        matrix indexed by [int(1..2), int(1..2)] of int(1..3)
branching on
    [var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker,
     var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy]
such that
    var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker = var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker,
    and([and([var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q18, q20] =
              var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q18, q20]
                  | q20 : int(1..2)])
             | q18 : int(1..2)]),
    alldifferent_except([toInt(q22 <= var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker /\
                               var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q22, q23]
                               != 3)
                         *
                         catchUndef(var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy
                                        [q22, q23],
                                    0)
                             | q22 : int(1..2), q23 : int(1..2)],
                        0),
    and([q24 <= var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker ->
         sum([toInt(var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q24, q26] != 3)
                  | q26 : int(1..2)])
         >= 1
             | q24 : int(1..2)]),
    2 <= var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker ->
    [var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[1, q12] | q12 : int(1..2)] <lex
    [var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[2, q13] | q13 : int(1..2)],
    and([q5 > var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker ->
         and([var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q5, q17] = 1
                  | q17 : int(1..2)])
             | q5 : int(1..2)]),
    var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker <= 2,
    and([q6 <= var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker ->
         var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q6, 1] <
         var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q6, 2]
         \/ var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q6, 1] = 3
             | q6 : int(1..2)]),
    and([q6 <= var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker ->
         (var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q6, 1] = 3 ->
          var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q6, 2] = 3)
             | q6 : int(1..2)]),
    and([q6 <= var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker ->
         sum([toInt(var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q6, q9] != 3)
                  | q9 : int(1..2)])
         <= 2
             | q6 : int(1..2)]),
    2 =
    sum([toInt(q14 <= var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Marker) *
         catchUndef(sum([toInt(var1_PartitionAsSet_ExplicitVarSizeWithMarkerR6_Values_ExplicitVarSizeWithDummy[q14, q16]
                               != 3)
                             | q16 : int(1..2)]),
                    0)
             | q14 : int(1..2)])

