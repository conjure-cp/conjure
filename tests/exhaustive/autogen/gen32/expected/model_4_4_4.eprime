language ESSENCE' 1.0

letting let1 be -4
find var2_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..11)] of bool
find var2_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..11)] of int(-4..5, 2)
branching on [var2_ExplicitVarSizeWithFlags_Flags, var2_ExplicitVarSizeWithFlags_Values]
such that
    or([var2_ExplicitVarSizeWithFlags_Flags[q7] /\
        !or([var2_ExplicitVarSizeWithFlags_Flags[q9] /\
             var2_ExplicitVarSizeWithFlags_Values[q9] = var2_ExplicitVarSizeWithFlags_Values[q7]
                 | q9 : int(1..11)])
            | q7 : int(1..11)])
    \/
    or([var2_ExplicitVarSizeWithFlags_Flags[q10] /\
        !or([var2_ExplicitVarSizeWithFlags_Flags[q12] /\
             var2_ExplicitVarSizeWithFlags_Values[q12] = var2_ExplicitVarSizeWithFlags_Values[q10]
                 | q12 : int(1..11)])
            | q10 : int(1..11)]),
    and([var2_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         var2_ExplicitVarSizeWithFlags_Values[q1] < var2_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..10)]),
    and([var2_ExplicitVarSizeWithFlags_Flags[q2] = false -> var2_ExplicitVarSizeWithFlags_Values[q2] = -4
             | q2 : int(1..11)]),
    and([var2_ExplicitVarSizeWithFlags_Flags[q3 + 1] -> var2_ExplicitVarSizeWithFlags_Flags[q3] | q3 : int(1..10)])

