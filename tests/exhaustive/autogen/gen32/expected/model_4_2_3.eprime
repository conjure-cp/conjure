language ESSENCE' 1.0

letting let1 be -4
find var2_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..11)] of bool
find var2_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..11)] of int(-4..5, 2)
find var2_ExplicitVarSizeWithDummy: matrix indexed by [int(1..11)] of int(-4..5, 2, 6)
find var2_ExplicitVarSizeWithMarker_Marker: int(0..11)
find var2_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..11)] of int(-4..5, 2)
branching on
    [var2_ExplicitVarSizeWithMarker_Marker, var2_ExplicitVarSizeWithMarker_Values, var2_ExplicitVarSizeWithFlags_Flags,
     var2_ExplicitVarSizeWithFlags_Values, var2_ExplicitVarSizeWithDummy]
such that
    or([var2_ExplicitVarSizeWithFlags_Flags[q38] /\
        !or([var2_ExplicitVarSizeWithDummy[q40] != 6 /\
             var2_ExplicitVarSizeWithDummy[q40] = var2_ExplicitVarSizeWithFlags_Values[q38]
                 | q40 : int(1..11)])
            | q38 : int(1..11)])
    \/
    or([var2_ExplicitVarSizeWithDummy[q41] != 6 /\
        !or([var2_ExplicitVarSizeWithFlags_Flags[q43] /\
             var2_ExplicitVarSizeWithFlags_Values[q43] = var2_ExplicitVarSizeWithDummy[q41]
                 | q43 : int(1..11)])
            | q41 : int(1..11)]),
    and([var2_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         var2_ExplicitVarSizeWithFlags_Values[q1] < var2_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..10)]),
    and([var2_ExplicitVarSizeWithFlags_Flags[q2] = false -> var2_ExplicitVarSizeWithFlags_Values[q2] = -4
             | q2 : int(1..11)]),
    and([var2_ExplicitVarSizeWithFlags_Flags[q3 + 1] -> var2_ExplicitVarSizeWithFlags_Flags[q3] | q3 : int(1..10)]),
    and([var2_ExplicitVarSizeWithDummy[q6] < var2_ExplicitVarSizeWithDummy[q6 + 1] \/
         var2_ExplicitVarSizeWithDummy[q6] = 6
             | q6 : int(1..10)]),
    and([var2_ExplicitVarSizeWithDummy[q7] = 6 -> var2_ExplicitVarSizeWithDummy[q7 + 1] = 6 | q7 : int(1..10)]),
    and([var2_ExplicitVarSizeWithDummy[q11] != 6 ->
         or([var2_ExplicitVarSizeWithFlags_Flags[q13] /\
             var2_ExplicitVarSizeWithFlags_Values[q13] = var2_ExplicitVarSizeWithDummy[q11]
                 | q13 : int(1..11)])
             | q11 : int(1..11)]),
    and([var2_ExplicitVarSizeWithFlags_Flags[q15] ->
         or([var2_ExplicitVarSizeWithDummy[q17] != 6 /\
             var2_ExplicitVarSizeWithDummy[q17] = var2_ExplicitVarSizeWithFlags_Values[q15]
                 | q17 : int(1..11)])
             | q15 : int(1..11)]),
    and([q18 + 1 <= var2_ExplicitVarSizeWithMarker_Marker ->
         var2_ExplicitVarSizeWithMarker_Values[q18] < var2_ExplicitVarSizeWithMarker_Values[q18 + 1]
             | q18 : int(1..10)]),
    and([q19 > var2_ExplicitVarSizeWithMarker_Marker -> var2_ExplicitVarSizeWithMarker_Values[q19] = -4
             | q19 : int(1..11)]),
    and([q22 <= var2_ExplicitVarSizeWithMarker_Marker ->
         or([var2_ExplicitVarSizeWithFlags_Flags[q24] /\
             var2_ExplicitVarSizeWithFlags_Values[q24] = var2_ExplicitVarSizeWithMarker_Values[q22]
                 | q24 : int(1..11)])
             | q22 : int(1..11)]),
    and([var2_ExplicitVarSizeWithFlags_Flags[q26] ->
         or([q28 <= var2_ExplicitVarSizeWithMarker_Marker /\
             var2_ExplicitVarSizeWithMarker_Values[q28] = var2_ExplicitVarSizeWithFlags_Values[q26]
                 | q28 : int(1..11)])
             | q26 : int(1..11)]),
    and([q30 <= var2_ExplicitVarSizeWithMarker_Marker ->
         or([var2_ExplicitVarSizeWithDummy[q32] != 6 /\
             var2_ExplicitVarSizeWithDummy[q32] = var2_ExplicitVarSizeWithMarker_Values[q30]
                 | q32 : int(1..11)])
             | q30 : int(1..11)]),
    and([var2_ExplicitVarSizeWithDummy[q34] != 6 ->
         or([q36 <= var2_ExplicitVarSizeWithMarker_Marker /\
             var2_ExplicitVarSizeWithMarker_Values[q36] = var2_ExplicitVarSizeWithDummy[q34]
                 | q36 : int(1..11)])
             | q34 : int(1..11)])

