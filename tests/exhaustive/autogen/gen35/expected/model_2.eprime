language ESSENCE' 1.0

find var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Marker: int(0..3)
find var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Values_1_ExplicitWithRepetition_Flag:
        matrix indexed by [int(1..3)] of int(0)
find var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Values_1_ExplicitWithRepetition_Values:
        matrix indexed by [int(1..3), int(1..0)] of bool
find var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Values_2_RelationAsMatrix:
        matrix indexed by [int(1..3), bool, bool] of bool
branching on
    [var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Marker,
     var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Values_1_ExplicitWithRepetition_Flag,
     var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Values_1_ExplicitWithRepetition_Values,
     var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Values_2_RelationAsMatrix]
such that
    and([q1 + 1 <= var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Marker ->
         flatten([flatten([[var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Values_1_ExplicitWithRepetition_Flag
                                [q1];
                                int(1)],
                           ([] : `matrix indexed by [int()] of int`);
                               int(1..2)]),
                  flatten([flatten([[-toInt(var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Values_2_RelationAsMatrix
                                                [q1, q14, q15]);
                                         int(1)]
                                        | q15 : bool])
                               | q14 : bool]);
                      int(1..2)])
         <lex
         flatten([flatten([[var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Values_1_ExplicitWithRepetition_Flag
                                [q1 + 1];
                                int(1)],
                           ([] : `matrix indexed by [int()] of int`);
                               int(1..2)]),
                  flatten([flatten([[-toInt(var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Values_2_RelationAsMatrix
                                                [q1 + 1, q17, q18]);
                                         int(1)]
                                        | q18 : bool])
                               | q17 : bool]);
                      int(1..2)])
             | q1 : int(1..2)]),
    and([q2 > var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Marker ->
         var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Values_1_ExplicitWithRepetition_Flag
             [q2]
         = 0
         /\
         and([and([var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Values_2_RelationAsMatrix
                       [q2, q20, q21]
                   = false
                       | q21 : bool])
                  | q20 : bool])
             | q2 : int(1..3)]),
    0 <= var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Marker,
    var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Marker <= 3,
    and([q3 <= var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Marker ->
         3 <=
         var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Values_1_ExplicitWithRepetition_Flag
             [q3]
             | q3 : int(1..3)]),
    and([q3 <= var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Marker ->
         4 <=
         sum([sum([toInt(var2_FunctionAsRelationR9R16_RelationAsSetR9R16_ExplicitVarSizeWithMarkerR9R16_Values_2_RelationAsMatrix
                             [q3, q9, q10])
                       | q10 : bool])
                  | q9 : bool])
             | q3 : int(1..3)])

