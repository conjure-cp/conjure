language ESSENCE' 1.0

find x_ExplicitVarSizeWithMarker_Marker: int(0..7)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..7)] of int(1..7)
find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..7)] of int(1..8)
branching on [x_ExplicitVarSizeWithDummy, x_ExplicitVarSizeWithMarker_Marker, x_ExplicitVarSizeWithMarker_Values]
such that
    and([q16 <= x_ExplicitVarSizeWithMarker_Marker /\ q17 <= x_ExplicitVarSizeWithMarker_Marker ->
         |x_ExplicitVarSizeWithMarker_Values[q16] - x_ExplicitVarSizeWithMarker_Values[q17]| >= 3
             | q16 : int(1..7), q17 : int(1..7), q17 > q16]),
    and([q1 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q1] < x_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..6)]),
    and([q2 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q2] = 1 | q2 : int(1..7)]),
    3 <= x_ExplicitVarSizeWithMarker_Marker,
    and([x_ExplicitVarSizeWithDummy[q4] < x_ExplicitVarSizeWithDummy[q4 + 1] \/ x_ExplicitVarSizeWithDummy[q4] = 8
             | q4 : int(1..6)]),
    and([x_ExplicitVarSizeWithDummy[q5] = 8 -> x_ExplicitVarSizeWithDummy[q5 + 1] = 8 | q5 : int(1..6)]),
    3 <= sum([toInt(x_ExplicitVarSizeWithDummy[q6] != 8) | q6 : int(1..7)]),
    and([x_ExplicitVarSizeWithDummy[q9] != 8 ->
         or([q11 <= x_ExplicitVarSizeWithMarker_Marker /\
             x_ExplicitVarSizeWithMarker_Values[q11] = x_ExplicitVarSizeWithDummy[q9]
                 | q11 : int(1..7)])
             | q9 : int(1..7)]),
    and([q13 <= x_ExplicitVarSizeWithMarker_Marker ->
         or([x_ExplicitVarSizeWithDummy[q15] != 8 /\
             x_ExplicitVarSizeWithDummy[q15] = x_ExplicitVarSizeWithMarker_Values[q13]
                 | q15 : int(1..7)])
             | q13 : int(1..7)])

