language ESSENCE' 1.0

find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..7)] of int(1..8)
find x_Occurrence: matrix indexed by [int(1..7)] of bool
branching on [x_Occurrence, x_ExplicitVarSizeWithDummy]
such that
    and([x_ExplicitVarSizeWithDummy[q11] != 8 /\ x_ExplicitVarSizeWithDummy[q12] != 8 ->
         |x_ExplicitVarSizeWithDummy[q11] - x_ExplicitVarSizeWithDummy[q12]| >= 3
             | q11 : int(1..7), q12 : int(1..7), q12 > q11]),
    and([x_ExplicitVarSizeWithDummy[q1] < x_ExplicitVarSizeWithDummy[q1 + 1] \/ x_ExplicitVarSizeWithDummy[q1] = 8
             | q1 : int(1..6)]),
    and([x_ExplicitVarSizeWithDummy[q2] = 8 -> x_ExplicitVarSizeWithDummy[q2 + 1] = 8 | q2 : int(1..6)]),
    3 <= sum([toInt(x_ExplicitVarSizeWithDummy[q3] != 8) | q3 : int(1..7)]),
    3 <= sum([toInt(x_Occurrence[q5]) | q5 : int(1..7)]),
    and([x_Occurrence[q6] ->
         or([x_ExplicitVarSizeWithDummy[q8] != 8 /\ x_ExplicitVarSizeWithDummy[q8] = q6 | q8 : int(1..7)])
             | q6 : int(1..7)]),
    and([x_ExplicitVarSizeWithDummy[q10] != 8 -> x_Occurrence[x_ExplicitVarSizeWithDummy[q10]] | q10 : int(1..7)])

