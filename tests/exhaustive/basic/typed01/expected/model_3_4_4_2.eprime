language ESSENCE' 1.0

find x_ExplicitVarSizeWithMarker_Marker: int(0..1)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1)] of int(1)
find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1)] of bool
find x_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1)] of int(1)
find y_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1)] of bool
find y_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1)] of int(1)
find y_ExplicitVarSizeWithDummy: matrix indexed by [int(1)] of int(1, 2)
branching on
    [x_ExplicitVarSizeWithFlags_Flags, x_ExplicitVarSizeWithFlags_Values, x_ExplicitVarSizeWithMarker_Marker,
     x_ExplicitVarSizeWithMarker_Values, y_ExplicitVarSizeWithDummy, y_ExplicitVarSizeWithFlags_Flags,
     y_ExplicitVarSizeWithFlags_Values]
such that
    1 <= x_ExplicitVarSizeWithMarker_Marker /\
    (y_ExplicitVarSizeWithFlags_Flags[1] /\
     y_ExplicitVarSizeWithFlags_Values[1] = x_ExplicitVarSizeWithMarker_Values[1])
    -> false,
    1 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[1] = 1,
    y_ExplicitVarSizeWithFlags_Flags[1] = false -> y_ExplicitVarSizeWithFlags_Values[1] = 1,
    x_ExplicitVarSizeWithFlags_Flags[1] = false -> x_ExplicitVarSizeWithFlags_Values[1] = 1,
    x_ExplicitVarSizeWithFlags_Flags[1] ->
    1 <= x_ExplicitVarSizeWithMarker_Marker /\
    x_ExplicitVarSizeWithMarker_Values[1] = x_ExplicitVarSizeWithFlags_Values[1],
    1 <= x_ExplicitVarSizeWithMarker_Marker ->
    x_ExplicitVarSizeWithFlags_Flags[1] /\ x_ExplicitVarSizeWithFlags_Values[1] = x_ExplicitVarSizeWithMarker_Values[1],
    y_ExplicitVarSizeWithDummy[1] != 2 ->
    y_ExplicitVarSizeWithFlags_Flags[1] /\ y_ExplicitVarSizeWithFlags_Values[1] = y_ExplicitVarSizeWithDummy[1],
    y_ExplicitVarSizeWithFlags_Flags[1] ->
    y_ExplicitVarSizeWithDummy[1] != 2 /\ y_ExplicitVarSizeWithDummy[1] = y_ExplicitVarSizeWithFlags_Values[1]

