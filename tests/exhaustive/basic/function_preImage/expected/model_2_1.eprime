language ESSENCE' 1.0

find f_FunctionNDPartialDummy: matrix indexed by [int(1..3)] of int(0..3)
find f_Function1DPartial_Flags: matrix indexed by [int(1..3)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..3)] of int(1..3)
branching on [f_Function1DPartial_Flags, f_Function1DPartial_Values, f_FunctionNDPartialDummy]
such that
    or([f_FunctionNDPartialDummy[q12] != 0 /\ f_FunctionNDPartialDummy[q12] = 2 /\ q12 = 1 | q12 : int(1..3)]),
    or([f_FunctionNDPartialDummy[q15] != 0 /\ f_FunctionNDPartialDummy[q15] = 2 /\ q15 = 2 | q15 : int(1..3)]),
    and([f_FunctionNDPartialDummy[q18] != 0 /\ f_FunctionNDPartialDummy[q18] = 2 -> 1 = q18 \/ 2 = q18
             | q18 : int(1..3)]),
    and([f_Function1DPartial_Flags[q3] = false -> f_Function1DPartial_Values[q3] = 1 | q3 : int(1..3)]),
    and([f_Function1DPartial_Flags[q7] -> f_FunctionNDPartialDummy[q7] = f_Function1DPartial_Values[q7]
             | q7 : int(1..3)]),
    and([f_FunctionNDPartialDummy[q8] != 0 ->
         f_Function1DPartial_Values[q8] = f_FunctionNDPartialDummy[q8] /\ f_Function1DPartial_Flags[q8]
             | q8 : int(1..3)])

