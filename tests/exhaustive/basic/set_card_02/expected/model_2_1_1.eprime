language ESSENCE' 1.0

find s_Occurrence: matrix indexed by [int(1..2)] of bool
find s_Explicit: matrix indexed by [int(1..2)] of int(1..2)
branching on [s_Explicit, s_Occurrence]
such that
    or([s_Explicit[q10] = 2 | q10 : int(1..2)]),
    2 = sum([toInt(s_Occurrence[q1]) | q1 : int(1..2)]),
    s_Explicit[1] < s_Explicit[2],
    and([s_Occurrence[s_Explicit[q5]] | q5 : int(1..2)]),
    and([s_Occurrence[q6] -> or([s_Explicit[q8] = q6 | q8 : int(1..2)]) | q6 : int(1..2)])

