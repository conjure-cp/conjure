language ESSENCE' 1.0

find f_Function1DR3_Explicit: matrix indexed by [int(1..3), int(1..2)] of int(1..3)
branching on [f_Function1DR3_Explicit]
such that
<<<<<<< HEAD
    and([[q1; int(1)] <lex [q2; int(1)] ->
         or([f_Function1DR2_Occurrence[q1, q5] != f_Function1DR2_Occurrence[q2, q5] | q5 : int(1..3)]) \/
         or([f_Function1DR2_Occurrence[q1, q5] != f_Function1DR2_Occurrence[q2, q5] | q5 : int(1..3)])
=======
    and([q1 < q2 ->
         or([f_Function1DR3_Explicit[q1, q6] != f_Function1DR3_Explicit[q2, q6] | q6 : int(1..2)]) \/
         or([f_Function1DR3_Explicit[q1, q6] != f_Function1DR3_Explicit[q2, q6] | q6 : int(1..2)])
>>>>>>> main
             | q1 : int(1..3), q2 : int(1..3)]),
    and([f_Function1DR3_Explicit[q3, 1] < f_Function1DR3_Explicit[q3, 2] | q3 : int(1..3)])

