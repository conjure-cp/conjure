language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(1..3)] of bool
find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..4)
find cut1: bool
find cut2: bool
branching on [cut1, cut2, x_ExplicitVarSizeWithDummy, x_Occurrence]
such that
    !cut1 <-> x_Occurrence[1] /\ x_Occurrence[2],
    !cut2 <-> x_Occurrence[1],
    and([x_ExplicitVarSizeWithDummy[q2] < x_ExplicitVarSizeWithDummy[q2 + 1] \/ x_ExplicitVarSizeWithDummy[q2] = 4
             | q2 : int(1..2)]),
    and([x_ExplicitVarSizeWithDummy[q3] = 4 -> x_ExplicitVarSizeWithDummy[q3 + 1] = 4 | q3 : int(1..2)]),
    and([x_ExplicitVarSizeWithDummy[q7] != 4 -> x_Occurrence[x_ExplicitVarSizeWithDummy[q7]] | q7 : int(1..3)]),
    and([x_Occurrence[q8] ->
         or([x_ExplicitVarSizeWithDummy[q10] != 4 /\ x_ExplicitVarSizeWithDummy[q10] = q8 | q10 : int(1..3)])
             | q8 : int(1..3)])

