language ESSENCE' 1.0

find x_ExplicitVarSizeWithMarker_Marker: int(0..3)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..3)
find x_Occurrence: matrix indexed by [int(1..3)] of bool
find cut1: bool
find cut2: bool
branching on [cut1, cut2, x_Occurrence, x_ExplicitVarSizeWithMarker_Marker, x_ExplicitVarSizeWithMarker_Values]
such that
    !cut1 <->
    or([q7 <= x_ExplicitVarSizeWithMarker_Marker /\ x_ExplicitVarSizeWithMarker_Values[q7] = 1 | q7 : int(1..3)]) /\
    or([q9 <= x_ExplicitVarSizeWithMarker_Marker /\ x_ExplicitVarSizeWithMarker_Values[q9] = 2 | q9 : int(1..3)]),
    !cut2 <->
    or([q11 <= x_ExplicitVarSizeWithMarker_Marker /\ x_ExplicitVarSizeWithMarker_Values[q11] = 1 | q11 : int(1..3)]),
    and([q1 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q1] < x_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..2)]),
    and([q2 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q2] = 1 | q2 : int(1..3)]),
    and([x_Occurrence[q12] ->
         or([q14 <= x_ExplicitVarSizeWithMarker_Marker /\ x_ExplicitVarSizeWithMarker_Values[q14] = q12
                 | q14 : int(1..3)])
             | q12 : int(1..3)]),
    and([q16 <= x_ExplicitVarSizeWithMarker_Marker -> x_Occurrence[x_ExplicitVarSizeWithMarker_Values[q16]]
             | q16 : int(1..3)])

