language ESSENCE' 1.0

find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find x_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..3)] of int(1..3)
find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..4)
find cut1: bool
find cut2: bool
branching on
    [cut1, cut2, x_ExplicitVarSizeWithDummy, x_ExplicitVarSizeWithFlags_Flags, x_ExplicitVarSizeWithFlags_Values]
such that
    !cut1 <->
    or([x_ExplicitVarSizeWithFlags_Flags[q20] /\ x_ExplicitVarSizeWithFlags_Values[q20] = 1 | q20 : int(1..3)]) /\
    or([x_ExplicitVarSizeWithFlags_Flags[q22] /\ x_ExplicitVarSizeWithFlags_Values[q22] = 2 | q22 : int(1..3)]),
    !cut2 <->
    or([x_ExplicitVarSizeWithFlags_Flags[q24] /\ x_ExplicitVarSizeWithFlags_Values[q24] = 1 | q24 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Values[q1] < x_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..2)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q2] = false -> x_ExplicitVarSizeWithFlags_Values[q2] = 1 | q2 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q3 + 1] -> x_ExplicitVarSizeWithFlags_Flags[q3] | q3 : int(1..2)]),
    and([x_ExplicitVarSizeWithDummy[q6] < x_ExplicitVarSizeWithDummy[q6 + 1] \/ x_ExplicitVarSizeWithDummy[q6] = 4
             | q6 : int(1..2)]),
    and([x_ExplicitVarSizeWithDummy[q7] = 4 -> x_ExplicitVarSizeWithDummy[q7 + 1] = 4 | q7 : int(1..2)]),
    and([x_ExplicitVarSizeWithDummy[q11] != 4 ->
         or([x_ExplicitVarSizeWithFlags_Flags[q13] /\
             x_ExplicitVarSizeWithFlags_Values[q13] = x_ExplicitVarSizeWithDummy[q11]
                 | q13 : int(1..3)])
             | q11 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q15] ->
         or([x_ExplicitVarSizeWithDummy[q17] != 4 /\
             x_ExplicitVarSizeWithDummy[q17] = x_ExplicitVarSizeWithFlags_Values[q15]
                 | q17 : int(1..3)])
             | q15 : int(1..3)])

