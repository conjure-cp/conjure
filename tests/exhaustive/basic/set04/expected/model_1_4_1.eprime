language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(1..3)] of bool
find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find x_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..3)] of int(1..3)
branching on [x_ExplicitVarSizeWithFlags_Flags, x_ExplicitVarSizeWithFlags_Values, x_Occurrence]
such that
    x_Occurrence[1],
    or([x_ExplicitVarSizeWithFlags_Flags[q13] /\ x_ExplicitVarSizeWithFlags_Values[q13] = 2 | q13 : int(1..3)]),
    sum([toInt(x_Occurrence[q1]) | q1 : int(1..3)]) <= 3,
    and([x_ExplicitVarSizeWithFlags_Flags[q2 + 1] ->
         x_ExplicitVarSizeWithFlags_Values[q2] < x_ExplicitVarSizeWithFlags_Values[q2 + 1]
             | q2 : int(1..2)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q3] = false -> x_ExplicitVarSizeWithFlags_Values[q3] = 1 | q3 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q4 + 1] -> x_ExplicitVarSizeWithFlags_Flags[q4] | q4 : int(1..2)]),
    sum([toInt(x_ExplicitVarSizeWithFlags_Flags[q5]) | q5 : int(1..3)]) <= 3,
    and([x_ExplicitVarSizeWithFlags_Flags[q8] -> x_Occurrence[x_ExplicitVarSizeWithFlags_Values[q8]] | q8 : int(1..3)]),
    and([x_Occurrence[q9] ->
         or([x_ExplicitVarSizeWithFlags_Flags[q11] /\ x_ExplicitVarSizeWithFlags_Values[q11] = q9 | q11 : int(1..3)])
             | q9 : int(1..3)])

