language ESSENCE' 1.0

find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..4)
find x_Occurrence: matrix indexed by [int(1..3)] of bool
branching on [x_Occurrence, x_ExplicitVarSizeWithDummy]
such that
    or([x_ExplicitVarSizeWithDummy[q12] != 4 /\ x_ExplicitVarSizeWithDummy[q12] = 1 | q12 : int(1..3)]),
    or([x_ExplicitVarSizeWithDummy[q14] != 4 /\ x_ExplicitVarSizeWithDummy[q14] = 2 | q14 : int(1..3)]),
    and([x_ExplicitVarSizeWithDummy[q1] < x_ExplicitVarSizeWithDummy[q1 + 1] \/ x_ExplicitVarSizeWithDummy[q1] = 4
             | q1 : int(1..2)]),
    and([x_ExplicitVarSizeWithDummy[q2] = 4 -> x_ExplicitVarSizeWithDummy[q2 + 1] = 4 | q2 : int(1..2)]),
    sum([toInt(x_ExplicitVarSizeWithDummy[q3] != 4) | q3 : int(1..3)]) <= 3,
    sum([toInt(x_Occurrence[q5]) | q5 : int(1..3)]) <= 3,
    and([x_Occurrence[q6] ->
         or([x_ExplicitVarSizeWithDummy[q8] != 4 /\ x_ExplicitVarSizeWithDummy[q8] = q6 | q8 : int(1..3)])
             | q6 : int(1..3)]),
    and([x_ExplicitVarSizeWithDummy[q10] != 4 -> x_Occurrence[x_ExplicitVarSizeWithDummy[q10]] | q10 : int(1..3)])

