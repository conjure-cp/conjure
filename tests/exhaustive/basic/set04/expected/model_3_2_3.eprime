language ESSENCE' 1.0

find x_ExplicitVarSizeWithMarker_Marker: int(0..3)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..3)
find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..4)
branching on [x_ExplicitVarSizeWithDummy, x_ExplicitVarSizeWithMarker_Marker, x_ExplicitVarSizeWithMarker_Values]
such that
    or([q17 <= x_ExplicitVarSizeWithMarker_Marker /\ x_ExplicitVarSizeWithMarker_Values[q17] = 1 | q17 : int(1..3)]),
    or([x_ExplicitVarSizeWithDummy[q19] != 4 /\ x_ExplicitVarSizeWithDummy[q19] = 2 | q19 : int(1..3)]),
    and([q1 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q1] < x_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..2)]),
    and([q2 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q2] = 1 | q2 : int(1..3)]),
    x_ExplicitVarSizeWithMarker_Marker <= 3,
    and([x_ExplicitVarSizeWithDummy[q4] < x_ExplicitVarSizeWithDummy[q4 + 1] \/ x_ExplicitVarSizeWithDummy[q4] = 4
             | q4 : int(1..2)]),
    and([x_ExplicitVarSizeWithDummy[q5] = 4 -> x_ExplicitVarSizeWithDummy[q5 + 1] = 4 | q5 : int(1..2)]),
    sum([toInt(x_ExplicitVarSizeWithDummy[q6] != 4) | q6 : int(1..3)]) <= 3,
    and([x_ExplicitVarSizeWithDummy[q9] != 4 ->
         or([q11 <= x_ExplicitVarSizeWithMarker_Marker /\
             x_ExplicitVarSizeWithMarker_Values[q11] = x_ExplicitVarSizeWithDummy[q9]
                 | q11 : int(1..3)])
             | q9 : int(1..3)]),
    and([q13 <= x_ExplicitVarSizeWithMarker_Marker ->
         or([x_ExplicitVarSizeWithDummy[q15] != 4 /\
             x_ExplicitVarSizeWithDummy[q15] = x_ExplicitVarSizeWithMarker_Values[q13]
                 | q15 : int(1..3)])
             | q13 : int(1..3)])

