language ESSENCE' 1.0

find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..4)
branching on [x_ExplicitVarSizeWithDummy]
such that
    or([x_ExplicitVarSizeWithDummy[q6] != 4 /\ x_ExplicitVarSizeWithDummy[q6] = 1 | q6 : int(1..3)]),
    or([x_ExplicitVarSizeWithDummy[q8] != 4 /\ x_ExplicitVarSizeWithDummy[q8] = 2 | q8 : int(1..3)]),
    and([x_ExplicitVarSizeWithDummy[q1] < x_ExplicitVarSizeWithDummy[q1 + 1] \/ x_ExplicitVarSizeWithDummy[q1] = 4
             | q1 : int(1..2)]),
    and([x_ExplicitVarSizeWithDummy[q2] = 4 -> x_ExplicitVarSizeWithDummy[q2 + 1] = 4 | q2 : int(1..2)]),
    sum([toInt(x_ExplicitVarSizeWithDummy[q3] != 4) | q3 : int(1..3)]) <= 3

