language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(1..3)] of bool
branching on [x_Occurrence]
such that
<<<<<<< HEAD
    and([or([x_Explicit[q4] = i | q4 : int(1..2)]) | i : int(1..2)]),
    [x_Explicit[1]; int(1)] <lex [x_Explicit[2]; int(1)]
=======
    and([x_Occurrence[i] | i : int(1..2)]),
    2 = sum([toInt(x_Occurrence[q1]) | q1 : int(1..3)])
>>>>>>> main

