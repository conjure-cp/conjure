language ESSENCE' 1.0

find x_PartitionAsSet_ExplicitR2_Occurrence: matrix indexed by [int(1..2), int(3..8)] of bool
branching on [x_PartitionAsSet_ExplicitR2_Occurrence]
such that
<<<<<<< HEAD
    allDiff([x_PartitionAsSet_ExplicitR3_Explicit[q12, q13] | q12 : int(1..2), q13 : int(1..3)]),
    [x_PartitionAsSet_ExplicitR3_Explicit[1, q9] | q9 : int(1..3)] <lex
    [x_PartitionAsSet_ExplicitR3_Explicit[2, q10] | q10 : int(1..3)],
<<<<<<< HEAD
    and([and([[x_PartitionAsSet_ExplicitR3_Explicit[q5, q6]; int(1)] <lex
              [x_PartitionAsSet_ExplicitR3_Explicit[q5, q6 + 1]; int(1)]
=======
    and([and([x_PartitionAsSet_ExplicitR3_Explicit[q5, q6] < x_PartitionAsSet_ExplicitR3_Explicit[q5, q6 + 1]
>>>>>>> master
                  | q6 : int(1..2)])
             | q5 : int(1..2)])
=======
    and([1 = sum([toInt(x_PartitionAsSet_ExplicitR2_Occurrence[q11, q1]) | q11 : int(1..2)]) | q1 : int(3..8)]),
    [-toInt(x_PartitionAsSet_ExplicitR2_Occurrence[1, q8]) | q8 : int(3..8)] <lex
    [-toInt(x_PartitionAsSet_ExplicitR2_Occurrence[2, q9]) | q9 : int(3..8)],
    and([3 = sum([toInt(x_PartitionAsSet_ExplicitR2_Occurrence[q5, q6]) | q6 : int(3..8)]) | q5 : int(1..2)])
>>>>>>> main

