language ESSENCE' 1.0

find x_ExplicitVarSizeWithFlagsR6_Flags: matrix indexed by [int(1..4)] of bool
find x_ExplicitVarSizeWithFlagsR6_Values_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4), int(1..2)] of int(1..3)
branching on [x_ExplicitVarSizeWithFlagsR6_Flags, x_ExplicitVarSizeWithFlagsR6_Values_ExplicitVarSizeWithDummy]
such that
    and([x_ExplicitVarSizeWithFlagsR6_Flags[q1 + 1] ->
         [x_ExplicitVarSizeWithFlagsR6_Values_ExplicitVarSizeWithDummy[q1, q10] | q10 : int(1..2)] <lex
         [x_ExplicitVarSizeWithFlagsR6_Values_ExplicitVarSizeWithDummy[q1 + 1, q11] | q11 : int(1..2)]
             | q1 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlagsR6_Flags[q2] = false ->
         and([x_ExplicitVarSizeWithFlagsR6_Values_ExplicitVarSizeWithDummy[q2, q12] = 1 | q12 : int(1..2)])
             | q2 : int(1..4)]),
    and([x_ExplicitVarSizeWithFlagsR6_Flags[q3 + 1] -> x_ExplicitVarSizeWithFlagsR6_Flags[q3] | q3 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlagsR6_Flags[q5] ->
         x_ExplicitVarSizeWithFlagsR6_Values_ExplicitVarSizeWithDummy[q5, 1] <
         x_ExplicitVarSizeWithFlagsR6_Values_ExplicitVarSizeWithDummy[q5, 2]
         \/ x_ExplicitVarSizeWithFlagsR6_Values_ExplicitVarSizeWithDummy[q5, 1] = 3
             | q5 : int(1..4)]),
    and([x_ExplicitVarSizeWithFlagsR6_Flags[q5] ->
         (x_ExplicitVarSizeWithFlagsR6_Values_ExplicitVarSizeWithDummy[q5, 1] = 3 ->
          x_ExplicitVarSizeWithFlagsR6_Values_ExplicitVarSizeWithDummy[q5, 2] = 3)
             | q5 : int(1..4)])

