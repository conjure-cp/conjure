language ESSENCE' 1.0

find x_ExplicitWithFlags_Flags: matrix indexed by [int(1..4)] of int(0..4)
find x_ExplicitWithFlags_Values: matrix indexed by [int(1..4)] of int(1..2)
find x_MOccurrence: matrix indexed by [int(1..2)] of int(0..4)
branching on [x_MOccurrence, x_ExplicitWithFlags_Flags, x_ExplicitWithFlags_Values]
such that
<<<<<<< HEAD
    or([x_ExplicitWithFlags_Flags[q18] > 0 /\ x_ExplicitWithFlags_Values[q18] = 1 | q18 : int(1..4)]),
=======
    or([x_ExplicitWithFlags_Flags[q15] > 0 /\ x_ExplicitWithFlags_Values[q15] = 1 | q15 : int(1..4)]),
>>>>>>> main
    and([x_ExplicitWithFlags_Flags[q1 + 1] > 0 -> x_ExplicitWithFlags_Values[q1] < x_ExplicitWithFlags_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([x_ExplicitWithFlags_Flags[q2] = 0 -> x_ExplicitWithFlags_Values[q2] = 1 | q2 : int(1..4)]),
    and([x_ExplicitWithFlags_Flags[q3 + 1] > 0 -> x_ExplicitWithFlags_Flags[q3] > 0 | q3 : int(1..3)]),
<<<<<<< HEAD
    sum([x_ExplicitWithFlags_Flags[q5] | q5 : int(1..4)]) <= 4,
    sum([x_MOccurrence[q7] | q7 : int(1..2)]) <= 4,
    sum([toInt(x_MOccurrence[q12] > 0) * catchUndef(x_MOccurrence[q12], 0) | q12 : int(1..2)]) =
    sum([toInt(x_ExplicitWithFlags_Flags[q14] > 0) * catchUndef(x_ExplicitWithFlags_Flags[q14], 0) | q14 : int(1..4)]),
    and([x_MOccurrence[q9] > 0 ->
         x_MOccurrence[q9] =
         sum([toInt(x_ExplicitWithFlags_Values[q10] = q9) * catchUndef(x_ExplicitWithFlags_Flags[q10], 0)
                  | q10 : int(1..4)])
             | q9 : int(1..2)]),
    and([x_ExplicitWithFlags_Flags[q15] > 0 ->
         x_MOccurrence[x_ExplicitWithFlags_Values[q15]] =
         sum([toInt(x_ExplicitWithFlags_Values[q16] = x_ExplicitWithFlags_Values[q15]) *
              catchUndef(x_ExplicitWithFlags_Flags[q16], 0)
                  | q16 : int(1..4)])
             | q15 : int(1..4)])
=======
    sum([x_ExplicitWithFlags_Flags[q6] | q6 : int(1..4)]) <= 4,
    sum([x_MOccurrence[q8] | q8 : int(1..2)]) <= 4,
    and([x_MOccurrence[q10] > 0 ->
         x_MOccurrence[q10] =
         sum([toInt(x_ExplicitWithFlags_Values[q11] = q10) * catchUndef(x_ExplicitWithFlags_Flags[q11], 0)
                  | q11 : int(1..4)])
             | q10 : int(1..2)]),
    and([x_ExplicitWithFlags_Flags[q12] > 0 ->
         x_MOccurrence[x_ExplicitWithFlags_Values[q12]] =
         sum([toInt(x_ExplicitWithFlags_Values[q13] = x_ExplicitWithFlags_Values[q12]) *
              catchUndef(x_ExplicitWithFlags_Flags[q13], 0)
                  | q13 : int(1..4)])
             | q12 : int(1..4)])
>>>>>>> main

