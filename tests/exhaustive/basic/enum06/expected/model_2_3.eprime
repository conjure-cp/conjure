language ESSENCE' 1.0

find x_ExplicitWithRepetition_Flag: int(0..4)
find x_ExplicitWithRepetition_Values: matrix indexed by [int(1..4)] of int(1..2)
find x_MOccurrence: matrix indexed by [int(1..2)] of int(0..4)
branching on [x_MOccurrence, x_ExplicitWithRepetition_Flag, x_ExplicitWithRepetition_Values]
such that
    or([q15 <= x_ExplicitWithRepetition_Flag /\ x_ExplicitWithRepetition_Values[q15] = 1 | q15 : int(1..4)]),
    and([q1 + 1 <= x_ExplicitWithRepetition_Flag ->
         x_ExplicitWithRepetition_Values[q1] <= x_ExplicitWithRepetition_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([q2 > x_ExplicitWithRepetition_Flag -> x_ExplicitWithRepetition_Values[q2] = 1 | q2 : int(1..4)]),
    x_ExplicitWithRepetition_Flag <= 4,
    sum([x_MOccurrence[q6] | q6 : int(1..2)]) <= 4,
    and([x_MOccurrence[q8] > 0 ->
         x_MOccurrence[q8] =
         sum([toInt(q10 <= x_ExplicitWithRepetition_Flag) *
              catchUndef(toInt(x_ExplicitWithRepetition_Values[q10] = q8), 0)
                  | q10 : int(1..4)])
             | q8 : int(1..2)]),
    and([q11 <= x_ExplicitWithRepetition_Flag ->
         x_MOccurrence[x_ExplicitWithRepetition_Values[q11]] =
         sum([toInt(q13 <= x_ExplicitWithRepetition_Flag) *
              catchUndef(toInt(x_ExplicitWithRepetition_Values[q13] = x_ExplicitWithRepetition_Values[q11]), 0)
                  | q13 : int(1..4)])
             | q11 : int(1..4)])

