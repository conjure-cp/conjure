language ESSENCE' 1.0

find x_ExplicitR2_Occurrence: matrix indexed by [int(1..2), int(1..4)] of bool
branching on [x_ExplicitR2_Occurrence]
such that
<<<<<<< HEAD
    [x_ExplicitR3_Explicit[1, q5] | q5 : int(1..3)] <lex [x_ExplicitR3_Explicit[2, q6] | q6 : int(1..3)],
<<<<<<< HEAD
    and([and([[x_ExplicitR3_Explicit[q2, q3]; int(1)] <lex [x_ExplicitR3_Explicit[q2, q3 + 1]; int(1)]
                  | q3 : int(1..2)])
             | q2 : int(1..2)])
=======
    and([and([x_ExplicitR3_Explicit[q2, q3] < x_ExplicitR3_Explicit[q2, q3 + 1] | q3 : int(1..2)]) | q2 : int(1..2)])
>>>>>>> master
=======
    [-toInt(x_ExplicitR2_Occurrence[1, q4]) | q4 : int(1..4)] <lex
    [-toInt(x_ExplicitR2_Occurrence[2, q5]) | q5 : int(1..4)],
    and([3 = sum([toInt(x_ExplicitR2_Occurrence[q2, q3]) | q3 : int(1..4)]) | q2 : int(1..2)])
>>>>>>> main

