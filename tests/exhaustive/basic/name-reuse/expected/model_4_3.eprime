language ESSENCE' 1.0

find conjure_aux1: int(1)
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find s_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..4)] of int(1..4)
find s_ExplicitVarSizeWithMarker_Marker: int(0..4)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(1..4)
find conjure_aux2: int(1..4)
branching on
    [conjure_aux1, s_ExplicitVarSizeWithMarker_Marker, s_ExplicitVarSizeWithMarker_Values,
     s_ExplicitVarSizeWithFlags_Flags, s_ExplicitVarSizeWithFlags_Values]
such that
    and([s_ExplicitVarSizeWithFlags_Flags[q18] -> s_ExplicitVarSizeWithFlags_Values[q18] >= conjure_aux2
             | q18 : int(1..4)]),
    sum([toInt(s_ExplicitVarSizeWithFlags_Flags[q18]) | q18 : int(1..4)]) > 0 ->
    or([s_ExplicitVarSizeWithFlags_Flags[q18] /\ s_ExplicitVarSizeWithFlags_Values[q18] = conjure_aux2
            | q18 : int(1..4)]),
    sum([toInt(s_ExplicitVarSizeWithFlags_Flags[q18]) | q18 : int(1..4)]) = 0 -> conjure_aux2 = 1,
    conjure_aux2 = 3,
    sum([toInt(s_ExplicitVarSizeWithFlags_Flags[q18]) | q18 : int(1..4)]) > 0,
    and([s_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q1] < s_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q2] = false -> s_ExplicitVarSizeWithFlags_Values[q2] = 1 | q2 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q3 + 1] -> s_ExplicitVarSizeWithFlags_Flags[q3] | q3 : int(1..3)]),
    and([q6 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q6] < s_ExplicitVarSizeWithMarker_Values[q6 + 1]
             | q6 : int(1..3)]),
    and([q7 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q7] = 1 | q7 : int(1..4)]),
    and([q10 <= s_ExplicitVarSizeWithMarker_Marker ->
         or([s_ExplicitVarSizeWithFlags_Flags[q12] /\
             s_ExplicitVarSizeWithFlags_Values[q12] = s_ExplicitVarSizeWithMarker_Values[q10]
                 | q12 : int(1..4)])
             | q10 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q14] ->
         or([q16 <= s_ExplicitVarSizeWithMarker_Marker /\
             s_ExplicitVarSizeWithMarker_Values[q16] = s_ExplicitVarSizeWithFlags_Values[q14]
                 | q16 : int(1..4)])
             | q14 : int(1..4)])

