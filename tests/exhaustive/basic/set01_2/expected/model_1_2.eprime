language ESSENCE' 1.0

find x_Explicit: matrix indexed by [int(1..2)] of int(1..3)
find x_Occurrence: matrix indexed by [int(1..3)] of bool
branching on [x_Occurrence, x_Explicit]
such that
    and([or([x_Explicit[q10] = i | q10 : int(1..2)]) | i : int(1..2)]),
    x_Explicit[1] < x_Explicit[2],
    2 = sum([toInt(x_Occurrence[q3]) | q3 : int(1..3)]),
    and([x_Occurrence[q4] -> or([x_Explicit[q6] = q4 | q6 : int(1..2)]) | q4 : int(1..3)]),
    and([x_Occurrence[x_Explicit[q8]] | q8 : int(1..2)])

