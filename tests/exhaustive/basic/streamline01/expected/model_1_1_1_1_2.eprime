language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
find s_Occurrence: matrix indexed by [int(1..2)] of bool
find s_Explicit: matrix indexed by [int(1)] of int(1..2)
find conjure_aux3: int(1..2)
find conjure_aux1: matrix indexed by [int(1..2)] of int(1..2)
find conjure_aux2: matrix indexed by [int(1..2)] of int(1..2)
branching on [f_Function1DPartial_Flags, f_Function1DPartial_Values, s_Explicit, s_Occurrence]
such that
    and([s_Occurrence[q16] -> f_Function1DPartial_Flags[q16] | q16 : int(1..2)]),
    and([s_Occurrence[q14] -> q14 >= conjure_aux3 | q14 : int(1..2)]),
    sum([toInt(s_Occurrence[q14]) | q14 : int(1..2)]) > 0 ->
    or([s_Occurrence[q14] /\ q14 = conjure_aux3 | q14 : int(1..2)]),
    sum([toInt(s_Occurrence[q14]) | q14 : int(1..2)]) = 0 -> conjure_aux3 = 1,
    and([and([s_Occurrence[q12] -> q12 >= conjure_aux1[i] | q12 : int(1..2)]) | i : int(1..2)]),
    and([(sum([toInt(s_Occurrence[q12]) | q12 : int(1..2)]) > 0 ->
          or([s_Occurrence[q12] /\ q12 = conjure_aux1[i] | q12 : int(1..2)]))
         /\ (sum([toInt(s_Occurrence[q12]) | q12 : int(1..2)]) = 0 -> conjure_aux1[i] = 1)
             | i : int(1..2)]),
    and([and([s_Occurrence[q13] -> q13 >= conjure_aux2[i] | q13 : int(1..2)]) | i : int(1..2)]),
    and([(sum([toInt(s_Occurrence[q13]) | q13 : int(1..2)]) > 0 ->
          or([s_Occurrence[q13] /\ q13 = conjure_aux2[i] | q13 : int(1..2)]))
         /\ (sum([toInt(s_Occurrence[q13]) | q13 : int(1..2)]) = 0 -> conjure_aux2[i] = 1)
             | i : int(1..2)]),
    and([s_Occurrence[i] /\ (i != conjure_aux3 /\ sum([toInt(s_Occurrence[q14]) | q14 : int(1..2)]) > 0) ->
         and([f_Function1DPartial_Values[i] > f_Function1DPartial_Values[conjure_aux1[i]] /\
              sum([toInt(s_Occurrence[q12]) | q12 : int(1..2)]) > 0,
              f_Function1DPartial_Flags[i],
              f_Function1DPartial_Flags[conjure_aux2[i]] /\ sum([toInt(s_Occurrence[q13]) | q13 : int(1..2)]) > 0;
                  int(1..3)])
             | i : int(1..2)]),
    1 = sum([toInt(s_Occurrence[q1]) | q1 : int(1..2)]),
    and([f_Function1DPartial_Flags[q2] = false -> f_Function1DPartial_Values[q2] = 1 | q2 : int(1..2)]),
    s_Occurrence[s_Explicit[1]],
    and([s_Occurrence[q9] -> s_Explicit[1] = q9 | q9 : int(1..2)])

