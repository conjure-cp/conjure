language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(2..5)] of bool
find y_ExplicitVarSizeWithMarker_Marker: int(0..4)
find y_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(2..5)
find y_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(2..6)
branching on
    [x_Occurrence, y_ExplicitVarSizeWithDummy, y_ExplicitVarSizeWithMarker_Marker, y_ExplicitVarSizeWithMarker_Values]
such that
    and([x_Occurrence[i] /\ q17 <= y_ExplicitVarSizeWithMarker_Marker -> i + 2 = y_ExplicitVarSizeWithMarker_Values[q17]
             | i : int(2..5), q17 : int(1..4)]),
    1 <= sum([toInt(x_Occurrence[q1]) | q1 : int(2..5)]),
    and([q2 + 1 <= y_ExplicitVarSizeWithMarker_Marker ->
         y_ExplicitVarSizeWithMarker_Values[q2] < y_ExplicitVarSizeWithMarker_Values[q2 + 1]
             | q2 : int(1..3)]),
    and([q3 > y_ExplicitVarSizeWithMarker_Marker -> y_ExplicitVarSizeWithMarker_Values[q3] = 2 | q3 : int(1..4)]),
    1 <= y_ExplicitVarSizeWithMarker_Marker,
    and([y_ExplicitVarSizeWithDummy[q5] < y_ExplicitVarSizeWithDummy[q5 + 1] \/ y_ExplicitVarSizeWithDummy[q5] = 6
             | q5 : int(1..3)]),
    and([y_ExplicitVarSizeWithDummy[q6] = 6 -> y_ExplicitVarSizeWithDummy[q6 + 1] = 6 | q6 : int(1..3)]),
    1 <= sum([toInt(y_ExplicitVarSizeWithDummy[q7] != 6) | q7 : int(1..4)]),
    and([y_ExplicitVarSizeWithDummy[q10] != 6 ->
         or([q12 <= y_ExplicitVarSizeWithMarker_Marker /\
             y_ExplicitVarSizeWithMarker_Values[q12] = y_ExplicitVarSizeWithDummy[q10]
                 | q12 : int(1..4)])
             | q10 : int(1..4)]),
    and([q14 <= y_ExplicitVarSizeWithMarker_Marker ->
         or([y_ExplicitVarSizeWithDummy[q16] != 6 /\
             y_ExplicitVarSizeWithDummy[q16] = y_ExplicitVarSizeWithMarker_Values[q14]
                 | q16 : int(1..4)])
             | q14 : int(1..4)])

