language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(2..5)] of bool
find y_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(2..6)
find y_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find y_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..4)] of int(2..5)
branching on
    [x_Occurrence, y_ExplicitVarSizeWithFlags_Flags, y_ExplicitVarSizeWithFlags_Values, y_ExplicitVarSizeWithDummy]
such that
    and([x_Occurrence[i] /\ y_ExplicitVarSizeWithDummy[q19] != 6 -> i + 2 = y_ExplicitVarSizeWithDummy[q19]
             | i : int(2..5), q19 : int(1..4)]),
    1 <= sum([toInt(x_Occurrence[q1]) | q1 : int(2..5)]),
    and([y_ExplicitVarSizeWithDummy[q2] < y_ExplicitVarSizeWithDummy[q2 + 1] \/ y_ExplicitVarSizeWithDummy[q2] = 6
             | q2 : int(1..3)]),
    and([y_ExplicitVarSizeWithDummy[q3] = 6 -> y_ExplicitVarSizeWithDummy[q3 + 1] = 6 | q3 : int(1..3)]),
    1 <= sum([toInt(y_ExplicitVarSizeWithDummy[q4] != 6) | q4 : int(1..4)]),
    and([y_ExplicitVarSizeWithFlags_Flags[q6 + 1] ->
         y_ExplicitVarSizeWithFlags_Values[q6] < y_ExplicitVarSizeWithFlags_Values[q6 + 1]
             | q6 : int(1..3)]),
    and([y_ExplicitVarSizeWithFlags_Flags[q7] = false -> y_ExplicitVarSizeWithFlags_Values[q7] = 2 | q7 : int(1..4)]),
    and([y_ExplicitVarSizeWithFlags_Flags[q8 + 1] -> y_ExplicitVarSizeWithFlags_Flags[q8] | q8 : int(1..3)]),
    1 <= sum([toInt(y_ExplicitVarSizeWithFlags_Flags[q9]) | q9 : int(1..4)]),
    and([y_ExplicitVarSizeWithFlags_Flags[q12] ->
         or([y_ExplicitVarSizeWithDummy[q14] != 6 /\
             y_ExplicitVarSizeWithDummy[q14] = y_ExplicitVarSizeWithFlags_Values[q12]
                 | q14 : int(1..4)])
             | q12 : int(1..4)]),
    and([y_ExplicitVarSizeWithDummy[q16] != 6 ->
         or([y_ExplicitVarSizeWithFlags_Flags[q18] /\
             y_ExplicitVarSizeWithFlags_Values[q18] = y_ExplicitVarSizeWithDummy[q16]
                 | q18 : int(1..4)])
             | q16 : int(1..4)])

