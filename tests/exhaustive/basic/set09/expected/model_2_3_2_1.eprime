language ESSENCE' 1.0

find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(2..6)
find y_ExplicitVarSizeWithMarker_Marker: int(0..4)
find y_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(2..5)
find y_Occurrence: matrix indexed by [int(2..5)] of bool
branching on
    [x_ExplicitVarSizeWithDummy, y_Occurrence, y_ExplicitVarSizeWithMarker_Marker, y_ExplicitVarSizeWithMarker_Values]
such that
    and([x_ExplicitVarSizeWithDummy[q14] != 6 /\ q15 <= y_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithDummy[q14] + 2 = y_ExplicitVarSizeWithMarker_Values[q15]
             | q14 : int(1..4), q15 : int(1..4)]),
    and([x_ExplicitVarSizeWithDummy[q1] < x_ExplicitVarSizeWithDummy[q1 + 1] \/ x_ExplicitVarSizeWithDummy[q1] = 6
             | q1 : int(1..3)]),
    and([x_ExplicitVarSizeWithDummy[q2] = 6 -> x_ExplicitVarSizeWithDummy[q2 + 1] = 6 | q2 : int(1..3)]),
    1 <= sum([toInt(x_ExplicitVarSizeWithDummy[q3] != 6) | q3 : int(1..4)]),
    and([q5 + 1 <= y_ExplicitVarSizeWithMarker_Marker ->
         y_ExplicitVarSizeWithMarker_Values[q5] < y_ExplicitVarSizeWithMarker_Values[q5 + 1]
             | q5 : int(1..3)]),
    and([q6 > y_ExplicitVarSizeWithMarker_Marker -> y_ExplicitVarSizeWithMarker_Values[q6] = 2 | q6 : int(1..4)]),
    1 <= y_ExplicitVarSizeWithMarker_Marker,
    1 <= sum([toInt(y_Occurrence[q8]) | q8 : int(2..5)]),
    and([y_Occurrence[q9] ->
         or([q11 <= y_ExplicitVarSizeWithMarker_Marker /\ y_ExplicitVarSizeWithMarker_Values[q11] = q9
                 | q11 : int(1..4)])
             | q9 : int(2..5)]),
    and([q13 <= y_ExplicitVarSizeWithMarker_Marker -> y_Occurrence[y_ExplicitVarSizeWithMarker_Values[q13]]
             | q13 : int(1..4)])

