language ESSENCE' 1.0

find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(2..6)
find x_Occurrence: matrix indexed by [int(2..5)] of bool
find y_Occurrence: matrix indexed by [int(2..5)] of bool
branching on [x_Occurrence, x_ExplicitVarSizeWithDummy, y_Occurrence]
such that
    and([x_ExplicitVarSizeWithDummy[q12] != 6 /\ y_Occurrence[j] -> x_ExplicitVarSizeWithDummy[q12] + 2 = j
             | q12 : int(1..4), j : int(2..5)]),
    and([x_ExplicitVarSizeWithDummy[q1] < x_ExplicitVarSizeWithDummy[q1 + 1] \/ x_ExplicitVarSizeWithDummy[q1] = 6
             | q1 : int(1..3)]),
    and([x_ExplicitVarSizeWithDummy[q2] = 6 -> x_ExplicitVarSizeWithDummy[q2 + 1] = 6 | q2 : int(1..3)]),
    1 <= sum([toInt(x_ExplicitVarSizeWithDummy[q3] != 6) | q3 : int(1..4)]),
    1 <= sum([toInt(y_Occurrence[q5]) | q5 : int(2..5)]),
    1 <= sum([toInt(x_Occurrence[q6]) | q6 : int(2..5)]),
    and([x_Occurrence[q7] ->
         or([x_ExplicitVarSizeWithDummy[q9] != 6 /\ x_ExplicitVarSizeWithDummy[q9] = q7 | q9 : int(1..4)])
             | q7 : int(2..5)]),
    and([x_ExplicitVarSizeWithDummy[q11] != 6 -> x_Occurrence[x_ExplicitVarSizeWithDummy[q11]] | q11 : int(1..4)])

