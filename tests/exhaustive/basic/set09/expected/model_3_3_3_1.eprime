language ESSENCE' 1.0

find x_ExplicitVarSizeWithMarker_Marker: int(0..4)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(2..5)
find y_ExplicitVarSizeWithMarker_Marker: int(0..4)
find y_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(2..5)
find y_Occurrence: matrix indexed by [int(2..5)] of bool
branching on
    [x_ExplicitVarSizeWithMarker_Marker, x_ExplicitVarSizeWithMarker_Values, y_Occurrence,
     y_ExplicitVarSizeWithMarker_Marker, y_ExplicitVarSizeWithMarker_Values]
such that
    and([q13 <= x_ExplicitVarSizeWithMarker_Marker /\ q14 <= y_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q13] + 2 = y_ExplicitVarSizeWithMarker_Values[q14]
             | q13 : int(1..4), q14 : int(1..4)]),
    and([q1 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q1] < x_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([q2 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q2] = 2 | q2 : int(1..4)]),
    1 <= x_ExplicitVarSizeWithMarker_Marker,
    and([q4 + 1 <= y_ExplicitVarSizeWithMarker_Marker ->
         y_ExplicitVarSizeWithMarker_Values[q4] < y_ExplicitVarSizeWithMarker_Values[q4 + 1]
             | q4 : int(1..3)]),
    and([q5 > y_ExplicitVarSizeWithMarker_Marker -> y_ExplicitVarSizeWithMarker_Values[q5] = 2 | q5 : int(1..4)]),
    1 <= y_ExplicitVarSizeWithMarker_Marker,
    1 <= sum([toInt(y_Occurrence[q7]) | q7 : int(2..5)]),
    and([y_Occurrence[q8] ->
         or([q10 <= y_ExplicitVarSizeWithMarker_Marker /\ y_ExplicitVarSizeWithMarker_Values[q10] = q8
                 | q10 : int(1..4)])
             | q8 : int(2..5)]),
    and([q12 <= y_ExplicitVarSizeWithMarker_Marker -> y_Occurrence[y_ExplicitVarSizeWithMarker_Values[q12]]
             | q12 : int(1..4)])

