language ESSENCE' 1.0

find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(2..6)
find y_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(2..6)
find y_Occurrence: matrix indexed by [int(2..5)] of bool
branching on [x_ExplicitVarSizeWithDummy, y_Occurrence, y_ExplicitVarSizeWithDummy]
such that
    and([x_ExplicitVarSizeWithDummy[q15] != 6 /\ y_ExplicitVarSizeWithDummy[q16] != 6 ->
         x_ExplicitVarSizeWithDummy[q15] + 2 = y_ExplicitVarSizeWithDummy[q16]
             | q15 : int(1..4), q16 : int(1..4)]),
    and([x_ExplicitVarSizeWithDummy[q1] < x_ExplicitVarSizeWithDummy[q1 + 1] \/ x_ExplicitVarSizeWithDummy[q1] = 6
             | q1 : int(1..3)]),
    and([x_ExplicitVarSizeWithDummy[q2] = 6 -> x_ExplicitVarSizeWithDummy[q2 + 1] = 6 | q2 : int(1..3)]),
    1 <= sum([toInt(x_ExplicitVarSizeWithDummy[q3] != 6) | q3 : int(1..4)]),
    and([y_ExplicitVarSizeWithDummy[q5] < y_ExplicitVarSizeWithDummy[q5 + 1] \/ y_ExplicitVarSizeWithDummy[q5] = 6
             | q5 : int(1..3)]),
    and([y_ExplicitVarSizeWithDummy[q6] = 6 -> y_ExplicitVarSizeWithDummy[q6 + 1] = 6 | q6 : int(1..3)]),
    1 <= sum([toInt(y_ExplicitVarSizeWithDummy[q7] != 6) | q7 : int(1..4)]),
    1 <= sum([toInt(y_Occurrence[q9]) | q9 : int(2..5)]),
    and([y_Occurrence[q10] ->
         or([y_ExplicitVarSizeWithDummy[q12] != 6 /\ y_ExplicitVarSizeWithDummy[q12] = q10 | q12 : int(1..4)])
             | q10 : int(2..5)]),
    and([y_ExplicitVarSizeWithDummy[q14] != 6 -> y_Occurrence[y_ExplicitVarSizeWithDummy[q14]] | q14 : int(1..4)])

