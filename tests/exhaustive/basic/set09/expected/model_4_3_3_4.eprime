language ESSENCE' 1.0

find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find x_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..4)] of int(2..5)
find x_ExplicitVarSizeWithMarker_Marker: int(0..4)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(2..5)
find y_ExplicitVarSizeWithMarker_Marker: int(0..4)
find y_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(2..5)
find y_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find y_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..4)] of int(2..5)
branching on
    [x_ExplicitVarSizeWithMarker_Marker, x_ExplicitVarSizeWithMarker_Values, x_ExplicitVarSizeWithFlags_Flags,
     x_ExplicitVarSizeWithFlags_Values, y_ExplicitVarSizeWithFlags_Flags, y_ExplicitVarSizeWithFlags_Values,
     y_ExplicitVarSizeWithMarker_Marker, y_ExplicitVarSizeWithMarker_Values]
such that
    and([x_ExplicitVarSizeWithFlags_Flags[q33] /\ q34 <= y_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithFlags_Values[q33] + 2 = y_ExplicitVarSizeWithMarker_Values[q34]
             | q33 : int(1..4), q34 : int(1..4)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         x_ExplicitVarSizeWithFlags_Values[q1] < x_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q2] = false -> x_ExplicitVarSizeWithFlags_Values[q2] = 2 | q2 : int(1..4)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q3 + 1] -> x_ExplicitVarSizeWithFlags_Flags[q3] | q3 : int(1..3)]),
    1 <= sum([toInt(x_ExplicitVarSizeWithFlags_Flags[q4]) | q4 : int(1..4)]),
    and([q6 + 1 <= y_ExplicitVarSizeWithMarker_Marker ->
         y_ExplicitVarSizeWithMarker_Values[q6] < y_ExplicitVarSizeWithMarker_Values[q6 + 1]
             | q6 : int(1..3)]),
    and([q7 > y_ExplicitVarSizeWithMarker_Marker -> y_ExplicitVarSizeWithMarker_Values[q7] = 2 | q7 : int(1..4)]),
    1 <= y_ExplicitVarSizeWithMarker_Marker,
    and([q9 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q9] < x_ExplicitVarSizeWithMarker_Values[q9 + 1]
             | q9 : int(1..3)]),
    and([q10 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q10] = 2 | q10 : int(1..4)]),
    1 <= x_ExplicitVarSizeWithMarker_Marker,
    and([q13 <= x_ExplicitVarSizeWithMarker_Marker ->
         or([x_ExplicitVarSizeWithFlags_Flags[q15] /\
             x_ExplicitVarSizeWithFlags_Values[q15] = x_ExplicitVarSizeWithMarker_Values[q13]
                 | q15 : int(1..4)])
             | q13 : int(1..4)]),
    and([x_ExplicitVarSizeWithFlags_Flags[q17] ->
         or([q19 <= x_ExplicitVarSizeWithMarker_Marker /\
             x_ExplicitVarSizeWithMarker_Values[q19] = x_ExplicitVarSizeWithFlags_Values[q17]
                 | q19 : int(1..4)])
             | q17 : int(1..4)]),
    and([y_ExplicitVarSizeWithFlags_Flags[q20 + 1] ->
         y_ExplicitVarSizeWithFlags_Values[q20] < y_ExplicitVarSizeWithFlags_Values[q20 + 1]
             | q20 : int(1..3)]),
    and([y_ExplicitVarSizeWithFlags_Flags[q21] = false -> y_ExplicitVarSizeWithFlags_Values[q21] = 2
             | q21 : int(1..4)]),
    and([y_ExplicitVarSizeWithFlags_Flags[q22 + 1] -> y_ExplicitVarSizeWithFlags_Flags[q22] | q22 : int(1..3)]),
    1 <= sum([toInt(y_ExplicitVarSizeWithFlags_Flags[q23]) | q23 : int(1..4)]),
    and([y_ExplicitVarSizeWithFlags_Flags[q26] ->
         or([q28 <= y_ExplicitVarSizeWithMarker_Marker /\
             y_ExplicitVarSizeWithMarker_Values[q28] = y_ExplicitVarSizeWithFlags_Values[q26]
                 | q28 : int(1..4)])
             | q26 : int(1..4)]),
    and([q30 <= y_ExplicitVarSizeWithMarker_Marker ->
         or([y_ExplicitVarSizeWithFlags_Flags[q32] /\
             y_ExplicitVarSizeWithFlags_Values[q32] = y_ExplicitVarSizeWithMarker_Values[q30]
                 | q32 : int(1..4)])
             | q30 : int(1..4)])

