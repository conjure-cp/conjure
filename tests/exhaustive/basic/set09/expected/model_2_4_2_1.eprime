language ESSENCE' 1.0

find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(2..6)
find y_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find y_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..4)] of int(2..5)
find y_Occurrence: matrix indexed by [int(2..5)] of bool
branching on
    [x_ExplicitVarSizeWithDummy, y_Occurrence, y_ExplicitVarSizeWithFlags_Flags, y_ExplicitVarSizeWithFlags_Values]
such that
    and([x_ExplicitVarSizeWithDummy[q16] != 6 /\ y_ExplicitVarSizeWithFlags_Flags[q17] ->
         x_ExplicitVarSizeWithDummy[q16] + 2 = y_ExplicitVarSizeWithFlags_Values[q17]
             | q16 : int(1..4), q17 : int(1..4)]),
    and([x_ExplicitVarSizeWithDummy[q1] < x_ExplicitVarSizeWithDummy[q1 + 1] \/ x_ExplicitVarSizeWithDummy[q1] = 6
             | q1 : int(1..3)]),
    and([x_ExplicitVarSizeWithDummy[q2] = 6 -> x_ExplicitVarSizeWithDummy[q2 + 1] = 6 | q2 : int(1..3)]),
    1 <= sum([toInt(x_ExplicitVarSizeWithDummy[q3] != 6) | q3 : int(1..4)]),
    and([y_ExplicitVarSizeWithFlags_Flags[q5 + 1] ->
         y_ExplicitVarSizeWithFlags_Values[q5] < y_ExplicitVarSizeWithFlags_Values[q5 + 1]
             | q5 : int(1..3)]),
    and([y_ExplicitVarSizeWithFlags_Flags[q6] = false -> y_ExplicitVarSizeWithFlags_Values[q6] = 2 | q6 : int(1..4)]),
    and([y_ExplicitVarSizeWithFlags_Flags[q7 + 1] -> y_ExplicitVarSizeWithFlags_Flags[q7] | q7 : int(1..3)]),
    1 <= sum([toInt(y_ExplicitVarSizeWithFlags_Flags[q8]) | q8 : int(1..4)]),
    1 <= sum([toInt(y_Occurrence[q10]) | q10 : int(2..5)]),
    and([y_Occurrence[q11] ->
         or([y_ExplicitVarSizeWithFlags_Flags[q13] /\ y_ExplicitVarSizeWithFlags_Values[q13] = q11 | q13 : int(1..4)])
             | q11 : int(2..5)]),
    and([y_ExplicitVarSizeWithFlags_Flags[q15] -> y_Occurrence[y_ExplicitVarSizeWithFlags_Values[q15]]
             | q15 : int(1..4)])

