language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(2..5)] of bool
find x_ExplicitVarSizeWithMarker_Marker: int(0..4)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(2..5)
find y_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(2..6)
branching on
    [x_ExplicitVarSizeWithMarker_Marker, x_ExplicitVarSizeWithMarker_Values, x_Occurrence, y_ExplicitVarSizeWithDummy]
such that
    and([x_Occurrence[i] /\ y_ExplicitVarSizeWithDummy[q14] != 6 -> i + 2 = y_ExplicitVarSizeWithDummy[q14]
             | i : int(2..5), q14 : int(1..4)]),
    1 <= sum([toInt(x_Occurrence[q1]) | q1 : int(2..5)]),
    and([y_ExplicitVarSizeWithDummy[q2] < y_ExplicitVarSizeWithDummy[q2 + 1] \/ y_ExplicitVarSizeWithDummy[q2] = 6
             | q2 : int(1..3)]),
    and([y_ExplicitVarSizeWithDummy[q3] = 6 -> y_ExplicitVarSizeWithDummy[q3 + 1] = 6 | q3 : int(1..3)]),
    1 <= sum([toInt(y_ExplicitVarSizeWithDummy[q4] != 6) | q4 : int(1..4)]),
    and([q6 + 1 <= x_ExplicitVarSizeWithMarker_Marker ->
         x_ExplicitVarSizeWithMarker_Values[q6] < x_ExplicitVarSizeWithMarker_Values[q6 + 1]
             | q6 : int(1..3)]),
    and([q7 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q7] = 2 | q7 : int(1..4)]),
    1 <= x_ExplicitVarSizeWithMarker_Marker,
    and([q10 <= x_ExplicitVarSizeWithMarker_Marker -> x_Occurrence[x_ExplicitVarSizeWithMarker_Values[q10]]
             | q10 : int(1..4)]),
    and([x_Occurrence[q11] ->
         or([q13 <= x_ExplicitVarSizeWithMarker_Marker /\ x_ExplicitVarSizeWithMarker_Values[q13] = q11
                 | q13 : int(1..4)])
             | q11 : int(2..5)])

