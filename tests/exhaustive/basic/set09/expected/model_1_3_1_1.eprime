language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(2..5)] of bool
find y_ExplicitVarSizeWithMarker_Marker: int(0..4)
find y_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(2..5)
find y_Occurrence: matrix indexed by [int(2..5)] of bool
branching on [x_Occurrence, y_Occurrence, y_ExplicitVarSizeWithMarker_Marker, y_ExplicitVarSizeWithMarker_Values]
such that
    and([x_Occurrence[i] /\ q11 <= y_ExplicitVarSizeWithMarker_Marker -> i + 2 = y_ExplicitVarSizeWithMarker_Values[q11]
             | i : int(2..5), q11 : int(1..4)]),
    1 <= sum([toInt(x_Occurrence[q1]) | q1 : int(2..5)]),
    and([q2 + 1 <= y_ExplicitVarSizeWithMarker_Marker ->
         y_ExplicitVarSizeWithMarker_Values[q2] < y_ExplicitVarSizeWithMarker_Values[q2 + 1]
             | q2 : int(1..3)]),
    and([q3 > y_ExplicitVarSizeWithMarker_Marker -> y_ExplicitVarSizeWithMarker_Values[q3] = 2 | q3 : int(1..4)]),
    1 <= y_ExplicitVarSizeWithMarker_Marker,
    1 <= sum([toInt(y_Occurrence[q5]) | q5 : int(2..5)]),
    and([y_Occurrence[q6] ->
         or([q8 <= y_ExplicitVarSizeWithMarker_Marker /\ y_ExplicitVarSizeWithMarker_Values[q8] = q6 | q8 : int(1..4)])
             | q6 : int(2..5)]),
    and([q10 <= y_ExplicitVarSizeWithMarker_Marker -> y_Occurrence[y_ExplicitVarSizeWithMarker_Values[q10]]
             | q10 : int(1..4)])

