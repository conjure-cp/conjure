language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(2..5)] of bool
find y_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(2..6)
find y_Occurrence: matrix indexed by [int(2..5)] of bool
branching on [x_Occurrence, y_Occurrence, y_ExplicitVarSizeWithDummy]
such that
    and([x_Occurrence[i] /\ y_ExplicitVarSizeWithDummy[q12] != 6 -> i + 2 = y_ExplicitVarSizeWithDummy[q12]
             | i : int(2..5), q12 : int(1..4)]),
    1 <= sum([toInt(x_Occurrence[q1]) | q1 : int(2..5)]),
    and([y_ExplicitVarSizeWithDummy[q2] < y_ExplicitVarSizeWithDummy[q2 + 1] \/ y_ExplicitVarSizeWithDummy[q2] = 6
             | q2 : int(1..3)]),
    and([y_ExplicitVarSizeWithDummy[q3] = 6 -> y_ExplicitVarSizeWithDummy[q3 + 1] = 6 | q3 : int(1..3)]),
    1 <= sum([toInt(y_ExplicitVarSizeWithDummy[q4] != 6) | q4 : int(1..4)]),
    1 <= sum([toInt(y_Occurrence[q6]) | q6 : int(2..5)]),
    and([y_Occurrence[q7] ->
         or([y_ExplicitVarSizeWithDummy[q9] != 6 /\ y_ExplicitVarSizeWithDummy[q9] = q7 | q9 : int(1..4)])
             | q7 : int(2..5)]),
    and([y_ExplicitVarSizeWithDummy[q11] != 6 -> y_Occurrence[y_ExplicitVarSizeWithDummy[q11]] | q11 : int(1..4)])

