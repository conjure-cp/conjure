language ESSENCE' 1.0

find x_ExplicitR4_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2), int(1..3)] of bool
find x_ExplicitR4_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..2), int(1..3)] of int(1..2)
branching on [x_ExplicitR4_ExplicitVarSizeWithFlags_Flags, x_ExplicitR4_ExplicitVarSizeWithFlags_Values]
such that
    flatten([flatten([[-toInt(x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[1, q8]); int(1)],
                      [x_ExplicitR4_ExplicitVarSizeWithFlags_Values[1, q8]; int(1)];
                          int(1..2)])
                 | q8 : int(1..3)])
    <lex
    flatten([flatten([[-toInt(x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[2, q9]); int(1)],
                      [x_ExplicitR4_ExplicitVarSizeWithFlags_Values[2, q9]; int(1)];
                          int(1..2)])
                 | q9 : int(1..3)]),
    and([and([x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[q2, q3 + 1] ->
              x_ExplicitR4_ExplicitVarSizeWithFlags_Values[q2, q3] <
              x_ExplicitR4_ExplicitVarSizeWithFlags_Values[q2, q3 + 1]
                  | q3 : int(1..2)])
             | q2 : int(1..2)]),
    and([and([x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[q2, q4] = false ->
              x_ExplicitR4_ExplicitVarSizeWithFlags_Values[q2, q4] = 1
                  | q4 : int(1..3)])
             | q2 : int(1..2)]),
    and([and([x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[q2, q5 + 1] ->
              x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[q2, q5]
                  | q5 : int(1..2)])
             | q2 : int(1..2)]),
    and([sum([toInt(x_ExplicitR4_ExplicitVarSizeWithFlags_Flags[q2, q6]) | q6 : int(1..3)]) <= 3 | q2 : int(1..2)])

