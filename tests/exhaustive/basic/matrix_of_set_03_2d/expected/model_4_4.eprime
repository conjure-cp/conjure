language ESSENCE' 1.0

find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2), int(1..3), int(1..3)] of bool
find x_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..2), int(1..3), int(1..3)] of int(1..3)
branching on [x_ExplicitVarSizeWithFlags_Flags, x_ExplicitVarSizeWithFlags_Values]
such that
    and([x_ExplicitVarSizeWithFlags_Flags[j1, j2, q8] -> x_ExplicitVarSizeWithFlags_Values[j1, j2, q8] % 2 = 0
             | j1 : int(1..2), j2 : int(1..3), q8 : int(1..3)]),
    and([and([and([x_ExplicitVarSizeWithFlags_Flags[q1, q2, q3 + 1] ->
                   x_ExplicitVarSizeWithFlags_Values[q1, q2, q3] < x_ExplicitVarSizeWithFlags_Values[q1, q2, q3 + 1]
                       | q3 : int(1..2)])
                  | q2 : int(1..3)])
             | q1 : int(1..2)]),
    and([and([and([x_ExplicitVarSizeWithFlags_Flags[q1, q2, q4] = false ->
                   x_ExplicitVarSizeWithFlags_Values[q1, q2, q4] = 1
                       | q4 : int(1..3)])
                  | q2 : int(1..3)])
             | q1 : int(1..2)]),
    and([and([and([x_ExplicitVarSizeWithFlags_Flags[q1, q2, q5 + 1] -> x_ExplicitVarSizeWithFlags_Flags[q1, q2, q5]
                       | q5 : int(1..2)])
                  | q2 : int(1..3)])
             | q1 : int(1..2)]),
    and([and([1 <= sum([toInt(x_ExplicitVarSizeWithFlags_Flags[q1, q2, q6]) | q6 : int(1..3)]) | q2 : int(1..3)])
             | q1 : int(1..2)])

