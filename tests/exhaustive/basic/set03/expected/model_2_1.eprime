language ESSENCE' 1.0

find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..2)] of int(1..3)
find x_Occurrence: matrix indexed by [int(1..2)] of bool
branching on [x_Occurrence, x_ExplicitVarSizeWithDummy]
such that
    or([x_ExplicitVarSizeWithDummy[q12] != 3 /\ x_ExplicitVarSizeWithDummy[q12] = 1 | q12 : int(1..2)]),
    x_ExplicitVarSizeWithDummy[1] < x_ExplicitVarSizeWithDummy[2] \/ x_ExplicitVarSizeWithDummy[1] = 3,
    x_ExplicitVarSizeWithDummy[1] = 3 -> x_ExplicitVarSizeWithDummy[2] = 3,
    sum([toInt(x_ExplicitVarSizeWithDummy[q3] != 3) | q3 : int(1..2)]) <= 2,
    sum([toInt(x_Occurrence[q5]) | q5 : int(1..2)]) <= 2,
    and([x_Occurrence[q6] ->
         or([x_ExplicitVarSizeWithDummy[q8] != 3 /\ x_ExplicitVarSizeWithDummy[q8] = q6 | q8 : int(1..2)])
             | q6 : int(1..2)]),
    and([x_ExplicitVarSizeWithDummy[q10] != 3 -> x_Occurrence[x_ExplicitVarSizeWithDummy[q10]] | q10 : int(1..2)])

