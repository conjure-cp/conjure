language ESSENCE' 1.0

find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..2)] of int(1..3)
find x_ExplicitVarSizeWithMarker_Marker: int(0..2)
find x_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..2)] of int(1..2)
branching on [x_ExplicitVarSizeWithMarker_Marker, x_ExplicitVarSizeWithMarker_Values, x_ExplicitVarSizeWithDummy]
such that
    or([x_ExplicitVarSizeWithDummy[q17] != 3 /\ x_ExplicitVarSizeWithDummy[q17] = 1 | q17 : int(1..2)]),
    x_ExplicitVarSizeWithDummy[1] < x_ExplicitVarSizeWithDummy[2] \/ x_ExplicitVarSizeWithDummy[1] = 3,
    x_ExplicitVarSizeWithDummy[1] = 3 -> x_ExplicitVarSizeWithDummy[2] = 3,
    sum([toInt(x_ExplicitVarSizeWithDummy[q3] != 3) | q3 : int(1..2)]) <= 2,
    2 <= x_ExplicitVarSizeWithMarker_Marker ->
    x_ExplicitVarSizeWithMarker_Values[1] < x_ExplicitVarSizeWithMarker_Values[2],
    and([q6 > x_ExplicitVarSizeWithMarker_Marker -> x_ExplicitVarSizeWithMarker_Values[q6] = 1 | q6 : int(1..2)]),
    x_ExplicitVarSizeWithMarker_Marker <= 2,
    and([q9 <= x_ExplicitVarSizeWithMarker_Marker ->
         or([x_ExplicitVarSizeWithDummy[q11] != 3 /\
             x_ExplicitVarSizeWithDummy[q11] = x_ExplicitVarSizeWithMarker_Values[q9]
                 | q11 : int(1..2)])
             | q9 : int(1..2)]),
    and([x_ExplicitVarSizeWithDummy[q13] != 3 ->
         or([q15 <= x_ExplicitVarSizeWithMarker_Marker /\
             x_ExplicitVarSizeWithMarker_Values[q15] = x_ExplicitVarSizeWithDummy[q13]
                 | q15 : int(1..2)])
             | q13 : int(1..2)])

