language ESSENCE' 1.0

find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..2)] of int(1..3)
find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2)] of bool
find x_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..2)] of int(1..2)
branching on [x_ExplicitVarSizeWithFlags_Flags, x_ExplicitVarSizeWithFlags_Values, x_ExplicitVarSizeWithDummy]
such that
    or([x_ExplicitVarSizeWithDummy[q19] != 3 /\ x_ExplicitVarSizeWithDummy[q19] = 1 | q19 : int(1..2)]),
    x_ExplicitVarSizeWithDummy[1] < x_ExplicitVarSizeWithDummy[2] \/ x_ExplicitVarSizeWithDummy[1] = 3,
    x_ExplicitVarSizeWithDummy[1] = 3 -> x_ExplicitVarSizeWithDummy[2] = 3,
    sum([toInt(x_ExplicitVarSizeWithDummy[q3] != 3) | q3 : int(1..2)]) <= 2,
    x_ExplicitVarSizeWithFlags_Flags[2] -> x_ExplicitVarSizeWithFlags_Values[1] < x_ExplicitVarSizeWithFlags_Values[2],
    and([x_ExplicitVarSizeWithFlags_Flags[q6] = false -> x_ExplicitVarSizeWithFlags_Values[q6] = 1 | q6 : int(1..2)]),
    x_ExplicitVarSizeWithFlags_Flags[2] -> x_ExplicitVarSizeWithFlags_Flags[1],
    sum([toInt(x_ExplicitVarSizeWithFlags_Flags[q8]) | q8 : int(1..2)]) <= 2,
    and([x_ExplicitVarSizeWithFlags_Flags[q11] ->
         or([x_ExplicitVarSizeWithDummy[q13] != 3 /\
             x_ExplicitVarSizeWithDummy[q13] = x_ExplicitVarSizeWithFlags_Values[q11]
                 | q13 : int(1..2)])
             | q11 : int(1..2)]),
    and([x_ExplicitVarSizeWithDummy[q15] != 3 ->
         or([x_ExplicitVarSizeWithFlags_Flags[q17] /\
             x_ExplicitVarSizeWithFlags_Values[q17] = x_ExplicitVarSizeWithDummy[q15]
                 | q17 : int(1..2)])
             | q15 : int(1..2)])

