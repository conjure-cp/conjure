language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(1..2)] of bool
find x_ExplicitVarSizeWithDummy: matrix indexed by [int(1..2)] of int(1..3)
branching on [x_ExplicitVarSizeWithDummy, x_Occurrence]
such that
    x_Occurrence[1],
    sum([toInt(x_Occurrence[q1]) | q1 : int(1..2)]) <= 2,
    x_ExplicitVarSizeWithDummy[1] < x_ExplicitVarSizeWithDummy[2] \/ x_ExplicitVarSizeWithDummy[1] = 3,
    x_ExplicitVarSizeWithDummy[1] = 3 -> x_ExplicitVarSizeWithDummy[2] = 3,
    sum([toInt(x_ExplicitVarSizeWithDummy[q4] != 3) | q4 : int(1..2)]) <= 2,
    and([x_ExplicitVarSizeWithDummy[q7] != 3 -> x_Occurrence[x_ExplicitVarSizeWithDummy[q7]] | q7 : int(1..2)]),
    and([x_Occurrence[q8] ->
         or([x_ExplicitVarSizeWithDummy[q10] != 3 /\ x_ExplicitVarSizeWithDummy[q10] = q8 | q10 : int(1..2)])
             | q8 : int(1..2)])

