language ESSENCE' 1.0

find x_Function1DPartial_Flags: matrix indexed by [int(1..3)] of bool
find x_Function1DPartial_Values: matrix indexed by [int(1..3)] of int(1..3)
branching on [x_Function1DPartial_Flags, x_Function1DPartial_Values]
such that
    x_Function1DPartial_Values[sum([toInt(x_Function1DPartial_Flags[q7]) | q7 : int(1..3)])] =
    sum([toInt(x_Function1DPartial_Flags[q11]) | q11 : int(1..3)]),
    x_Function1DPartial_Flags[sum([toInt(x_Function1DPartial_Flags[q9]) | q9 : int(1..3)])],
    and([x_Function1DPartial_Flags[q1] /\ x_Function1DPartial_Flags[q2] ->
         x_Function1DPartial_Values[q1] != x_Function1DPartial_Values[q2]
             | q1 : int(1..3), q2 : int(1..3), [q1; int(1)] <lex [q2; int(1)]]),
    and([x_Function1DPartial_Flags[q3] = false -> x_Function1DPartial_Values[q3] = 1 | q3 : int(1..3)])

