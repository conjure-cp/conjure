language ESSENCE' 1.0

find a_Explicit: matrix indexed by [int(1)] of int(1..3)
find a_Occurrence: matrix indexed by [int(1..3)] of bool
find b_Occurrence: matrix indexed by [int(1..3)] of bool
find b_Explicit: matrix indexed by [int(1)] of int(1..3)
branching on [a_Occurrence, a_Explicit, b_Explicit, b_Occurrence]
such that
    a_Explicit[1] % 2 = 0,
    and([b_Occurrence[i] -> i % 2 = 0 | i : int(1..3)]),
    1 = sum([toInt(b_Occurrence[q3]) | q3 : int(1..3)]),
    1 = sum([toInt(a_Occurrence[q4]) | q4 : int(1..3)]),
    and([a_Occurrence[q12] -> a_Explicit[1] = q12 | q12 : int(1..3)]),
    a_Occurrence[a_Explicit[1]],
    b_Occurrence[b_Explicit[1]],
    and([b_Occurrence[q9] -> b_Explicit[1] = q9 | q9 : int(1..3)])

