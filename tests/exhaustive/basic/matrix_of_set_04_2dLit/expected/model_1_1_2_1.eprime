language ESSENCE' 1.0

find a_Explicit: matrix indexed by [int(1)] of int(1..3)
find a_Occurrence: matrix indexed by [int(1..3)] of bool
find b_Explicit: matrix indexed by [int(1)] of int(1..3)
branching on [a_Occurrence, a_Explicit, b_Explicit]
such that
    a_Explicit[1] % 2 = 0,
    b_Explicit[1] % 2 = 0,
    1 = sum([toInt(a_Occurrence[q5]) | q5 : int(1..3)]),
    and([a_Occurrence[q6] -> a_Explicit[1] = q6 | q6 : int(1..3)]),
    a_Occurrence[a_Explicit[1]]

