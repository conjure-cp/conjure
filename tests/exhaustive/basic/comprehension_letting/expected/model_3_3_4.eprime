language ESSENCE' 1.0

find s_ExplicitVarSizeWithMarker_Marker: int(0..4)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(1..4)
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find s_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..4)] of int(1..4)
letting let1 be -100
find x: int(-100..100)
find conjure_aux1: int(-16..3)
branching on
    [s_ExplicitVarSizeWithFlags_Flags, s_ExplicitVarSizeWithFlags_Values, s_ExplicitVarSizeWithMarker_Marker,
     s_ExplicitVarSizeWithMarker_Values, x]
such that
    and([and([q17 <= s_ExplicitVarSizeWithMarker_Marker, q18 <= s_ExplicitVarSizeWithMarker_Marker,
              s_ExplicitVarSizeWithMarker_Values[q17] != s_ExplicitVarSizeWithMarker_Values[q18],
              allDiff([s_ExplicitVarSizeWithMarker_Values[q17] + s_ExplicitVarSizeWithMarker_Values[q18],
                       s_ExplicitVarSizeWithMarker_Values[q17] * s_ExplicitVarSizeWithMarker_Values[q18],
                       s_ExplicitVarSizeWithMarker_Values[q17] / s_ExplicitVarSizeWithMarker_Values[q18];
                           int(1..3)]),
              (s_ExplicitVarSizeWithMarker_Values[q17] - s_ExplicitVarSizeWithMarker_Values[q18]) % 2 = 0;
                  int(1..5)])
         ->
         min([s_ExplicitVarSizeWithMarker_Values[q17] + s_ExplicitVarSizeWithMarker_Values[q18],
              s_ExplicitVarSizeWithMarker_Values[q17] - s_ExplicitVarSizeWithMarker_Values[q18],
              s_ExplicitVarSizeWithMarker_Values[q17] * s_ExplicitVarSizeWithMarker_Values[q18],
              s_ExplicitVarSizeWithMarker_Values[q17] / s_ExplicitVarSizeWithMarker_Values[q18];
                  int(1..4)])
         <= conjure_aux1
             | q17 : int(1..4), q18 : int(1..4)]),
    sum([toInt(and([q17 <= s_ExplicitVarSizeWithMarker_Marker, q18 <= s_ExplicitVarSizeWithMarker_Marker,
                    s_ExplicitVarSizeWithMarker_Values[q17] != s_ExplicitVarSizeWithMarker_Values[q18],
                    allDiff([s_ExplicitVarSizeWithMarker_Values[q17] + s_ExplicitVarSizeWithMarker_Values[q18],
                             s_ExplicitVarSizeWithMarker_Values[q17] * s_ExplicitVarSizeWithMarker_Values[q18],
                             s_ExplicitVarSizeWithMarker_Values[q17] / s_ExplicitVarSizeWithMarker_Values[q18];
                                 int(1..3)]),
                    (s_ExplicitVarSizeWithMarker_Values[q17] - s_ExplicitVarSizeWithMarker_Values[q18]) % 2 = 0;
                        int(1..5)]))
             | q17 : int(1..4), q18 : int(1..4)])
    > 0
    ->
    or([and([q17 <= s_ExplicitVarSizeWithMarker_Marker, q18 <= s_ExplicitVarSizeWithMarker_Marker,
             s_ExplicitVarSizeWithMarker_Values[q17] != s_ExplicitVarSizeWithMarker_Values[q18],
             allDiff([s_ExplicitVarSizeWithMarker_Values[q17] + s_ExplicitVarSizeWithMarker_Values[q18],
                      s_ExplicitVarSizeWithMarker_Values[q17] * s_ExplicitVarSizeWithMarker_Values[q18],
                      s_ExplicitVarSizeWithMarker_Values[q17] / s_ExplicitVarSizeWithMarker_Values[q18];
                          int(1..3)]),
             (s_ExplicitVarSizeWithMarker_Values[q17] - s_ExplicitVarSizeWithMarker_Values[q18]) % 2 = 0;
                 int(1..5)])
        /\
        min([s_ExplicitVarSizeWithMarker_Values[q17] + s_ExplicitVarSizeWithMarker_Values[q18],
             s_ExplicitVarSizeWithMarker_Values[q17] - s_ExplicitVarSizeWithMarker_Values[q18],
             s_ExplicitVarSizeWithMarker_Values[q17] * s_ExplicitVarSizeWithMarker_Values[q18],
             s_ExplicitVarSizeWithMarker_Values[q17] / s_ExplicitVarSizeWithMarker_Values[q18];
                 int(1..4)])
        = conjure_aux1
            | q17 : int(1..4), q18 : int(1..4)]),
    sum([toInt(and([q17 <= s_ExplicitVarSizeWithMarker_Marker, q18 <= s_ExplicitVarSizeWithMarker_Marker,
                    s_ExplicitVarSizeWithMarker_Values[q17] != s_ExplicitVarSizeWithMarker_Values[q18],
                    allDiff([s_ExplicitVarSizeWithMarker_Values[q17] + s_ExplicitVarSizeWithMarker_Values[q18],
                             s_ExplicitVarSizeWithMarker_Values[q17] * s_ExplicitVarSizeWithMarker_Values[q18],
                             s_ExplicitVarSizeWithMarker_Values[q17] / s_ExplicitVarSizeWithMarker_Values[q18];
                                 int(1..3)]),
                    (s_ExplicitVarSizeWithMarker_Values[q17] - s_ExplicitVarSizeWithMarker_Values[q18]) % 2 = 0;
                        int(1..5)]))
             | q17 : int(1..4), q18 : int(1..4)])
    = 0
    -> conjure_aux1 = -16,
    x = conjure_aux1,
    sum([toInt(and([q17 <= s_ExplicitVarSizeWithMarker_Marker, q18 <= s_ExplicitVarSizeWithMarker_Marker,
                    s_ExplicitVarSizeWithMarker_Values[q17] != s_ExplicitVarSizeWithMarker_Values[q18],
                    allDiff([s_ExplicitVarSizeWithMarker_Values[q17] + s_ExplicitVarSizeWithMarker_Values[q18],
                             s_ExplicitVarSizeWithMarker_Values[q17] * s_ExplicitVarSizeWithMarker_Values[q18],
                             s_ExplicitVarSizeWithMarker_Values[q17] / s_ExplicitVarSizeWithMarker_Values[q18];
                                 int(1..3)]),
                    (s_ExplicitVarSizeWithMarker_Values[q17] - s_ExplicitVarSizeWithMarker_Values[q18]) % 2 = 0;
                        int(1..5)]))
             | q17 : int(1..4), q18 : int(1..4)])
    > 0,
    and([q1 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q1] < s_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([q2 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q2] = 1 | q2 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q4 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q4] < s_ExplicitVarSizeWithFlags_Values[q4 + 1]
             | q4 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q5] = false -> s_ExplicitVarSizeWithFlags_Values[q5] = 1 | q5 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q6 + 1] -> s_ExplicitVarSizeWithFlags_Flags[q6] | q6 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q10] ->
         or([q12 <= s_ExplicitVarSizeWithMarker_Marker /\
             s_ExplicitVarSizeWithMarker_Values[q12] = s_ExplicitVarSizeWithFlags_Values[q10]
                 | q12 : int(1..4)])
             | q10 : int(1..4)]),
    and([q14 <= s_ExplicitVarSizeWithMarker_Marker ->
         or([s_ExplicitVarSizeWithFlags_Flags[q16] /\
             s_ExplicitVarSizeWithFlags_Values[q16] = s_ExplicitVarSizeWithMarker_Values[q14]
                 | q16 : int(1..4)])
             | q14 : int(1..4)])

