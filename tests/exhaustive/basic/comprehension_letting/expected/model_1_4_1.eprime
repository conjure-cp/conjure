language ESSENCE' 1.0

find s_Occurrence: matrix indexed by [int(1..4)] of bool
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find s_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..4)] of int(1..4)
letting let1 be -100
find x: int(-100..100)
find conjure_aux1: int(-16..3)
branching on [s_ExplicitVarSizeWithFlags_Flags, s_ExplicitVarSizeWithFlags_Values, s_Occurrence, x]
such that
    and([and([s_Occurrence[i], s_ExplicitVarSizeWithFlags_Flags[q12], i != s_ExplicitVarSizeWithFlags_Values[q12],
              allDiff([i + s_ExplicitVarSizeWithFlags_Values[q12], i * s_ExplicitVarSizeWithFlags_Values[q12],
                       i / s_ExplicitVarSizeWithFlags_Values[q12];
                           int(1..3)]),
              (i - s_ExplicitVarSizeWithFlags_Values[q12]) % 2 = 0;
                  int(1..5)])
         ->
         min([i + s_ExplicitVarSizeWithFlags_Values[q12], i - s_ExplicitVarSizeWithFlags_Values[q12],
              i * s_ExplicitVarSizeWithFlags_Values[q12], i / s_ExplicitVarSizeWithFlags_Values[q12];
                  int(1..4)])
         <= conjure_aux1
             | i : int(1..4), q12 : int(1..4)]),
    sum([toInt(and([s_Occurrence[i], s_ExplicitVarSizeWithFlags_Flags[q12], i != s_ExplicitVarSizeWithFlags_Values[q12],
                    allDiff([i + s_ExplicitVarSizeWithFlags_Values[q12], i * s_ExplicitVarSizeWithFlags_Values[q12],
                             i / s_ExplicitVarSizeWithFlags_Values[q12];
                                 int(1..3)]),
                    (i - s_ExplicitVarSizeWithFlags_Values[q12]) % 2 = 0;
                        int(1..5)]))
             | i : int(1..4), q12 : int(1..4)])
    > 0
    ->
    or([and([s_Occurrence[i], s_ExplicitVarSizeWithFlags_Flags[q12], i != s_ExplicitVarSizeWithFlags_Values[q12],
             allDiff([i + s_ExplicitVarSizeWithFlags_Values[q12], i * s_ExplicitVarSizeWithFlags_Values[q12],
                      i / s_ExplicitVarSizeWithFlags_Values[q12];
                          int(1..3)]),
             (i - s_ExplicitVarSizeWithFlags_Values[q12]) % 2 = 0;
                 int(1..5)])
        /\
        min([i + s_ExplicitVarSizeWithFlags_Values[q12], i - s_ExplicitVarSizeWithFlags_Values[q12],
             i * s_ExplicitVarSizeWithFlags_Values[q12], i / s_ExplicitVarSizeWithFlags_Values[q12];
                 int(1..4)])
        = conjure_aux1
            | i : int(1..4), q12 : int(1..4)]),
    sum([toInt(and([s_Occurrence[i], s_ExplicitVarSizeWithFlags_Flags[q12], i != s_ExplicitVarSizeWithFlags_Values[q12],
                    allDiff([i + s_ExplicitVarSizeWithFlags_Values[q12], i * s_ExplicitVarSizeWithFlags_Values[q12],
                             i / s_ExplicitVarSizeWithFlags_Values[q12];
                                 int(1..3)]),
                    (i - s_ExplicitVarSizeWithFlags_Values[q12]) % 2 = 0;
                        int(1..5)]))
             | i : int(1..4), q12 : int(1..4)])
    = 0
    -> conjure_aux1 = -16,
    x = conjure_aux1,
    sum([toInt(and([s_Occurrence[i], s_ExplicitVarSizeWithFlags_Flags[q12], i != s_ExplicitVarSizeWithFlags_Values[q12],
                    allDiff([i + s_ExplicitVarSizeWithFlags_Values[q12], i * s_ExplicitVarSizeWithFlags_Values[q12],
                             i / s_ExplicitVarSizeWithFlags_Values[q12];
                                 int(1..3)]),
                    (i - s_ExplicitVarSizeWithFlags_Values[q12]) % 2 = 0;
                        int(1..5)]))
             | i : int(1..4), q12 : int(1..4)])
    > 0,
    and([s_ExplicitVarSizeWithFlags_Flags[q2 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q2] < s_ExplicitVarSizeWithFlags_Values[q2 + 1]
             | q2 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q3] = false -> s_ExplicitVarSizeWithFlags_Values[q3] = 1 | q3 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q4 + 1] -> s_ExplicitVarSizeWithFlags_Flags[q4] | q4 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q8] -> s_Occurrence[s_ExplicitVarSizeWithFlags_Values[q8]] | q8 : int(1..4)]),
    and([s_Occurrence[q9] ->
         or([s_ExplicitVarSizeWithFlags_Flags[q11] /\ s_ExplicitVarSizeWithFlags_Values[q11] = q9 | q11 : int(1..4)])
             | q9 : int(1..4)])

