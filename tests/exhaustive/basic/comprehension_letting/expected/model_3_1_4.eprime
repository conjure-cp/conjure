language ESSENCE' 1.0

find s_ExplicitVarSizeWithMarker_Marker: int(0..4)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(1..4)
find s_Occurrence: matrix indexed by [int(1..4)] of bool
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find s_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..4)] of int(1..4)
letting let1 be -100
find x: int(-100..100)
find conjure_aux1: int(-16..3)
branching on
    [s_ExplicitVarSizeWithFlags_Flags, s_ExplicitVarSizeWithFlags_Values, s_ExplicitVarSizeWithMarker_Marker,
     s_ExplicitVarSizeWithMarker_Values, s_Occurrence, x]
such that
    and([and([q23 <= s_ExplicitVarSizeWithMarker_Marker, s_Occurrence[j], s_ExplicitVarSizeWithMarker_Values[q23] != j,
              allDiff([s_ExplicitVarSizeWithMarker_Values[q23] + j, s_ExplicitVarSizeWithMarker_Values[q23] * j,
                       s_ExplicitVarSizeWithMarker_Values[q23] / j;
                           int(1..3)]),
              (s_ExplicitVarSizeWithMarker_Values[q23] - j) % 2 = 0;
                  int(1..5)])
         ->
         min([s_ExplicitVarSizeWithMarker_Values[q23] + j, s_ExplicitVarSizeWithMarker_Values[q23] - j,
              s_ExplicitVarSizeWithMarker_Values[q23] * j, s_ExplicitVarSizeWithMarker_Values[q23] / j;
                  int(1..4)])
         <= conjure_aux1
             | q23 : int(1..4), j : int(1..4)]),
    sum([toInt(and([q23 <= s_ExplicitVarSizeWithMarker_Marker, s_Occurrence[j],
                    s_ExplicitVarSizeWithMarker_Values[q23] != j,
                    allDiff([s_ExplicitVarSizeWithMarker_Values[q23] + j, s_ExplicitVarSizeWithMarker_Values[q23] * j,
                             s_ExplicitVarSizeWithMarker_Values[q23] / j;
                                 int(1..3)]),
                    (s_ExplicitVarSizeWithMarker_Values[q23] - j) % 2 = 0;
                        int(1..5)]))
             | q23 : int(1..4), j : int(1..4)])
    > 0
    ->
    or([and([q23 <= s_ExplicitVarSizeWithMarker_Marker, s_Occurrence[j], s_ExplicitVarSizeWithMarker_Values[q23] != j,
             allDiff([s_ExplicitVarSizeWithMarker_Values[q23] + j, s_ExplicitVarSizeWithMarker_Values[q23] * j,
                      s_ExplicitVarSizeWithMarker_Values[q23] / j;
                          int(1..3)]),
             (s_ExplicitVarSizeWithMarker_Values[q23] - j) % 2 = 0;
                 int(1..5)])
        /\
        min([s_ExplicitVarSizeWithMarker_Values[q23] + j, s_ExplicitVarSizeWithMarker_Values[q23] - j,
             s_ExplicitVarSizeWithMarker_Values[q23] * j, s_ExplicitVarSizeWithMarker_Values[q23] / j;
                 int(1..4)])
        = conjure_aux1
            | q23 : int(1..4), j : int(1..4)]),
    sum([toInt(and([q23 <= s_ExplicitVarSizeWithMarker_Marker, s_Occurrence[j],
                    s_ExplicitVarSizeWithMarker_Values[q23] != j,
                    allDiff([s_ExplicitVarSizeWithMarker_Values[q23] + j, s_ExplicitVarSizeWithMarker_Values[q23] * j,
                             s_ExplicitVarSizeWithMarker_Values[q23] / j;
                                 int(1..3)]),
                    (s_ExplicitVarSizeWithMarker_Values[q23] - j) % 2 = 0;
                        int(1..5)]))
             | q23 : int(1..4), j : int(1..4)])
    = 0
    -> conjure_aux1 = -16,
    x = conjure_aux1,
    sum([toInt(and([q23 <= s_ExplicitVarSizeWithMarker_Marker, s_Occurrence[j],
                    s_ExplicitVarSizeWithMarker_Values[q23] != j,
                    allDiff([s_ExplicitVarSizeWithMarker_Values[q23] + j, s_ExplicitVarSizeWithMarker_Values[q23] * j,
                             s_ExplicitVarSizeWithMarker_Values[q23] / j;
                                 int(1..3)]),
                    (s_ExplicitVarSizeWithMarker_Values[q23] - j) % 2 = 0;
                        int(1..5)]))
             | q23 : int(1..4), j : int(1..4)])
    > 0,
    and([q1 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q1] < s_ExplicitVarSizeWithMarker_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([q2 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q2] = 1 | q2 : int(1..4)]),
    and([s_Occurrence[q45] ->
         or([q47 <= s_ExplicitVarSizeWithMarker_Marker /\ s_ExplicitVarSizeWithMarker_Values[q47] = q45
                 | q47 : int(1..4)])
             | q45 : int(1..4)]),
    and([q49 <= s_ExplicitVarSizeWithMarker_Marker -> s_Occurrence[s_ExplicitVarSizeWithMarker_Values[q49]]
             | q49 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q5 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q5] < s_ExplicitVarSizeWithFlags_Values[q5 + 1]
             | q5 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q6] = false -> s_ExplicitVarSizeWithFlags_Values[q6] = 1 | q6 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q7 + 1] -> s_ExplicitVarSizeWithFlags_Flags[q7] | q7 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q11] ->
         or([q13 <= s_ExplicitVarSizeWithMarker_Marker /\
             s_ExplicitVarSizeWithMarker_Values[q13] = s_ExplicitVarSizeWithFlags_Values[q11]
                 | q13 : int(1..4)])
             | q11 : int(1..4)]),
    and([q15 <= s_ExplicitVarSizeWithMarker_Marker ->
         or([s_ExplicitVarSizeWithFlags_Flags[q17] /\
             s_ExplicitVarSizeWithFlags_Values[q17] = s_ExplicitVarSizeWithMarker_Values[q15]
                 | q17 : int(1..4)])
             | q15 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q19] -> s_Occurrence[s_ExplicitVarSizeWithFlags_Values[q19]]
             | q19 : int(1..4)]),
    and([s_Occurrence[q20] ->
         or([s_ExplicitVarSizeWithFlags_Flags[q22] /\ s_ExplicitVarSizeWithFlags_Values[q22] = q20 | q22 : int(1..4)])
             | q20 : int(1..4)])

