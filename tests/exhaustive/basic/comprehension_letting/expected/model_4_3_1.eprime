language ESSENCE' 1.0

find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find s_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..4)] of int(1..4)
find s_ExplicitVarSizeWithMarker_Marker: int(0..4)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(1..4)
find s_Occurrence: matrix indexed by [int(1..4)] of bool
letting let1 be -100
find x: int(-100..100)
find conjure_aux1: int(-16..3)
branching on
    [s_Occurrence, s_ExplicitVarSizeWithFlags_Flags, s_ExplicitVarSizeWithFlags_Values,
     s_ExplicitVarSizeWithMarker_Marker, s_ExplicitVarSizeWithMarker_Values, x]
such that
    and([and([s_ExplicitVarSizeWithFlags_Flags[q28], q29 <= s_ExplicitVarSizeWithMarker_Marker,
              s_ExplicitVarSizeWithFlags_Values[q28] != s_ExplicitVarSizeWithMarker_Values[q29],
              allDiff([s_ExplicitVarSizeWithFlags_Values[q28] + s_ExplicitVarSizeWithMarker_Values[q29],
                       s_ExplicitVarSizeWithFlags_Values[q28] * s_ExplicitVarSizeWithMarker_Values[q29],
                       s_ExplicitVarSizeWithFlags_Values[q28] / s_ExplicitVarSizeWithMarker_Values[q29];
                           int(1..3)]),
              (s_ExplicitVarSizeWithFlags_Values[q28] - s_ExplicitVarSizeWithMarker_Values[q29]) % 2 = 0;
                  int(1..5)])
         ->
         min([s_ExplicitVarSizeWithFlags_Values[q28] + s_ExplicitVarSizeWithMarker_Values[q29],
              s_ExplicitVarSizeWithFlags_Values[q28] - s_ExplicitVarSizeWithMarker_Values[q29],
              s_ExplicitVarSizeWithFlags_Values[q28] * s_ExplicitVarSizeWithMarker_Values[q29],
              s_ExplicitVarSizeWithFlags_Values[q28] / s_ExplicitVarSizeWithMarker_Values[q29];
                  int(1..4)])
         <= conjure_aux1
             | q28 : int(1..4), q29 : int(1..4)]),
    sum([toInt(and([s_ExplicitVarSizeWithFlags_Flags[q28], q29 <= s_ExplicitVarSizeWithMarker_Marker,
                    s_ExplicitVarSizeWithFlags_Values[q28] != s_ExplicitVarSizeWithMarker_Values[q29],
                    allDiff([s_ExplicitVarSizeWithFlags_Values[q28] + s_ExplicitVarSizeWithMarker_Values[q29],
                             s_ExplicitVarSizeWithFlags_Values[q28] * s_ExplicitVarSizeWithMarker_Values[q29],
                             s_ExplicitVarSizeWithFlags_Values[q28] / s_ExplicitVarSizeWithMarker_Values[q29];
                                 int(1..3)]),
                    (s_ExplicitVarSizeWithFlags_Values[q28] - s_ExplicitVarSizeWithMarker_Values[q29]) % 2 = 0;
                        int(1..5)]))
             | q28 : int(1..4), q29 : int(1..4)])
    > 0
    ->
    or([and([s_ExplicitVarSizeWithFlags_Flags[q28], q29 <= s_ExplicitVarSizeWithMarker_Marker,
             s_ExplicitVarSizeWithFlags_Values[q28] != s_ExplicitVarSizeWithMarker_Values[q29],
             allDiff([s_ExplicitVarSizeWithFlags_Values[q28] + s_ExplicitVarSizeWithMarker_Values[q29],
                      s_ExplicitVarSizeWithFlags_Values[q28] * s_ExplicitVarSizeWithMarker_Values[q29],
                      s_ExplicitVarSizeWithFlags_Values[q28] / s_ExplicitVarSizeWithMarker_Values[q29];
                          int(1..3)]),
             (s_ExplicitVarSizeWithFlags_Values[q28] - s_ExplicitVarSizeWithMarker_Values[q29]) % 2 = 0;
                 int(1..5)])
        /\
        min([s_ExplicitVarSizeWithFlags_Values[q28] + s_ExplicitVarSizeWithMarker_Values[q29],
             s_ExplicitVarSizeWithFlags_Values[q28] - s_ExplicitVarSizeWithMarker_Values[q29],
             s_ExplicitVarSizeWithFlags_Values[q28] * s_ExplicitVarSizeWithMarker_Values[q29],
             s_ExplicitVarSizeWithFlags_Values[q28] / s_ExplicitVarSizeWithMarker_Values[q29];
                 int(1..4)])
        = conjure_aux1
            | q28 : int(1..4), q29 : int(1..4)]),
    sum([toInt(and([s_ExplicitVarSizeWithFlags_Flags[q28], q29 <= s_ExplicitVarSizeWithMarker_Marker,
                    s_ExplicitVarSizeWithFlags_Values[q28] != s_ExplicitVarSizeWithMarker_Values[q29],
                    allDiff([s_ExplicitVarSizeWithFlags_Values[q28] + s_ExplicitVarSizeWithMarker_Values[q29],
                             s_ExplicitVarSizeWithFlags_Values[q28] * s_ExplicitVarSizeWithMarker_Values[q29],
                             s_ExplicitVarSizeWithFlags_Values[q28] / s_ExplicitVarSizeWithMarker_Values[q29];
                                 int(1..3)]),
                    (s_ExplicitVarSizeWithFlags_Values[q28] - s_ExplicitVarSizeWithMarker_Values[q29]) % 2 = 0;
                        int(1..5)]))
             | q28 : int(1..4), q29 : int(1..4)])
    = 0
    -> conjure_aux1 = -16,
    x = conjure_aux1,
    sum([toInt(and([s_ExplicitVarSizeWithFlags_Flags[q28], q29 <= s_ExplicitVarSizeWithMarker_Marker,
                    s_ExplicitVarSizeWithFlags_Values[q28] != s_ExplicitVarSizeWithMarker_Values[q29],
                    allDiff([s_ExplicitVarSizeWithFlags_Values[q28] + s_ExplicitVarSizeWithMarker_Values[q29],
                             s_ExplicitVarSizeWithFlags_Values[q28] * s_ExplicitVarSizeWithMarker_Values[q29],
                             s_ExplicitVarSizeWithFlags_Values[q28] / s_ExplicitVarSizeWithMarker_Values[q29];
                                 int(1..3)]),
                    (s_ExplicitVarSizeWithFlags_Values[q28] - s_ExplicitVarSizeWithMarker_Values[q29]) % 2 = 0;
                        int(1..5)]))
             | q28 : int(1..4), q29 : int(1..4)])
    > 0,
    and([s_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q1] < s_ExplicitVarSizeWithFlags_Values[q1 + 1]
             | q1 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q2] = false -> s_ExplicitVarSizeWithFlags_Values[q2] = 1 | q2 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q3 + 1] -> s_ExplicitVarSizeWithFlags_Flags[q3] | q3 : int(1..3)]),
    and([q6 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q6] < s_ExplicitVarSizeWithMarker_Values[q6 + 1]
             | q6 : int(1..3)]),
    and([q7 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q7] = 1 | q7 : int(1..4)]),
    and([q10 <= s_ExplicitVarSizeWithMarker_Marker ->
         or([s_ExplicitVarSizeWithFlags_Flags[q12] /\
             s_ExplicitVarSizeWithFlags_Values[q12] = s_ExplicitVarSizeWithMarker_Values[q10]
                 | q12 : int(1..4)])
             | q10 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q14] ->
         or([q16 <= s_ExplicitVarSizeWithMarker_Marker /\
             s_ExplicitVarSizeWithMarker_Values[q16] = s_ExplicitVarSizeWithFlags_Values[q14]
                 | q16 : int(1..4)])
             | q14 : int(1..4)]),
    and([s_Occurrence[q18] ->
         or([s_ExplicitVarSizeWithFlags_Flags[q20] /\ s_ExplicitVarSizeWithFlags_Values[q20] = q18 | q20 : int(1..4)])
             | q18 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q22] -> s_Occurrence[s_ExplicitVarSizeWithFlags_Values[q22]]
             | q22 : int(1..4)]),
    and([s_Occurrence[q23] ->
         or([q25 <= s_ExplicitVarSizeWithMarker_Marker /\ s_ExplicitVarSizeWithMarker_Values[q25] = q23
                 | q25 : int(1..4)])
             | q23 : int(1..4)]),
    and([q27 <= s_ExplicitVarSizeWithMarker_Marker -> s_Occurrence[s_ExplicitVarSizeWithMarker_Values[q27]]
             | q27 : int(1..4)])

