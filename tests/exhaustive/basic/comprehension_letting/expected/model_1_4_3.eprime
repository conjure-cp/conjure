language ESSENCE' 1.0

find s_Occurrence: matrix indexed by [int(1..4)] of bool
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find s_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..4)] of int(1..4)
find s_ExplicitVarSizeWithMarker_Marker: int(0..4)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..4)] of int(1..4)
letting let1 be -100
find x: int(-100..100)
find conjure_aux1: int(-16..3)
branching on
    [s_ExplicitVarSizeWithMarker_Marker, s_ExplicitVarSizeWithMarker_Values, s_Occurrence,
     s_ExplicitVarSizeWithFlags_Flags, s_ExplicitVarSizeWithFlags_Values, x]
such that
    and([and([s_Occurrence[i], s_ExplicitVarSizeWithFlags_Flags[q28], i != s_ExplicitVarSizeWithFlags_Values[q28],
              allDiff([i + s_ExplicitVarSizeWithFlags_Values[q28], i * s_ExplicitVarSizeWithFlags_Values[q28],
                       i / s_ExplicitVarSizeWithFlags_Values[q28];
                           int(1..3)]),
              (i - s_ExplicitVarSizeWithFlags_Values[q28]) % 2 = 0;
                  int(1..5)])
         ->
         min([i + s_ExplicitVarSizeWithFlags_Values[q28], i - s_ExplicitVarSizeWithFlags_Values[q28],
              i * s_ExplicitVarSizeWithFlags_Values[q28], i / s_ExplicitVarSizeWithFlags_Values[q28];
                  int(1..4)])
         <= conjure_aux1
             | i : int(1..4), q28 : int(1..4)]),
    sum([toInt(and([s_Occurrence[i], s_ExplicitVarSizeWithFlags_Flags[q28], i != s_ExplicitVarSizeWithFlags_Values[q28],
                    allDiff([i + s_ExplicitVarSizeWithFlags_Values[q28], i * s_ExplicitVarSizeWithFlags_Values[q28],
                             i / s_ExplicitVarSizeWithFlags_Values[q28];
                                 int(1..3)]),
                    (i - s_ExplicitVarSizeWithFlags_Values[q28]) % 2 = 0;
                        int(1..5)]))
             | i : int(1..4), q28 : int(1..4)])
    > 0
    ->
    or([and([s_Occurrence[i], s_ExplicitVarSizeWithFlags_Flags[q28], i != s_ExplicitVarSizeWithFlags_Values[q28],
             allDiff([i + s_ExplicitVarSizeWithFlags_Values[q28], i * s_ExplicitVarSizeWithFlags_Values[q28],
                      i / s_ExplicitVarSizeWithFlags_Values[q28];
                          int(1..3)]),
             (i - s_ExplicitVarSizeWithFlags_Values[q28]) % 2 = 0;
                 int(1..5)])
        /\
        min([i + s_ExplicitVarSizeWithFlags_Values[q28], i - s_ExplicitVarSizeWithFlags_Values[q28],
             i * s_ExplicitVarSizeWithFlags_Values[q28], i / s_ExplicitVarSizeWithFlags_Values[q28];
                 int(1..4)])
        = conjure_aux1
            | i : int(1..4), q28 : int(1..4)]),
    sum([toInt(and([s_Occurrence[i], s_ExplicitVarSizeWithFlags_Flags[q28], i != s_ExplicitVarSizeWithFlags_Values[q28],
                    allDiff([i + s_ExplicitVarSizeWithFlags_Values[q28], i * s_ExplicitVarSizeWithFlags_Values[q28],
                             i / s_ExplicitVarSizeWithFlags_Values[q28];
                                 int(1..3)]),
                    (i - s_ExplicitVarSizeWithFlags_Values[q28]) % 2 = 0;
                        int(1..5)]))
             | i : int(1..4), q28 : int(1..4)])
    = 0
    -> conjure_aux1 = -16,
    x = conjure_aux1,
    sum([toInt(and([s_Occurrence[i], s_ExplicitVarSizeWithFlags_Flags[q28], i != s_ExplicitVarSizeWithFlags_Values[q28],
                    allDiff([i + s_ExplicitVarSizeWithFlags_Values[q28], i * s_ExplicitVarSizeWithFlags_Values[q28],
                             i / s_ExplicitVarSizeWithFlags_Values[q28];
                                 int(1..3)]),
                    (i - s_ExplicitVarSizeWithFlags_Values[q28]) % 2 = 0;
                        int(1..5)]))
             | i : int(1..4), q28 : int(1..4)])
    > 0,
    and([s_ExplicitVarSizeWithFlags_Flags[q2 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q2] < s_ExplicitVarSizeWithFlags_Values[q2 + 1]
             | q2 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q3] = false -> s_ExplicitVarSizeWithFlags_Values[q3] = 1 | q3 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q4 + 1] -> s_ExplicitVarSizeWithFlags_Flags[q4] | q4 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q8] -> s_Occurrence[s_ExplicitVarSizeWithFlags_Values[q8]] | q8 : int(1..4)]),
    and([s_Occurrence[q9] ->
         or([s_ExplicitVarSizeWithFlags_Flags[q11] /\ s_ExplicitVarSizeWithFlags_Values[q11] = q9 | q11 : int(1..4)])
             | q9 : int(1..4)]),
    and([q12 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q12] < s_ExplicitVarSizeWithMarker_Values[q12 + 1]
             | q12 : int(1..3)]),
    and([q13 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q13] = 1 | q13 : int(1..4)]),
    and([q16 <= s_ExplicitVarSizeWithMarker_Marker -> s_Occurrence[s_ExplicitVarSizeWithMarker_Values[q16]]
             | q16 : int(1..4)]),
    and([s_Occurrence[q17] ->
         or([q19 <= s_ExplicitVarSizeWithMarker_Marker /\ s_ExplicitVarSizeWithMarker_Values[q19] = q17
                 | q19 : int(1..4)])
             | q17 : int(1..4)]),
    and([q21 <= s_ExplicitVarSizeWithMarker_Marker ->
         or([s_ExplicitVarSizeWithFlags_Flags[q23] /\
             s_ExplicitVarSizeWithFlags_Values[q23] = s_ExplicitVarSizeWithMarker_Values[q21]
                 | q23 : int(1..4)])
             | q21 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q25] ->
         or([q27 <= s_ExplicitVarSizeWithMarker_Marker /\
             s_ExplicitVarSizeWithMarker_Values[q27] = s_ExplicitVarSizeWithFlags_Values[q25]
                 | q27 : int(1..4)])
             | q25 : int(1..4)])

