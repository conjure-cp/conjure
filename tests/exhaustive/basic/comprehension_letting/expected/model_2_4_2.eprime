language ESSENCE' 1.0

find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..4)] of int(1..5)
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..4)] of bool
find s_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..4)] of int(1..4)
letting let1 be -100
find x: int(-100..100)
find conjure_aux1: int(-20..4)
branching on [s_ExplicitVarSizeWithFlags_Flags, s_ExplicitVarSizeWithFlags_Values, s_ExplicitVarSizeWithDummy, x]
such that
    and([and([s_ExplicitVarSizeWithDummy[q18] != 5, s_ExplicitVarSizeWithFlags_Flags[q19],
              s_ExplicitVarSizeWithDummy[q18] != s_ExplicitVarSizeWithFlags_Values[q19],
              allDiff([s_ExplicitVarSizeWithDummy[q18] + s_ExplicitVarSizeWithFlags_Values[q19],
                       s_ExplicitVarSizeWithDummy[q18] * s_ExplicitVarSizeWithFlags_Values[q19],
                       s_ExplicitVarSizeWithDummy[q18] / s_ExplicitVarSizeWithFlags_Values[q19];
                           int(1..3)]),
              (s_ExplicitVarSizeWithDummy[q18] - s_ExplicitVarSizeWithFlags_Values[q19]) % 2 = 0;
                  int(1..5)])
         ->
         min([s_ExplicitVarSizeWithDummy[q18] + s_ExplicitVarSizeWithFlags_Values[q19],
              s_ExplicitVarSizeWithDummy[q18] - s_ExplicitVarSizeWithFlags_Values[q19],
              s_ExplicitVarSizeWithDummy[q18] * s_ExplicitVarSizeWithFlags_Values[q19],
              s_ExplicitVarSizeWithDummy[q18] / s_ExplicitVarSizeWithFlags_Values[q19];
                  int(1..4)])
         <= conjure_aux1
             | q18 : int(1..4), q19 : int(1..4)]),
    sum([toInt(and([s_ExplicitVarSizeWithDummy[q18] != 5, s_ExplicitVarSizeWithFlags_Flags[q19],
                    s_ExplicitVarSizeWithDummy[q18] != s_ExplicitVarSizeWithFlags_Values[q19],
                    allDiff([s_ExplicitVarSizeWithDummy[q18] + s_ExplicitVarSizeWithFlags_Values[q19],
                             s_ExplicitVarSizeWithDummy[q18] * s_ExplicitVarSizeWithFlags_Values[q19],
                             s_ExplicitVarSizeWithDummy[q18] / s_ExplicitVarSizeWithFlags_Values[q19];
                                 int(1..3)]),
                    (s_ExplicitVarSizeWithDummy[q18] - s_ExplicitVarSizeWithFlags_Values[q19]) % 2 = 0;
                        int(1..5)]))
             | q18 : int(1..4), q19 : int(1..4)])
    > 0
    ->
    or([and([s_ExplicitVarSizeWithDummy[q18] != 5, s_ExplicitVarSizeWithFlags_Flags[q19],
             s_ExplicitVarSizeWithDummy[q18] != s_ExplicitVarSizeWithFlags_Values[q19],
             allDiff([s_ExplicitVarSizeWithDummy[q18] + s_ExplicitVarSizeWithFlags_Values[q19],
                      s_ExplicitVarSizeWithDummy[q18] * s_ExplicitVarSizeWithFlags_Values[q19],
                      s_ExplicitVarSizeWithDummy[q18] / s_ExplicitVarSizeWithFlags_Values[q19];
                          int(1..3)]),
             (s_ExplicitVarSizeWithDummy[q18] - s_ExplicitVarSizeWithFlags_Values[q19]) % 2 = 0;
                 int(1..5)])
        /\
        min([s_ExplicitVarSizeWithDummy[q18] + s_ExplicitVarSizeWithFlags_Values[q19],
             s_ExplicitVarSizeWithDummy[q18] - s_ExplicitVarSizeWithFlags_Values[q19],
             s_ExplicitVarSizeWithDummy[q18] * s_ExplicitVarSizeWithFlags_Values[q19],
             s_ExplicitVarSizeWithDummy[q18] / s_ExplicitVarSizeWithFlags_Values[q19];
                 int(1..4)])
        = conjure_aux1
            | q18 : int(1..4), q19 : int(1..4)]),
    sum([toInt(and([s_ExplicitVarSizeWithDummy[q18] != 5, s_ExplicitVarSizeWithFlags_Flags[q19],
                    s_ExplicitVarSizeWithDummy[q18] != s_ExplicitVarSizeWithFlags_Values[q19],
                    allDiff([s_ExplicitVarSizeWithDummy[q18] + s_ExplicitVarSizeWithFlags_Values[q19],
                             s_ExplicitVarSizeWithDummy[q18] * s_ExplicitVarSizeWithFlags_Values[q19],
                             s_ExplicitVarSizeWithDummy[q18] / s_ExplicitVarSizeWithFlags_Values[q19];
                                 int(1..3)]),
                    (s_ExplicitVarSizeWithDummy[q18] - s_ExplicitVarSizeWithFlags_Values[q19]) % 2 = 0;
                        int(1..5)]))
             | q18 : int(1..4), q19 : int(1..4)])
    = 0
    -> conjure_aux1 = -20,
    x = conjure_aux1,
    sum([toInt(and([s_ExplicitVarSizeWithDummy[q18] != 5, s_ExplicitVarSizeWithFlags_Flags[q19],
                    s_ExplicitVarSizeWithDummy[q18] != s_ExplicitVarSizeWithFlags_Values[q19],
                    allDiff([s_ExplicitVarSizeWithDummy[q18] + s_ExplicitVarSizeWithFlags_Values[q19],
                             s_ExplicitVarSizeWithDummy[q18] * s_ExplicitVarSizeWithFlags_Values[q19],
                             s_ExplicitVarSizeWithDummy[q18] / s_ExplicitVarSizeWithFlags_Values[q19];
                                 int(1..3)]),
                    (s_ExplicitVarSizeWithDummy[q18] - s_ExplicitVarSizeWithFlags_Values[q19]) % 2 = 0;
                        int(1..5)]))
             | q18 : int(1..4), q19 : int(1..4)])
    > 0,
    and([s_ExplicitVarSizeWithDummy[q1] < s_ExplicitVarSizeWithDummy[q1 + 1] \/ s_ExplicitVarSizeWithDummy[q1] = 5
             | q1 : int(1..3)]),
    and([s_ExplicitVarSizeWithDummy[q2] = 5 -> s_ExplicitVarSizeWithDummy[q2 + 1] = 5 | q2 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q5 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q5] < s_ExplicitVarSizeWithFlags_Values[q5 + 1]
             | q5 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q6] = false -> s_ExplicitVarSizeWithFlags_Values[q6] = 1 | q6 : int(1..4)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q7 + 1] -> s_ExplicitVarSizeWithFlags_Flags[q7] | q7 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q11] ->
         or([s_ExplicitVarSizeWithDummy[q13] != 5 /\
             s_ExplicitVarSizeWithDummy[q13] = s_ExplicitVarSizeWithFlags_Values[q11]
                 | q13 : int(1..4)])
             | q11 : int(1..4)]),
    and([s_ExplicitVarSizeWithDummy[q15] != 5 ->
         or([s_ExplicitVarSizeWithFlags_Flags[q17] /\
             s_ExplicitVarSizeWithFlags_Values[q17] = s_ExplicitVarSizeWithDummy[q15]
                 | q17 : int(1..4)])
             | q15 : int(1..4)])

