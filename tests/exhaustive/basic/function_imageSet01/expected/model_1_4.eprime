language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
find s_Occurrence: matrix indexed by [int(1..3)] of bool
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..3)] of bool
find s_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..3)] of int(1..3)
branching on
    [f_Function1DPartial_Flags, f_Function1DPartial_Values, s_ExplicitVarSizeWithFlags_Flags,
     s_ExplicitVarSizeWithFlags_Values, s_Occurrence]
such that
    and([and([f_Function1DPartial_Flags[q17] -> s_Occurrence[f_Function1DPartial_Values[q17]]
                  | q17 : int(1..2), q17 = i])
         /\
         and([s_Occurrence[q18] ->
              or([f_Function1DPartial_Flags[q21] /\ f_Function1DPartial_Values[q21] = q18 | q21 : int(1..2), q21 = i])
                  | q18 : int(1..3)])
             | i : int(1..2)]),
    and([f_Function1DPartial_Flags[q1] = false -> f_Function1DPartial_Values[q1] = 1 | q1 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q5 + 1] ->
         s_ExplicitVarSizeWithFlags_Values[q5] < s_ExplicitVarSizeWithFlags_Values[q5 + 1]
             | q5 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q6] = false -> s_ExplicitVarSizeWithFlags_Values[q6] = 1 | q6 : int(1..3)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q7 + 1] -> s_ExplicitVarSizeWithFlags_Flags[q7] | q7 : int(1..2)]),
    and([s_ExplicitVarSizeWithFlags_Flags[q11] -> s_Occurrence[s_ExplicitVarSizeWithFlags_Values[q11]]
             | q11 : int(1..3)]),
    and([s_Occurrence[q12] ->
         or([s_ExplicitVarSizeWithFlags_Flags[q14] /\ s_ExplicitVarSizeWithFlags_Values[q14] = q12 | q14 : int(1..3)])
             | q12 : int(1..3)])

