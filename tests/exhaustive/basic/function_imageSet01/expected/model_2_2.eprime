language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..4)
branching on [f_Function1DPartial_Flags, f_Function1DPartial_Values, s_ExplicitVarSizeWithDummy]
such that
    and([and([f_Function1DPartial_Flags[q10] ->
              or([s_ExplicitVarSizeWithDummy[q12] != 4 /\
                  s_ExplicitVarSizeWithDummy[q12] = f_Function1DPartial_Values[q10]
                      | q12 : int(1..3)])
                  | q10 : int(1..2), q10 = i])
         /\
         and([s_ExplicitVarSizeWithDummy[q14] != 4 ->
              or([f_Function1DPartial_Flags[q17] /\ f_Function1DPartial_Values[q17] = s_ExplicitVarSizeWithDummy[q14]
                      | q17 : int(1..2), q17 = i])
                  | q14 : int(1..3)])
             | i : int(1..2)]),
    and([f_Function1DPartial_Flags[q1] = false -> f_Function1DPartial_Values[q1] = 1 | q1 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q4] < s_ExplicitVarSizeWithDummy[q4 + 1] \/ s_ExplicitVarSizeWithDummy[q4] = 4
             | q4 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q5] = 4 -> s_ExplicitVarSizeWithDummy[q5 + 1] = 4 | q5 : int(1..2)])

