language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
find s_Occurrence: matrix indexed by [int(1..3)] of bool
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..3)] of int(1..4)
branching on [f_Function1DPartial_Flags, f_Function1DPartial_Values, s_ExplicitVarSizeWithDummy, s_Occurrence]
such that
    and([and([f_Function1DPartial_Flags[q16] -> s_Occurrence[f_Function1DPartial_Values[q16]]
                  | q16 : int(1..2), q16 = i])
         /\
         and([s_Occurrence[q17] ->
              or([f_Function1DPartial_Flags[q20] /\ f_Function1DPartial_Values[q20] = q17 | q20 : int(1..2), q20 = i])
                  | q17 : int(1..3)])
             | i : int(1..2)]),
    and([f_Function1DPartial_Flags[q1] = false -> f_Function1DPartial_Values[q1] = 1 | q1 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q5] < s_ExplicitVarSizeWithDummy[q5 + 1] \/ s_ExplicitVarSizeWithDummy[q5] = 4
             | q5 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q6] = 4 -> s_ExplicitVarSizeWithDummy[q6 + 1] = 4 | q6 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q10] != 4 -> s_Occurrence[s_ExplicitVarSizeWithDummy[q10]] | q10 : int(1..3)]),
    and([s_Occurrence[q11] ->
         or([s_ExplicitVarSizeWithDummy[q13] != 4 /\ s_ExplicitVarSizeWithDummy[q13] = q11 | q13 : int(1..3)])
             | q11 : int(1..3)])

