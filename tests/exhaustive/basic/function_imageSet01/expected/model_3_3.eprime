language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
find s_ExplicitVarSizeWithMarker_Marker: int(0..3)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..3)
branching on
    [f_Function1DPartial_Flags, f_Function1DPartial_Values, s_ExplicitVarSizeWithMarker_Marker,
     s_ExplicitVarSizeWithMarker_Values]
such that
    and([and([f_Function1DPartial_Flags[q9] ->
              or([q11 <= s_ExplicitVarSizeWithMarker_Marker /\
                  s_ExplicitVarSizeWithMarker_Values[q11] = f_Function1DPartial_Values[q9]
                      | q11 : int(1..3)])
                  | q9 : int(1..2), q9 = i])
         /\
         and([q13 <= s_ExplicitVarSizeWithMarker_Marker ->
              or([f_Function1DPartial_Flags[q16] /\
                  f_Function1DPartial_Values[q16] = s_ExplicitVarSizeWithMarker_Values[q13]
                      | q16 : int(1..2), q16 = i])
                  | q13 : int(1..3)])
             | i : int(1..2)]),
    and([f_Function1DPartial_Flags[q1] = false -> f_Function1DPartial_Values[q1] = 1 | q1 : int(1..2)]),
    and([q4 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q4] < s_ExplicitVarSizeWithMarker_Values[q4 + 1]
             | q4 : int(1..2)]),
    and([q5 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q5] = 1 | q5 : int(1..3)])

