language ESSENCE' 1.0

find f_Function1DPartial_Flags: matrix indexed by [int(1..2)] of bool
find f_Function1DPartial_Values: matrix indexed by [int(1..2)] of int(1..2)
find s_Occurrence: matrix indexed by [int(1..3)] of bool
find s_ExplicitVarSizeWithMarker_Marker: int(0..3)
find s_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..3)] of int(1..3)
branching on
    [f_Function1DPartial_Flags, f_Function1DPartial_Values, s_ExplicitVarSizeWithMarker_Marker,
     s_ExplicitVarSizeWithMarker_Values, s_Occurrence]
such that
    and([and([f_Function1DPartial_Flags[q15] -> s_Occurrence[f_Function1DPartial_Values[q15]]
                  | q15 : int(1..2), q15 = i])
         /\
         and([s_Occurrence[q16] ->
              or([f_Function1DPartial_Flags[q19] /\ f_Function1DPartial_Values[q19] = q16 | q19 : int(1..2), q19 = i])
                  | q16 : int(1..3)])
             | i : int(1..2)]),
    and([f_Function1DPartial_Flags[q1] = false -> f_Function1DPartial_Values[q1] = 1 | q1 : int(1..2)]),
    and([q5 + 1 <= s_ExplicitVarSizeWithMarker_Marker ->
         s_ExplicitVarSizeWithMarker_Values[q5] < s_ExplicitVarSizeWithMarker_Values[q5 + 1]
             | q5 : int(1..2)]),
    and([q6 > s_ExplicitVarSizeWithMarker_Marker -> s_ExplicitVarSizeWithMarker_Values[q6] = 1 | q6 : int(1..3)]),
    and([q9 <= s_ExplicitVarSizeWithMarker_Marker -> s_Occurrence[s_ExplicitVarSizeWithMarker_Values[q9]]
             | q9 : int(1..3)]),
    and([s_Occurrence[q10] ->
         or([q12 <= s_ExplicitVarSizeWithMarker_Marker /\ s_ExplicitVarSizeWithMarker_Values[q12] = q10
                 | q12 : int(1..3)])
             | q10 : int(1..3)])

