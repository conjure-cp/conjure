language ESSENCE' 1.0

find x_ExplicitR3_1: matrix indexed by [int(1..4)] of int(1..2)
find x_ExplicitR3_2_Explicit: matrix indexed by [int(1..4), int(1..2)] of int(1..3)
branching on [x_ExplicitR3_1, x_ExplicitR3_2_Explicit]
such that
    and([flatten([[x_ExplicitR3_1[q1]; int(1)], [x_ExplicitR3_2_Explicit[q1, q5] | q5 : int(1..2)]; int(1..2)]) <lex
         flatten([[x_ExplicitR3_1[q1 + 1]; int(1)], [x_ExplicitR3_2_Explicit[q1 + 1, q6] | q6 : int(1..2)]; int(1..2)])
             | q1 : int(1..3)]),
    and([x_ExplicitR3_2_Explicit[q2, 1] < x_ExplicitR3_2_Explicit[q2, 2] | q2 : int(1..4)])

