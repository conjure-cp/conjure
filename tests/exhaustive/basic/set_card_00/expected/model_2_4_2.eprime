language ESSENCE' 1.0

find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..2)] of int(1..3)
find s_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2)] of bool
find s_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..2)] of int(1..2)
branching on [s_ExplicitVarSizeWithFlags_Flags, s_ExplicitVarSizeWithFlags_Values, s_ExplicitVarSizeWithDummy]
such that
    or([s_ExplicitVarSizeWithFlags_Flags[q19] /\
        s_ExplicitVarSizeWithFlags_Values[q19] = sum([toInt(s_ExplicitVarSizeWithDummy[q21] != 3) | q21 : int(1..2)])
            | q19 : int(1..2)]),
    s_ExplicitVarSizeWithDummy[1] < s_ExplicitVarSizeWithDummy[2] \/ s_ExplicitVarSizeWithDummy[1] = 3,
    s_ExplicitVarSizeWithDummy[1] = 3 -> s_ExplicitVarSizeWithDummy[2] = 3,
    s_ExplicitVarSizeWithFlags_Flags[2] -> s_ExplicitVarSizeWithFlags_Values[1] < s_ExplicitVarSizeWithFlags_Values[2],
    and([s_ExplicitVarSizeWithFlags_Flags[q6] = false -> s_ExplicitVarSizeWithFlags_Values[q6] = 1 | q6 : int(1..2)]),
    s_ExplicitVarSizeWithFlags_Flags[2] -> s_ExplicitVarSizeWithFlags_Flags[1],
    and([s_ExplicitVarSizeWithFlags_Flags[q11] ->
         or([s_ExplicitVarSizeWithDummy[q13] != 3 /\
             s_ExplicitVarSizeWithDummy[q13] = s_ExplicitVarSizeWithFlags_Values[q11]
                 | q13 : int(1..2)])
             | q11 : int(1..2)]),
    and([s_ExplicitVarSizeWithDummy[q15] != 3 ->
         or([s_ExplicitVarSizeWithFlags_Flags[q17] /\
             s_ExplicitVarSizeWithFlags_Values[q17] = s_ExplicitVarSizeWithDummy[q15]
                 | q17 : int(1..2)])
             | q15 : int(1..2)])

