language ESSENCE' 1.0

find s_Occurrence: matrix indexed by [int(1..2)] of bool
find s_ExplicitVarSizeWithDummy: matrix indexed by [int(1..2)] of int(1..3)
branching on [s_ExplicitVarSizeWithDummy, s_Occurrence]
such that
    or([s_ExplicitVarSizeWithDummy[q12] != 3 /\
        s_ExplicitVarSizeWithDummy[q12] = sum([toInt(s_Occurrence[q13]) | q13 : int(1..2)])
            | q12 : int(1..2)]),
    s_ExplicitVarSizeWithDummy[1] < s_ExplicitVarSizeWithDummy[2] \/ s_ExplicitVarSizeWithDummy[1] = 3,
    s_ExplicitVarSizeWithDummy[1] = 3 -> s_ExplicitVarSizeWithDummy[2] = 3,
    and([s_ExplicitVarSizeWithDummy[q7] != 3 -> s_Occurrence[s_ExplicitVarSizeWithDummy[q7]] | q7 : int(1..2)]),
    and([s_Occurrence[q8] ->
         or([s_ExplicitVarSizeWithDummy[q10] != 3 /\ s_ExplicitVarSizeWithDummy[q10] = q8 | q10 : int(1..2)])
             | q8 : int(1..2)])

