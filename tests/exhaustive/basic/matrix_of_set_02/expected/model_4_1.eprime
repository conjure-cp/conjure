language ESSENCE' 1.0

find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2), int(1..3)] of bool
find x_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..2), int(1..3)] of int(1..3)
find x_Occurrence: matrix indexed by [int(1..2), int(1..3)] of bool
branching on [x_Occurrence, x_ExplicitVarSizeWithFlags_Flags, x_ExplicitVarSizeWithFlags_Values]
such that
    and([x_ExplicitVarSizeWithFlags_Flags[j, q16] -> x_ExplicitVarSizeWithFlags_Values[j, q16] % 2 = 0
             | j : int(1..2), q16 : int(1..3)]),
    and([and([x_ExplicitVarSizeWithFlags_Flags[q1, q2 + 1] ->
              x_ExplicitVarSizeWithFlags_Values[q1, q2] < x_ExplicitVarSizeWithFlags_Values[q1, q2 + 1]
                  | q2 : int(1..2)])
             | q1 : int(1..2)]),
    and([and([x_ExplicitVarSizeWithFlags_Flags[q1, q3] = false -> x_ExplicitVarSizeWithFlags_Values[q1, q3] = 1
                  | q3 : int(1..3)])
             | q1 : int(1..2)]),
    and([and([x_ExplicitVarSizeWithFlags_Flags[q1, q4 + 1] -> x_ExplicitVarSizeWithFlags_Flags[q1, q4]
                  | q4 : int(1..2)])
             | q1 : int(1..2)]),
    and([and([x_Occurrence[q9, q11] ->
              or([x_ExplicitVarSizeWithFlags_Flags[q9, q13] /\ x_ExplicitVarSizeWithFlags_Values[q9, q13] = q11
                      | q13 : int(1..3)])
                  | q11 : int(1..3)])
         /\
         and([x_ExplicitVarSizeWithFlags_Flags[q9, q15] -> x_Occurrence[q9, x_ExplicitVarSizeWithFlags_Values[q9, q15]]
                  | q15 : int(1..3)])
             | q9 : int(1..2)])

