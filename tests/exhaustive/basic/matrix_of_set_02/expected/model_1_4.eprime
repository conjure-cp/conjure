language ESSENCE' 1.0

find x_Occurrence: matrix indexed by [int(1..2), int(1..3)] of bool
find x_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..2), int(1..3)] of bool
find x_ExplicitVarSizeWithFlags_Values: matrix indexed by [int(1..2), int(1..3)] of int(1..3)
branching on [x_ExplicitVarSizeWithFlags_Flags, x_ExplicitVarSizeWithFlags_Values, x_Occurrence]
such that
    and([x_Occurrence[j, i] -> i % 2 = 0 | j : int(1..2), i : int(1..3)]),
    and([and([x_ExplicitVarSizeWithFlags_Flags[q3, q4 + 1] ->
              x_ExplicitVarSizeWithFlags_Values[q3, q4] < x_ExplicitVarSizeWithFlags_Values[q3, q4 + 1]
                  | q4 : int(1..2)])
             | q3 : int(1..2)]),
    and([and([x_ExplicitVarSizeWithFlags_Flags[q3, q5] = false -> x_ExplicitVarSizeWithFlags_Values[q3, q5] = 1
                  | q5 : int(1..3)])
             | q3 : int(1..2)]),
    and([and([x_ExplicitVarSizeWithFlags_Flags[q3, q6 + 1] -> x_ExplicitVarSizeWithFlags_Flags[q3, q6]
                  | q6 : int(1..2)])
             | q3 : int(1..2)]),
    and([and([x_ExplicitVarSizeWithFlags_Flags[q9, q12] -> x_Occurrence[q9, x_ExplicitVarSizeWithFlags_Values[q9, q12]]
                  | q12 : int(1..3)])
         /\
         and([x_Occurrence[q9, q13] ->
              or([x_ExplicitVarSizeWithFlags_Flags[q9, q15] /\ x_ExplicitVarSizeWithFlags_Values[q9, q15] = q13
                      | q15 : int(1..3)])
                  | q13 : int(1..3)])
             | q9 : int(1..2)])

