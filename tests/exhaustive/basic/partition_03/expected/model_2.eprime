language ESSENCE' 1.0

find x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker: int(0..6)
find x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence: matrix indexed by [int(1..6), int(1..6)] of bool
branching on
    [x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker,
     x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence]
such that
    and([1 =
         sum([toInt(q13 <= x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker /\
                    x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q13, q1])
                  | q13 : int(1..6)])
             | q1 : int(1..6)]),
    and([q4 + 1 <= x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker ->
         [-toInt(x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q4, q9]) | q9 : int(1..6)] <lex
         [-toInt(x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q4 + 1, q10]) | q10 : int(1..6)]
             | q4 : int(1..5)]),
    and([q5 > x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker ->
         and([x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q5, q11] = false | q11 : int(1..6)])
             | q5 : int(1..6)]),
    x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker <= 6,
    and([q6 <= x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker ->
         3 = sum([toInt(x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Values_Occurrence[q6, q7]) | q7 : int(1..6)])
             | q6 : int(1..6)]),
    6 = sum([toInt(q12 <= x_PartitionAsSet_ExplicitVarSizeWithMarkerR2_Marker) * 3 | q12 : int(1..6)])

