 == lexer.essence ==
Error:
    lexer.essence:7:29:
  |
7 | such that x + y = z, x = 1, # y = 2
  |                             ^^^^^^^
Skipped tokens



 == parser.essence ==
Error:
    parser.essence:7:28:
  |
7 | such that x + y = z, x = 1 = y = 2
  |                            ^
Missing Expression

parser.essence:7:28:
  |
7 | such that x + y = z, x = 1 = y = 2
  |                            ^
Missing ,

parser.essence:7:32:
  |
7 | such that x + y = z, x = 1 = y = 2
  |                                ^
Missing Expression

parser.essence:7:32:
  |
7 | such that x + y = z, x = 1 = y = 2
  |                                ^
Missing ,



 == type.essence ==
Error:
    type.essence:7:22:
  |
7 | such that x + y = z, x union y = 2
  |                      ^
Type error:
	Expected: "Set MSet funcition or relation"
	Got: int

type.essence:7:30:
  |
7 | such that x + y = z, x union y = 2
  |                              ^
Type error:
	Expected: "Set MSet funcition or relation"
	Got: int



 == category.essence ==
Error:
    category.essence:7:14:
  |
7 | find t : int(x..y)
  |              ^
Cannot use variable of category : decision in the context of Domain

category.essence:7:17:
  |
7 | find t : int(x..y)
  |                 ^
Cannot use variable of category : decision in the context of Domain



 == wellformed.essence ==
{"mInfo":
     {"finds": [], "givens": [], "enumGivens": [], "enumLettings": [], "lettings": [], "unnameds": [],
      "strategyQ": {"Auto": {"Interactive": []}}, "strategyA": {"Auto": {"Interactive": []}}, "trailCompact": [],
      "nameGenState": [], "nbExtraGivens": 0, "representations": [], "representationsTree": [], "originalDomains": [],
      "trailGeneralised": [], "trailVerbose": [], "trailRewrites": []},
 "mLanguage": {"language": {"Name": "Essence"}, "version": [1, 3]},
 "mStatements":
     [{"Declaration":
           {"FindOrGiven":
                ["Find", {"Name": "x"},
                 {"DomainInt":
                      [{"TagInt": []},
                       [{"RangeBounded":
                             [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
                              {"Constant": {"ConstantInt": [{"TagInt": []}, 3]}}]}]]}]}},
      {"Declaration":
           {"FindOrGiven":
                ["Find", {"Name": "y"},
                 {"DomainInt":
                      [{"TagInt": []},
                       [{"RangeBounded":
                             [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
                              {"Constant": {"ConstantInt": [{"TagInt": []}, 3]}}]}]]}]}},
      {"Declaration":
           {"FindOrGiven":
                ["Find", {"Name": "z"},
                 {"DomainInt":
                      [{"TagInt": []},
                       [{"RangeBounded":
                             [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
                              {"Constant": {"ConstantInt": [{"TagInt": []}, 3]}}]}]]}]}},
      {"SuchThat":
           [{"Op":
                 {"MkOpEq":
                      [{"Op":
                            {"MkOpSum":
                                 {"AbstractLiteral":
                                      {"AbsLitMatrix":
                                           [{"DomainInt":
                                                 [{"TagInt": []},
                                                  [{"RangeBounded":
                                                        [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
                                                         {"Constant": {"ConstantInt": [{"TagInt": []}, 2]}}]}]]},
                                            [{"Reference": [{"Name": "x"}, null]},
                                             {"Reference": [{"Name": "y"}, null]}]]}}}},
                       {"Reference": [{"Name": "z"}, null]}]}},
            {"Op":
                 {"MkOpEq":
                      [{"Reference": [{"Name": "x"}, null]}, {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}]}},
            {"Op":
                 {"MkOpEq":
                      [{"Reference": [{"Name": "y"}, null]}, {"Constant": {"ConstantInt": [{"TagInt": []}, 2]}}]}},
            {"Op":
                 {"MkOpAllDiff":
                      {"AbstractLiteral":
                           {"AbsLitMatrix":
                                [{"DomainInt":
                                      [{"TagInt": []},
                                       [{"RangeBounded":
                                             [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
                                              {"Constant": {"ConstantInt": [{"TagInt": []}, 3]}}]}]]},
                                 [{"Reference": [{"Name": "x"}, null]}, {"Reference": [{"Name": "y"}, null]},
                                  {"Reference": [{"Name": "z"}, null]}]]}}}}]}]}


