Generating models for permutation.essence
Generated models: model000001.eprime
Saved under: conjure-output
Savile Row: conjure-output/model000001.eprime
Running minion for domain filtering.
Running solver: minion
Copying solution to: permutation-000001.solution
Copying solution to: permutation-000002.solution
Copying solution to: permutation-000003.solution
Copying solution to: permutation-000004.solution
Copying solution to: permutation-000005.solution
Copying solution to: permutation-000006.solution
Copying solution to: permutation-000007.solution
Copying solution to: permutation-000008.solution
Copying solution to: permutation-000009.solution
Copying solution to: permutation-000010.solution
Copying solution to: permutation-000011.solution
Copying solution to: permutation-000012.solution
Copying solution to: permutation-000013.solution
Copying solution to: permutation-000014.solution
Copying solution to: permutation-000015.solution
Copying solution to: permutation-000016.solution
Copying solution to: permutation-000017.solution
Copying solution to: permutation-000018.solution
Copying solution to: permutation-000019.solution
Copying solution to: permutation-000020.solution
Copying solution to: permutation-000021.solution
Copying solution to: permutation-000022.solution
Copying solution to: permutation-000023.solution
Copying solution to: permutation-000024.solution
language Essence 1.3

letting p be permutation((1, 2), (3, 4))
letting q be permutation((1, 3), (2, 4))
language Essence 1.3

letting p be permutation((1, 2), (3, 4))
letting q be permutation((1, 3, 2, 4))
language Essence 1.3

letting p be permutation((1, 2), (3, 4))
letting q be permutation((1, 4, 2, 3))
language Essence 1.3

letting p be permutation((1, 2), (3, 4))
letting q be permutation((1, 4), (2, 3))
language Essence 1.3

letting p be permutation((1, 2, 3, 4))
letting q be permutation((1, 3), (2, 4))
language Essence 1.3

letting p be permutation((1, 2, 3, 4))
letting q be permutation((1, 4, 3, 2))
language Essence 1.3

letting p be permutation((1, 2, 4, 3))
letting q be permutation((1, 3, 4, 2))
language Essence 1.3

letting p be permutation((1, 2, 4, 3))
letting q be permutation((1, 4), (2, 3))
language Essence 1.3

letting p be permutation((1, 3, 4, 2))
letting q be permutation((1, 2, 4, 3))
language Essence 1.3

letting p be permutation((1, 3, 4, 2))
letting q be permutation((1, 4), (2, 3))
language Essence 1.3

letting p be permutation((1, 3), (2, 4))
letting q be permutation((1, 2), (3, 4))
language Essence 1.3

letting p be permutation((1, 3), (2, 4))
letting q be permutation((1, 2, 3, 4))
language Essence 1.3

letting p be permutation((1, 3), (2, 4))
letting q be permutation((1, 4, 3, 2))
language Essence 1.3

letting p be permutation((1, 3), (2, 4))
letting q be permutation((1, 4), (2, 3))
language Essence 1.3

letting p be permutation((1, 3, 2, 4))
letting q be permutation((1, 2), (3, 4))
language Essence 1.3

letting p be permutation((1, 3, 2, 4))
letting q be permutation((1, 4, 2, 3))
language Essence 1.3

letting p be permutation((1, 4, 3, 2))
letting q be permutation((1, 2, 3, 4))
language Essence 1.3

letting p be permutation((1, 4, 3, 2))
letting q be permutation((1, 3), (2, 4))
language Essence 1.3

letting p be permutation((1, 4, 2, 3))
letting q be permutation((1, 2), (3, 4))
language Essence 1.3

letting p be permutation((1, 4, 2, 3))
letting q be permutation((1, 3, 2, 4))
language Essence 1.3

letting p be permutation((1, 4), (2, 3))
letting q be permutation((1, 2), (3, 4))
language Essence 1.3

letting p be permutation((1, 4), (2, 3))
letting q be permutation((1, 2, 4, 3))
language Essence 1.3

letting p be permutation((1, 4), (2, 3))
letting q be permutation((1, 3, 4, 2))
language Essence 1.3

letting p be permutation((1, 4), (2, 3))
letting q be permutation((1, 3), (2, 4))
