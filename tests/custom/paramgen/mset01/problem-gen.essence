language Essence 1.3

given a_middle: int(1..10)
given a_delta: int(0..4)
find a: int(1..10)
such that
    a >= a_middle - a_delta,
    a <= a_middle + a_delta
given b_middle: int(1..10)
given b_delta: int(0..4)
find b: int(1..10)
such that
    b >= b_middle - b_delta,
    b <= b_middle + b_delta
given c_middle: int(1..10)
given c_delta: int(0..4)
find c: int(1..10)
such that
    c >= c_middle - c_delta,
    c <= c_middle + c_delta
given s_middle: int(1..10)
given s_delta: int(0..4)
find s: int(1..10)
such that
    s >= s_middle - s_delta,
    s <= s_middle + s_delta
given t_middle: int(1..10)
given t_delta: int(0..4)
find t: int(1..10)
such that
    t >= t_middle - t_delta,
    t <= t_middle + t_delta
given f_cardMiddle: int(-10..50)
given f_cardDelta: int(0..3)
given f_inner_middle: int(1..10)
given f_inner_delta: int(0..4)
find f: mset (maxSize 50, maxOccur 10) of int(1..10)
such that
    |f| >= f_cardMiddle - f_cardDelta /\ |f| <= f_cardMiddle + f_cardDelta,
    and([freq(f, q1) <= t | q1 <- f]),
    and([q1 >= f_inner_middle - f_inner_delta | q1 <- f]),
    and([q1 <= f_inner_middle + f_inner_delta | q1 <- f]),
    and([q1 >= a | q1 <- f]),
    and([q1 <= b | q1 <- f])
given g_cardMiddle: int(1..10)
given g_cardDelta: int(0..3)
given g_inner_middle: int(1..10)
given g_inner_delta: int(0..4)
find g: mset (minSize 1, maxSize 10, maxOccur 50) of int(1..10)
such that
    |g| >= g_cardMiddle - g_cardDelta /\ |g| <= g_cardMiddle + g_cardDelta,
    |g| >= s,
    |g| <= s,
    and([q2 >= g_inner_middle - g_inner_delta | q2 <- g]),
    and([q2 <= g_inner_middle + g_inner_delta | q2 <- g]),
    and([q2 >= a | q2 <- g]),
    and([q2 <= b | q2 <- g])
given h_cardMiddle: int(1..50)
given h_cardDelta: int(0..3)
given h_inner_middle: int(1..10)
given h_inner_delta: int(0..4)
find h: mset (minSize 1, maxSize 50, maxOccur 50) of int(1..10)
such that
    |h| >= h_cardMiddle - h_cardDelta /\ |h| <= h_cardMiddle + h_cardDelta,
    |h| >= s,
    and([q3 >= h_inner_middle - h_inner_delta | q3 <- h]),
    and([q3 <= h_inner_middle + h_inner_delta | q3 <- h]),
    and([q3 >= a | q3 <- h]),
    and([q3 <= c | q3 <- h])
such that g != h
such that f = g intersect h
