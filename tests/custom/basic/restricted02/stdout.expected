Generating models for restricted02.essence
Generated models: model000001.eprime
Saved under: conjure-output
Savile Row: conjure-output/model000001.eprime
Running minion for domain filtering.
Running solver: minion
model000001-solution000001.eprime-solution
model000001-solution000001.solution
model000001-solution000002.eprime-solution
model000001-solution000002.solution
model000001-solution000003.eprime-solution
model000001-solution000003.solution
model000001-solution000004.eprime-solution
model000001-solution000004.solution
model000001-solution000005.eprime-solution
model000001-solution000005.solution
model000001-solution000006.eprime-solution
model000001-solution000006.solution
model000001-solution000007.eprime-solution
model000001-solution000007.solution
model000001-solution000008.eprime-solution
model000001-solution000008.solution
model000001-solution000009.eprime-solution
model000001-solution000009.solution
model000001-solution000010.eprime-solution
model000001-solution000010.solution
model000001-solution000011.eprime-solution
model000001-solution000011.solution
model000001-solution000012.eprime-solution
model000001-solution000012.solution
model000001.eprime
model000001.eprime-info
model000001.eprime-infor
model000001.eprime-minion
model000001.stats.json
conjure-output/model000001-solution000001.solution:letting x be function((1, 1) --> 1, (1, 2) --> 2, (1, 3) --> 3, (2, 1) --> 2, (2, 2) --> 3, (2, 3) --> 1)
conjure-output/model000001-solution000002.solution:letting x be function((1, 1) --> 1, (1, 2) --> 2, (1, 3) --> 3, (2, 1) --> 3, (2, 2) --> 1, (2, 3) --> 2)
conjure-output/model000001-solution000003.solution:letting x be function((1, 1) --> 1, (1, 2) --> 3, (1, 3) --> 2, (2, 1) --> 2, (2, 2) --> 1, (2, 3) --> 3)
conjure-output/model000001-solution000004.solution:letting x be function((1, 1) --> 1, (1, 2) --> 3, (1, 3) --> 2, (2, 1) --> 3, (2, 2) --> 2, (2, 3) --> 1)
conjure-output/model000001-solution000005.solution:letting x be function((1, 1) --> 2, (1, 2) --> 1, (1, 3) --> 3, (2, 1) --> 1, (2, 2) --> 3, (2, 3) --> 2)
conjure-output/model000001-solution000006.solution:letting x be function((1, 1) --> 2, (1, 2) --> 1, (1, 3) --> 3, (2, 1) --> 3, (2, 2) --> 2, (2, 3) --> 1)
conjure-output/model000001-solution000007.solution:letting x be function((1, 1) --> 2, (1, 2) --> 3, (1, 3) --> 1, (2, 1) --> 1, (2, 2) --> 2, (2, 3) --> 3)
conjure-output/model000001-solution000008.solution:letting x be function((1, 1) --> 2, (1, 2) --> 3, (1, 3) --> 1, (2, 1) --> 3, (2, 2) --> 1, (2, 3) --> 2)
conjure-output/model000001-solution000009.solution:letting x be function((1, 1) --> 3, (1, 2) --> 1, (1, 3) --> 2, (2, 1) --> 1, (2, 2) --> 2, (2, 3) --> 3)
conjure-output/model000001-solution000010.solution:letting x be function((1, 1) --> 3, (1, 2) --> 1, (1, 3) --> 2, (2, 1) --> 2, (2, 2) --> 3, (2, 3) --> 1)
conjure-output/model000001-solution000011.solution:letting x be function((1, 1) --> 3, (1, 2) --> 2, (1, 3) --> 1, (2, 1) --> 1, (2, 2) --> 3, (2, 3) --> 2)
conjure-output/model000001-solution000012.solution:letting x be function((1, 1) --> 3, (1, 2) --> 2, (1, 3) --> 1, (2, 1) --> 2, (2, 2) --> 1, (2, 3) --> 3)
