Generating models for seqseq.essence
Generated models: model000001.eprime
Saved under: conjure-output
Savile Row: conjure-output/model000001.eprime seqseq.param
Running minion for domain filtering.
Running solver: minion
Validating solution: seqseq.param conjure-output/model000001-seqseq-solution000001.solution
Copying solution to: seqseq-seqseq.solution
File: conjure-output/model000001.eprime
language ESSENCE' 1.0

given fin1: int
given fin2: int
given fin3: int
given fin4: int
given stacks_ExplicitBoundedR16_Length: int(fin1)
given stacks_ExplicitBoundedR16_Values_ExplicitBounded_Length:
        matrix indexed by [int(1..fin1)] of int(0..fin2)
given stacks_ExplicitBoundedR16_Values_ExplicitBounded_Values:
        matrix indexed by [int(1..fin1), int(1..fin2)] of int(fin3..fin4)
find x: int(0..10000)
branching on [x]
such that
    x =
    sum([sum([stacks_ExplicitBoundedR16_Values_ExplicitBounded_Values[q2, q4]
                  | q4 : int(1..fin2),
                    q4 <=
                    stacks_ExplicitBoundedR16_Values_ExplicitBounded_Length
                        [q2]])
             | q2 : int(1..fin1), q2 <= fin1])

--------------------

File: conjure-output/model000001-seqseq-solution000001.solution
language Essence 1.3

letting x be 1106
--------------------

