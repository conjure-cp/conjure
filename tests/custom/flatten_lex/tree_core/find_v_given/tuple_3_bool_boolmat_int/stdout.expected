language ESSENCE' 1.0

given A_1: matrix indexed by [int(1..3)] of bool
given A_2: int(1..5)
given A_3: bool
find B_1: matrix indexed by [int(1..3)] of bool
find B_2: int(1..2)
find B_3: bool
branching on [B_1, B_2, B_3]
such that
    flatten([[-toInt(A_1[q2]) | q2 : int(1..3)], [A_2; int(1)], [-toInt(A_3); int(1)]; int(1..3)]) <lex
    flatten([[-toInt(B_1[q3]) | q3 : int(1..3)], [B_2; int(1)], [-toInt(B_3); int(1)]; int(1..3)])

