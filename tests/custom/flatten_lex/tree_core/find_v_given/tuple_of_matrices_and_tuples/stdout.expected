language ESSENCE' 1.0

given A_1_1: bool
given A_1_2: bool
given A_2: matrix indexed by [int(0..1)] of int(1..5)
given A_3: bool
find B_1_1: bool
find B_1_2: bool
find B_2: matrix indexed by [int(0..1)] of int(1..5)
find B_3: bool
branching on [B_1_1, B_1_2, B_2, B_3]
such that
    flatten([flatten([[-toInt(A_1_1); int(1)], [-toInt(A_1_2); int(1)]; int(1..2)]), [A_2[q2] | q2 : int(0..1)],
             [-toInt(A_3); int(1)];
                 int(1..3)])
    <lex
    flatten([flatten([[-toInt(B_1_1); int(1)], [-toInt(B_1_2); int(1)]; int(1..2)]), [B_2[q3] | q3 : int(0..1)],
             [-toInt(B_3); int(1)];
                 int(1..3)])

