Generating models for tuple.essence
Generated models: model000001.eprime
Saved under: conjure-output
Savile Row: model000001.eprime tuple.param
Running minion for domain filtering.
Running solver: minion
Copying solution to: tuple-tuple.solution
language ESSENCE' 1.0

given A_1_1: bool
given A_1_2: bool
given A_2: matrix indexed by [int(0..1)] of int(1..5)
given A_3: bool
find B_1_1: bool
find B_1_2: bool
find B_2: matrix indexed by [int(0..1)] of int(1..5)
find B_3: bool
branching on [B_1_1, B_1_2, B_2, B_3]
such that
    flatten([flatten([[-toInt(A_1_1); int(1)], [-toInt(A_1_2); int(1)]; int(1..2)]), [A_2[q2] | q2 : int(0..1)],
             [-toInt(A_3); int(1)];
                 int(1..3)])
    <lex
    flatten([flatten([[-toInt(B_1_1); int(1)], [-toInt(B_1_2); int(1)]; int(1..2)]), [B_2[q3] | q3 : int(0..1)],
             [-toInt(B_3); int(1)];
                 int(1..3)])

$ Conjure's
$ {"finds": [{"Name": "B"}],
$  "givens": [{"Name": "A"}],
$  "enumGivens": [],
$  "enumLettings": [],
$  "lettings": [],
$  "unnameds": [],
$  "strategyQ": {"PickFirst": []},
$  "strategyA": {"Compact": []},
$  "trailCompact": [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "trailVerbose": [],
$  "trailRewrites": [],
$  "nameGenState": [["q", 4]],
$  "nbExtraGivens": 0,
$  "representations":
$      [[{"Name": "A"},
$        {"DomainTuple":
$             [{"DomainTuple": [{"DomainBool": []}, {"DomainBool": []}]},
$              {"DomainMatrix":
$                   [{"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                                 {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}]}]]},
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Constant": {"ConstantInt": [{"TagInt": []}, 5]}}]}]]}]},
$              {"DomainBool": []}]}],
$       [{"Name": "B"},
$        {"DomainTuple":
$             [{"DomainTuple": [{"DomainBool": []}, {"DomainBool": []}]},
$              {"DomainMatrix":
$                   [{"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                                 {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}]}]]},
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Constant": {"ConstantInt": [{"TagInt": []}, 5]}}]}]]}]},
$              {"DomainBool": []}]}]],
$  "representationsTree":
$      [[{"Name": "A"},
$        [{"rootLabel": null,
$          "subForest":
$              [{"rootLabel": null,
$                "subForest":
$                    [{"rootLabel": null,
$                      "subForest": []},
$                     {"rootLabel": null,
$                      "subForest": []}]},
$               {"rootLabel": null,
$                "subForest":
$                    [{"rootLabel": null,
$                      "subForest": []}]},
$               {"rootLabel": null,
$                "subForest": []}]}]],
$       [{"Name": "B"},
$        [{"rootLabel": null,
$          "subForest":
$              [{"rootLabel": null,
$                "subForest":
$                    [{"rootLabel": null,
$                      "subForest": []},
$                     {"rootLabel": null,
$                      "subForest": []}]},
$               {"rootLabel": null,
$                "subForest":
$                    [{"rootLabel": null,
$                      "subForest": []}]},
$               {"rootLabel": null,
$                "subForest": []}]}]]],
$  "originalDomains":
$      [[{"Name": "A"},
$        {"DomainTuple":
$             [{"DomainTuple": [{"DomainBool": []}, {"DomainBool": []}]},
$              {"DomainMatrix":
$                   [{"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                                 {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}]}]]},
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Constant": {"ConstantInt": [{"TagInt": []}, 5]}}]}]]}]},
$              {"DomainBool": []}]}],
$       [{"Name": "B"},
$        {"DomainTuple":
$             [{"DomainTuple": [{"DomainBool": []}, {"DomainBool": []}]},
$              {"DomainMatrix":
$                   [{"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                                 {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}]}]]},
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Constant": {"ConstantInt": [{"TagInt": []}, 5]}}]}]]}]},
$              {"DomainBool": []}]}]]}
language Essence 1.3

letting B be ((false, false), [1, 2; int(0..1)], false)
