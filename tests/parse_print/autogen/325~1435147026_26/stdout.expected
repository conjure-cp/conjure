language Essence 1.3

find var1: mset (minSize 3, maxSize 4, minOccur 3, maxOccur 4) of bool
such that
    (function() : `function function bool --> bool --> partition from int`) in
    mset(function(function(false --> false, false --> false) --> partition({0, 0, 0, 5}, {4, 1}),
                  function(true --> false, true --> true) --> partition({0}),
                  function(false --> true, false --> true, true --> true, true --> true)
                      --> partition({4, 2, 4}, {5}, {4, 1, 4, 1, 0})),
         function(function(false --> true, true --> false, false --> true, false --> false, false --> false)
                      --> partition({4, 3, 4, 0, 4}, {2, 0, 2, 2, 5}, {2, 0, 0, 5, 4}, {2, 5, 2, 5}),
                  function(true --> true) --> partition({2, 1, 0}, {4, 2, 3, 5}, {0, 5, 0}, {5, 1, 3}),
                  function(true --> false) --> partition({0, 1, 4}, {1, 1, 2}),
                  function(false --> false, true --> false) --> partition({0, 1, 4, 1, 4}, {3, 2, 4, 5, 0}),
                  function(false --> false, false --> false, true --> true)
                      --> partition({2, 5, 5, 0}, {2, 4, 2, 4, 1}))),
    allDiff([relation((({} : `set of bool`), (false, true, true, true)), ({false}, (false, false, false, false)),
                      (({} : `set of bool`), (true, false, true, true))),
             (relation() : `relation of (set of bool * (bool, bool, bool, bool))`),
             relation(({false, true}, (false, false, false, false)), ({false}, (false, false, false, false)),
                      ({true}, (true, true, false, true)), ({true, true, true}, (false, true, false, false)));
                 int(3, 6, 4)]),
    {partition({partition({false, true, true, true}, {true, true, true}, {true}, {true, false}, {true, false}),
                partition({false}, {true}, {false}, {true, true}, {true, false, true, true, true}),
                partition({true, true, true, false}, {false, false, true}, {false, true}),
                partition({false, true, false, false}, {true, true, false}, {false, false, false, false}),
                partition({true}, {true, false, false, true}, {false, true}, {false, true, false, true})},
               {partition({true, true, true}, {false, true}, {false, false, false}, {false, true, true, false},
                          {true, false, false}),
                partition({false, true, false, false, true}, {true, true, false, true}, {false, false, false, true},
                          {true}),
                partition({true, true, false}, {true, true, false}, {false, false, false, true, true},
                          {true, false, true, true, true}, {true, false, true, true}),
                partition({false, false, true, true, false}, {true, true, false, false, false})},
               {partition({false, true, true, true, true}, {true, false, false, true, true}, {false, false}, {true}),
                partition({false, true, false, true}, {false, false, true, false}, {true, true, true, false, true}),
                partition({true, true, true}, {false, true, true, true}, {true, false, false, false, true}, {false}),
                partition({true, true, true}, {true, true, true, false, true}, {true}, {true}, {false})}),
     partition({partition({false}), partition({true, true}, {true, false, false, true}, {false, true, false, false})},
               {partition({false, true, true, true, true}, {true, true, true, false, true}, {true, true, true},
                          {true, true}),
                partition({false, false, true, false}), partition({true}, {true, false, false, false}),
                partition({true, true, true}, {false, true, true, false, true}, {false, true, false, true, false})},
               {partition({false, true, false}, {true, false, false}, {true, false, true, false}, {true}, {false}),
                partition({false, true}, {false, true, true}, {true, true, true}, {true, false, false, false, false})})}
    =
    {partition({partition({false}, {true, false, false, true, false}, {true, false, true}, {true, true, true, true},
                          {true}),
                partition({false, true, true})},
               {partition({true, false, false, false}, {true}),
                partition({false, true, false, false}, {true, true, true, true, false}, {false, false},
                          {true, false, true, true}),
                partition({false}, {true}, {false, true, false, true}, {false, false, true})},
               {partition({true}, {false}, {false, false, false, true, false}, {false, true, true},
                          {true, true, false, true, false}),
                partition({false, false, true, false, true}),
                partition({true}, {false, false, true}, {false, false, false}, {false, true})}),
     (partition() : `partition from partition from bool`),
     partition({(partition() : `partition from bool`), partition({true, false}),
                partition({true, false}, {false}, {false, true}),
                partition({true, true, true, true}, {false, true, false, true}, {false, false, true, true, true},
                          {true, true, true, true})},
               {partition({false, true, true, true}, {true, true, false, true, true}, {true, true},
                          {false, false, false, false}, {true, true, false, false, false}),
                partition({true, false, false, true}, {true, true, false, false}, {false}, {true, true, true, true},
                          {true, true, false}),
                partition({true, true, false, false, true}, {true}), partition({true, false, false, true}),
                partition({false}, {true, true, true}, {false, true, true, true, true}, {false, false})},
               {partition({false, false}, {false, true}, {false}), partition({false}),
                partition({false, true, false}, {true, true, false, true}, {true, true}, {false, true})})},
    together({[l_1 | l_1 : bool], flatten([true; int(1)])},
             partition({[false; int(0)], [false, false, false, false, true; int(1..2, 8, 9, 5)]},
                       {([] : `matrix indexed by [int] of bool`)},
                       {[false, false, true, false; int(6, 2..4)], ([] : `matrix indexed by [int] of bool`)},
                       {[false; int(1)], [true; int(0)], [true, true, false; int(4..6)],
                        [false, false, false, false; int(6, 3..4, 8)]})
             -
             partition({[true, false; int(4, 2)], [false, false, true, false; int(5..8)],
                        [false, true, true, false; int(8..10, 2)]},
                       {([] : `matrix indexed by [int] of bool`), [true, false, false, true; int(7..8, 3, 1)]}))
