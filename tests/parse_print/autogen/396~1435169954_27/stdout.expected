language Essence 1.3

find var1: int(3, 1)
such that
    true,
    image(function((false, true) --> true -> true, (true, true) --> false -> true, (true, true) --> true,
                   (false, false) --> 0 != 5),
          (true >= true, true != false)),
    allDiff([true <= false, true > false, !true; int(0..2)]),
    and([l_1 | l_1 : bool, l_1 <= l_1]),
    apart({{true}, {false}, {false, true, true}},
          partition({{false, true}, {true, false}}, {{true}, {false, true}, {false, true}})),
    !(true, true)[1],
    and([false, false = false, false <= true; int(0..1, 3)]),
    mset((partition() : `partition from bool`)) subsetEq (mset() : `mset of partition from bool`)
minimising factorial(var1)
