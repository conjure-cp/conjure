language Essence 1.3

find var1: bool
find var2: bool
such that
    var2 ->
    function(false --> false, false --> true, false --> true, true --> false) supset
    (function() : `function bool --> bool`),
    var2,
    [1, 3 / 5; int(4, 0..0)] .<
    [factorial(l_2)
         | l_1 : int(1..2, 1..1), l_2 : int(2..4, 1), 5 >= l_2, false <= false],
    apart({false},
          partition({true, true, true, false, false}, {true}, {false}, {true, false},
                    {false, false, false, false, true})
          -
          partition({true, false, false, true, true}, {false, true, true},
                    {false, true, true, true}, {true, true, true}, {false, false})),
    mset(1, 2) - (mset() : `mset of int`) supsetEq mset(1) union mset(0, 0, 3)
