language Essence 1.3

find var1: set (maxSize toInt(false)) of matrix indexed by [int(4, 2)] of int(2, 5)
find var2: partition (minPartSize 1 ** 5) from mset (minSize 0, minOccur 5, maxOccur 5) of bool
find var3: set (maxSize toInt(true)) of partition (maxNumParts 4) from int(0, 4)
such that
    (mset() : `mset of partition from partition from mset of int`) !=
    mset(partition({partition({mset(3, 4), mset(4), mset(5, 1, 4), mset(0, 5, 4), mset(5, 3)}, {mset(0), mset(2, 5)},
                              {mset(0), mset(1, 0, 0), mset(5, 3, 2), mset(1, 0, 3)}),
                    partition({mset(4, 5, 3), mset(5, 4, 2)}),
                    partition({mset(5, 3, 1), mset(2), mset(1), mset(2, 2, 5), mset(1)}),
                    partition({mset(3, 3, 5), mset(4, 0, 1), mset(5, 5)}, {mset(5), mset(1, 2), mset(2), mset(2, 4)},
                              {mset(1)}, {mset(0, 0, 1), mset(3, 5, 2), mset(3, 3, 2)})},
                   {partition({mset(1), mset(2)}),
                    partition({mset(0, 5, 4), mset(0, 0, 4), mset(5, 4)}, {mset(0, 3, 1), mset(0), mset(3, 4, 4)},
                              {mset(4, 0, 4), mset(1), mset(2), mset(5), mset(2, 4)},
                              {mset(0, 4), mset(0), mset(2, 5, 3)})},
                   {partition({mset(2), mset(0)}, {mset(0, 4)}, {mset(5), mset(0)}),
                    partition({mset(0), mset(5, 1), mset(3, 4, 2)}, {mset(4, 5, 2)},
                              {mset(2, 1, 4), mset(1, 3, 2), mset(5, 5), mset(0, 2, 2), mset(3)},
                              {mset(2, 0), mset(1, 4, 0), mset(2, 5, 0), mset(0)}),
                    partition({mset(5, 2, 5), mset(1, 2, 4)})}),
         partition({partition({mset(5), mset(4, 5), mset(2, 0, 4), mset(2, 0, 0)}, {mset(3), mset(4, 5, 4), mset(2)},
                              {mset(0, 2), mset(4), mset(3, 5)}, {mset(4, 5, 4), mset(3), mset(1)}),
                    partition({mset(5), mset(2), mset(0, 1)}),
                    partition({mset(2, 5), mset(5, 2, 1), mset(3, 1, 2)}, {mset(5, 0), mset(0), mset(2, 2)},
                              {mset(5, 4, 3), mset(0, 2), mset(2, 1, 4), mset(3, 3, 1), mset(0, 0, 1)}),
                    partition({mset(0, 3, 2), mset(4)}, {mset(1, 0, 4), mset(1, 4), mset(5, 4)}, {mset(5, 5)},
                              {mset(0, 4), mset(5, 3)}, {mset(4, 2), mset(5, 3), mset(0, 1, 5)}),
                    partition({mset(5), mset(5, 1, 5)},
                              {mset(3, 0), mset(2, 4, 2), mset(3, 1, 0), mset(3), mset(3, 5, 2)})},
                   {partition({mset(3, 0), mset(5, 1), mset(1, 0, 5), mset(5, 5)}),
                    partition({mset(3)}, {mset(3, 4)}, {mset(4, 0)}),
                    partition({mset(3), mset(1, 0, 2), mset(2), mset(1, 4), mset(1, 5, 1)}),
                    partition({mset(5)}, {mset(2), mset(4, 3, 3), mset(0, 3, 5), mset(0, 4, 0), mset(5, 1, 3)},
                              {mset(2), mset(5, 0)}, {mset(1, 4, 4)},
                              {mset(4, 0, 4), mset(5, 2), mset(3, 4, 0), mset(4, 1, 4)}),
                    partition({mset(3), mset(2, 5), mset(0, 4), mset(2, 2)},
                              {mset(2, 3), mset(5, 3), mset(2, 3), mset(3)}, {mset(0), mset(2, 2), mset(2, 5)})}),
         partition({partition({mset(4), mset(0, 1), mset(3), mset(3, 4)},
                              {mset(4, 1), mset(4, 5), mset(4, 4), mset(3, 1)}, {mset(2), mset(4), mset(1)},
                              {mset(1, 4, 0), mset(1, 5), mset(1), mset(3), mset(2, 4, 0)},
                              {mset(3, 1), mset(2, 1, 1), mset(2), mset(5, 1, 2), mset(4, 2)})},
                   {partition({mset(1), mset(3)}, {mset(5, 4)}),
                    partition({mset(0), mset(0)}, {mset(4, 2, 5), mset(5, 2, 4), mset(5), mset(1, 3, 3)}),
                    partition({mset(4), mset(3), mset(1, 5, 3), mset(4), mset(1, 3)},
                              {mset(3), mset(1), mset(1, 2), mset(0, 0)})},
                   {partition({mset(5, 0), mset(1, 3), mset(5), mset(1)}, {mset(1), mset(3, 3), mset(0), mset(0)},
                              {mset(1), mset(0, 1, 4), mset(4, 4), mset(5, 4, 1), mset(5, 5, 1)},
                              {mset(2), mset(3, 1, 5)}, {mset(4, 1), mset(5, 1), mset(3, 4), mset(0)}),
                    partition({mset(4), mset(0, 3), mset(1, 2, 1), mset(5, 2), mset(1, 2, 2)},
                              {mset(0), mset(5, 4), mset(5, 3, 3), mset(1, 0, 5), mset(5, 4)}),
                    partition({mset(3), mset(4)}, {mset(3)}, {mset(3), mset(1)}, {mset(4, 0, 3)}),
                    partition({mset(5)}, {mset(2, 5), mset(5, 3, 0), mset(5), mset(4, 0), mset(2, 5)}, {mset(2, 5, 1)},
                              {mset(4), mset(3, 5, 5), mset(1, 1)}),
                    partition({mset(5)}, {mset(4, 2, 3), mset(3, 3, 2), mset(5, 0)})},
                   {partition({mset(5, 4), mset(4, 3, 3), mset(5, 1), mset(5, 4, 0), mset(4, 3, 0)},
                              {mset(4, 3, 2), mset(0, 2, 5), mset(2, 4), mset(1, 4, 0)}, {mset(4, 4, 2), mset(3, 5, 4)},
                              {mset(3, 1, 4), mset(2), mset(1, 4), mset(0)},
                              {mset(2, 3, 1), mset(3), mset(5, 0, 5), mset(1, 2, 4), mset(3, 3, 1)}),
                    partition({mset(1, 5, 1), mset(3, 1), mset(0), mset(1)}, {mset(0), mset(1, 0), mset(5), mset(1, 3)},
                              {mset(1, 3)}, {mset(5, 4, 4), mset(2, 4)},
                              {mset(1, 4), mset(0, 2, 2), mset(0, 1), mset(1, 5, 2), mset(0, 3, 5)})},
                   {partition({mset(2), mset(4, 4, 3)}, {mset(2, 1), mset(5, 1, 4), mset(0, 4, 0)},
                              {mset(3, 1), mset(3)})})),
    partition({toMSet({partition({5}, {5, 2, 2, 4}, {5, 5, 0, 0}, {1, 0, 4, 1}, {4, 0, 4}),
                       (partition() : `partition from int`)}),
               mset(partition({2, 2}, {1}, {3, 0}, {4, 1, 1, 0}, {2, 4})) intersect
               mset(partition({4, 5, 3, 2}, {0, 2}, {0, 4, 5, 1, 1}, {4}, {3, 1, 1}), partition({3, 1, 3, 2, 3}),
                    partition({5, 1, 1, 3, 1}, {1, 4, 1, 4}, {1, 3, 5}, {0, 0}, {3, 3, 1, 3, 4})),
               mset(partition({1 / 5, 4 ** 4, 4 / 4}, {factorial(0)}, {0 % 3, 4 % 2, 4 ** 5, 2 - 1}, {factorial(0)}),
                    partition({1 ** 2, factorial(4), 1 % 1}, {-1, 5 % 4, 0 % 2},
                              {toInt(false), factorial(3), 4, 0 / 2}),
                    partition({1}, {4, 1, 5}, {1, 0, 4, 3, 5}, {2, 0, 5}))},
              {(mset() : `mset of partition from int`) union
               mset(partition({4, 4, 1, 1}, {3, 0, 1, 2, 0}), partition({1, 3, 4})),
               mset(partition({2}, {2, 5, 5, 2}, {4, 4, 3}, {4, 4, 2, 5, 2}),
                    partition({3, 5}, {1, 0, 5, 4}, {4, 5, 0}, {3, 3, 4, 4, 4}), partition({0, 2, 0, 3}, {1, 3, 1}))
               intersect mset(partition({2}, {4, 1, 4, 0}, {4, 2, 2}, {3, 3, 4, 0, 5}, {2, 4, 2, 4})),
               mset(partition({5, 1, 3, 5}, {3, 0, 3}, {4}, {1, 3, 0}, {1}), partition({3, 2}, {0, 2, 5, 1, 5}),
                    partition({3, 2, 2, 2}, {2, 0, 3}))
               union mset(partition({5}))},
              {mset((partition() : `partition from int`), partition({4, 1, 3, 0}, {5, 2}, {4}, {0})) intersect
               mset(partition({4, 2, 0, 4, 0}, {5}, {2, 2, 2, 4, 5}, {5, 5})),
               mset(partition({5, 4, 3}, {0, 0, 3, 1}), partition({4, 4, 3}, {0}, {1, 0}, {3}),
                    partition({4}, {5, 0, 2, 1}, {4, 4, 0, 1}, {5, 4, 3, 5})),
               toMSet({partition({1, 2, 2, 0, 5}, {0, 2, 0})}),
               mset(partition({0, 0, 0}, {3}, {2, 2, 0}), partition({0, 3, 5, 1, 1}, {4, 5, 2, 0, 2}),
                    partition({5}, {1, 1, 1, 4, 0}, {5, 4, 3, 2, 2}))
               intersect mset(partition({4}, {2, 3, 4, 5, 5}, {2, 2, 2, 3})),
               mset(partition({4}, {0, 5, 0, 0, 0}, {3, 3, 3}, {3}, {3, 5, 3}),
                    partition({4, 1, 0, 3}, {3, 3, 2, 2, 1}))
               union
               mset(partition({1, 2}), partition({1, 0, 0, 3}, {3, 4, 2, 3, 3}, {2, 0, 5}, {2}, {3, 3}),
                    partition({5, 5}, {3, 4}))},
              {(mset() : `mset of partition from int`),
               mset(partition({5, 3, 1, 1}, {4, 4}), partition({4, 2}, {2, 1, 0}, {0, 3, 2}, {4}, {1, 5, 4, 3}),
                    partition({3, 5}, {0}, {1, 1, 5}))
               union mset(partition({5, 5}, {3, 3}, {3, 3, 2, 4}, {0, 0, 4}, {3, 5}))},
              {mset(partition({0, 5})) union (mset() : `mset of partition from int`),
               toMSet({partition({5, 4, 2}, {1}, {3, 1, 4, 3, 2}, {5, 2, 2, 0, 2}, {0})}),
               toMSet({partition({4, 1, 2}, {0, 5, 1, 1}, {1, 1})}),
               mset(partition({3, 4, 3}, {0, 0, 3})) - (mset() : `mset of partition from int`)})
    in
    {partition({mset(partition({4, 5, 4, 3}, {2, 1, 5, 0}, {1, 5, 0}, {3, 5}, {2, 4, 0, 5, 4}),
                     partition({2}, {2}, {5, 5, 2, 1, 2}, {0, 0, 3, 0, 1})),
                mset(partition({0}), partition({1, 3}, {5, 2, 4}, {5, 4, 3, 5, 5}, {3}),
                     partition({1, 1, 0, 0}, {0, 1, 1, 0, 0}))}),
     partition({mset(partition({4, 0, 1, 3, 3}))},
               {mset(partition({5, 4, 4, 3, 4}, {3})), mset(partition({0, 2}), partition({2})),
                mset(partition({2, 3, 0, 2, 0}, {4, 2, 5, 5}, {1, 5}), partition({0}, {4, 2, 4, 4})),
                mset(partition({2}, {3, 2, 1, 2, 3}, {2, 3, 0}, {5, 5}, {5, 2})),
                mset(partition({1, 1}), partition({0, 4, 5, 0, 0}, {1, 4}, {0}, {3, 1, 2}),
                     partition({3, 0, 5, 0}, {2, 1}, {4, 1}, {4, 0, 1, 1}))},
               {mset(partition({4, 3, 1, 4}), partition({0, 3, 2}, {0}), partition({4, 2, 3, 2, 0})),
                mset(partition({2, 0, 2, 1, 5}), partition({3, 1, 0}, {3}, {4, 0, 2}, {1, 0, 3}),
                     partition({2, 5, 2, 2}, {5, 0, 2, 3, 2}, {4, 5, 3}, {2, 3}))},
               {mset(partition({3, 2, 4}, {1}), partition({1, 2, 4, 0}, {1, 4, 2}, {3, 3, 5, 1}, {0}, {4, 1, 5, 5, 2}),
                     partition({1, 1, 2, 3}, {5, 2, 5, 3, 0})),
                mset(partition({0, 4, 2, 5, 2}, {3, 3, 3}), partition({3, 0, 4, 4, 0})),
                mset(partition({1, 5, 0, 0}, {1}, {1, 4, 3, 5}, {1, 0, 5}), partition({0, 5}, {1}, {4, 5, 2, 0, 2}))}),
     partition({mset(partition({2, 3, 0, 0}, {0, 3}, {3}, {4}, {1}), partition({3, 4}),
                     partition({4, 5, 4, 0, 3}, {1, 5, 1, 5}, {2, 3, 5, 0}, {5, 2, 5, 4}))},
               {mset(partition({4, 1, 5, 3}, {3, 5, 0, 2})), mset(partition({3}, {0}, {2})),
                mset(partition({5, 0, 5, 3}, {4, 0}), partition({3}, {4, 4, 3, 1}, {5, 5, 5}, {0, 3}))},
               {(mset() : `mset of partition from int`),
                mset(partition({2, 1, 4, 5, 4}, {3, 4}, {0, 4, 4}, {2, 0}, {1, 0, 2, 5, 0}))},
               {mset(partition({5, 5}, {5, 1, 0, 2}),
                     partition({0, 5}, {1, 0, 4, 3, 4}, {1}, {1, 3, 3, 2, 0}, {4, 4, 3}),
                     partition({3, 2}, {4, 3}, {1, 5, 1}, {1, 5, 1, 1, 3}, {3, 0, 1}))})},
    image(function({{false, true}, {false, true, false}, {true}} --> 5, {{true, true, false}} --> 2, {{true}} --> 4),
          powerSet(defined(function(true --> 5, false --> 4, false --> 2, true --> 2, true --> 2))))
    <=
    |partition({relation(tuple (mset(false, true, true)), tuple (mset(false, true, false))),
                relation(tuple (mset(false, false, false)), tuple (mset(false)), tuple (mset(true, true, true)),
                         tuple (mset(false)), tuple (mset(false, true, false))),
                relation(tuple (mset(true)), tuple (mset(true, true)), tuple (mset(true))),
                relation(tuple (mset(true, false)))},
               {relation(tuple (mset(false, false)), tuple (mset(true, false, true)), tuple (mset(true))),
                relation(tuple (mset(true, false)), tuple (mset(true, true)), tuple (mset(false)), tuple (mset(false)),
                         tuple (mset(true)))})|,
    (mset() : `mset of mset of mset of partition from int`) subset
    (mset() : `mset of mset of mset of partition from int`),
    inverse(function(partition({partition({{false}, {false, true, false}, {true, false}, {false, false}}),
                                partition({{true}, {false, true}, {false, true, true}, {false, false, true}},
                                          {{false}, {true, false}, {true}, {false, false, false}, {false, true, true}},
                                          {{false}, {true, false, false}, {true}, {false, false}, {false}},
                                          {{true, true}})},
                               {partition({{false, false}, {true, false}, {false}, {true}, {true, false}}),
                                partition({{false, false}, {true, false, true}, {true}, {true, false},
                                           {true, true, true}}),
                                partition({{false, false, false}, {true, false}}, {{true, false, true}},
                                          {{true, false, false}, {true, false}},
                                          {{true, false, false}, {false, true}, {false, false, true},
                                           {false, false, true}})},
                               {partition({{true}, {false, true}, {false}},
                                          {{false}, {false}, {true, false}, {false, true, true}, {false}},
                                          {{true, false, true}, {true, false, true}, {true, true, false},
                                           {true, false}}),
                                partition({{false, true}}, {{false}, {true, true, false}},
                                          {{false, true, false}, {true}, {false}, {false}, {false}},
                                          {{false, true}, {true}, {false, false, false}, {true, true}, {true, true}}),
                                partition({{true, true}, {true, false, true}, {true, true}, {true, false, true},
                                           {false}},
                                          {{false}, {false}},
                                          {{false}, {true, true, false}, {true, false}, {true, true}}),
                                partition({{true}, {true, true}, {true}, {true, true}, {false, false}},
                                          {{false, false}, {true, true}}, {{false}})},
                               {partition({{false, false}, {true, false, true}},
                                          {{true, false, true}, {false}, {false, false, true}},
                                          {{false, false, true}, {true, true, false}, {true}},
                                          {{false, false, true}, {true, true, true}, {true, false, true}, {false},
                                           {true}},
                                          {{false, true}, {true}, {true, true, true}}),
                                partition({{true, false}, {false, true, false}, {true, true, false}, {true, true},
                                           {true}},
                                          {{true}, {false, false, false}, {true}}),
                                partition({{false}}),
                                partition({{false}, {false}, {true, false}, {true, true}, {false, false}},
                                          {{false, false}, {true}, {true}, {true, false, false}, {false}},
                                          {{true, false}, {false, true, false}, {true, false}, {false, false, false}},
                                          {{false, false, false}, {false, true}, {false}, {false, true, false},
                                           {false, true}}),
                                partition({{false, true}, {false, true, false}, {true, false}})})
                         --> mset(partition({mset(true, false), mset(true, false, true), mset(false, true, true),
                                             mset(false), mset(false)},
                                            {mset(true, false), mset(true, true, false), mset(false, false, false)},
                                            {mset(false, false), mset(false, true, false), mset(true, true)})),
                     partition({partition({{true, true, false}}, {{true}, {false, false}, {false}, {true}}),
                                partition({{false}, {true, false}, {true, true, false}, {false}, {false}},
                                          {{false, false}, {true, false}}, {{false, true}},
                                          {{false}, {true, false}, {true, false, false}}),
                                partition({{false, false}, {false}},
                                          {{false, true, true}, {true, false, false}, {true}},
                                          {{true}, {true, false, true}, {true, true}, {false}, {true}},
                                          {{true, false, true}, {false, false, false}, {true, true, true}, {true},
                                           {true, true}},
                                          {{true, false, false}, {true, true}, {true, false, false},
                                           {false, false, false}, {true, false}})})
                         --> mset(partition({mset(true)}, {mset(false, false)},
                                            {mset(true, true, false), mset(false, true, false), mset(true, false),
                                             mset(true, true, false)})),
                     partition({partition({{true}}, {{true}, {false, false}}, {{true}, {true}, {false, false}}),
                                partition({{false, true}}),
                                partition({{false}}, {{true, true, true}, {false, false}},
                                          {{true, false, true}, {true, true}, {true, true}},
                                          {{false, true}, {false, true}, {false, false}})})
                         --> mset(partition({mset(true), mset(false), mset(true)},
                                            {mset(false), mset(false, false, true), mset(false), mset(true)},
                                            {mset(true, false, false), mset(false)},
                                            {mset(true, true, false), mset(true, false)})),
                     partition({partition({{false}, {true, true, false}, {true}, {true}},
                                          {{true}, {false}, {false, true}}, {{false}},
                                          {{false, true}, {true, false, false}, {false, false}}, {{true}}),
                                partition({{false}, {false, true, true}, {true}}, {{false, false, true}}),
                                partition({{true, false, true}}, {{false, true, false}}, {{false, false}, {true}},
                                          {{true, false, true}, {false, true, false}, {false, false}, {false, false}},
                                          {{true, false, false}, {true}, {true, true}, {false}}),
                                partition({{false, true}, {false, true, false}, {true, false}, {false}},
                                          {{false, true}, {true, false}, {true, false, true}}, {{false, false}})},
                               {partition({{false}, {true, false}, {false, false}, {false, true, false}}),
                                partition({{true, true, false}, {true}, {false, true}, {false, true, true}},
                                          {{false, false}}),
                                partition({{true}, {false, false}, {true, true}, {true}, {false}},
                                          {{false, false}, {true, false}, {false, true, true}, {false}},
                                          {{false, true, true}, {false, true}, {true, true, false}, {true, false},
                                           {true, false}},
                                          {{false, true, true}}, {{false}, {true, false}}),
                                partition({{false, true, true}, {true, false}, {true}, {false}, {false, true, true}},
                                          {{true, false}, {true}, {false}}),
                                partition({{true}, {true, true}, {false, false}, {true, false}},
                                          {{true, false, false}})},
                               {partition({{true, true}, {false}, {false}}),
                                partition({{false, false, true}, {true, true}, {false, false, false}, {false, false}},
                                          {{true, false, false}, {false, true, true}, {false}}, {{false}},
                                          {{true, false}, {true, false}}),
                                partition({{true, true}, {true, true, true}, {true}, {false, false}})},
                               {partition({{false, true, false}, {true, false}},
                                          {{true, true, true}, {true}, {false}, {true, false}, {false, true, false}},
                                          {{true, false, true}, {true}, {true}, {false, true}},
                                          {{true}, {true}, {true, true}, {true, false}, {true, false}},
                                          {{false}, {false, true}, {true, false, false}})})
                         --> mset(partition({mset(true), mset(false, false), (mset() : `mset of bool`),
                                             mset(true, true, true)},
                                            {mset(false)}, {(mset() : `mset of bool`)},
                                            {mset(false, true, true), mset(true, false), mset(false, true, false)},
                                            {(mset() : `mset of bool`), (mset() : `mset of bool`)}),
                                  partition({mset(false), mset(true, false)}),
                                  partition({mset(false, true, true), mset(false, true, false)}, {mset(false)}))),
            function(mset(partition({mset(true), mset(false, false)}),
                          partition({mset(false, false, false), mset(false), mset(true, true)},
                                    {mset(true, true), mset(false, true, true), mset(false, true, true), mset(false)},
                                    {mset(true), mset(true, false, false)},
                                    {mset(true), mset(true, true, false), mset(true, false, false)}))
                         --> partition({partition({{true, false}, {true, false}, {false, true}}, {{true, false}},
                                                  {{false, true, true}, {false, false, false}},
                                                  {{false, false, true}, {true, true, true}, {false, false, false},
                                                   {true, false}, {false, true}}),
                                        partition({{false}}, {{true}, {true, false}, {false}, {false, false}},
                                                  {{false, false}}, {{false}, {false, true}, {false, true, false}}),
                                        partition({{true}}, {{true, true}, {true, true}, {true}},
                                                  {{false}, {true, false, false}}),
                                        partition({{false}}, {{true, true}}),
                                        partition({{false, true}, {false, false}, {false, true}},
                                                  {{false}, {false, false, true}, {true, true}, {false, true}},
                                                  {{false}, {true}, {true, true}, {false, false, true}})},
                                       {partition({{false, true, false}, {false}}, {{true}, {false, true}}),
                                        partition({{false}, {true, true}, {true, false}},
                                                  {{true, false}, {false, true}, {false}, {true}, {false, true}},
                                                  {{true}, {true, false}, {false, false, false}},
                                                  {{true, false, true}, {false}, {true, true, true}}),
                                        partition({{true}, {false}, {true}, {false, true, true}, {true, true, false}},
                                                  {{true, false, false}, {true, true}, {false, true},
                                                   {true, true, true}},
                                                  {{true, true, true}, {false, false, false}}),
                                        partition({{false, true}, {false, false}, {true, true}, {true, false}},
                                                  {{true}, {false, true}, {true, false, false}, {false, true, true},
                                                   {false}},
                                                  {{false, true, false}}),
                                        partition({{true, true}}, {{true}, {true, false}, {false, false, true}},
                                                  {{false}, {true, true, false}, {true}, {false}, {false, false, true}},
                                                  {{true}, {true, false, true}, {true, true}, {true, false, true},
                                                   {false, false, false}})},
                                       {partition({{true, false, true}, {true, true}, {true, false},
                                                   {false, false, true}, {true, false}},
                                                  {{true}, {true}, {false}, {false, false, true}, {true, false}},
                                                  {{false}, {false, true, true}, {true, false}, {false, true}},
                                                  {{false, true}, {false, false, true}, {true, false},
                                                   {false, true, true}, {false}}),
                                        partition({{false}, {false, false, true}, {true}},
                                                  {{true, false}, {false}, {false, true}, {false, false},
                                                   {true, true, true}},
                                                  {{true, true, true}, {true}, {false}, {true}},
                                                  {{true, false, true}, {false}}),
                                        partition({{true, true, false}, {true, true, false}, {true, true, false},
                                                   {true, true}},
                                                  {{true, true}}, {{false}, {false, true}, {true, true}})},
                                       {partition({{true, false, false}, {true}, {false, true, true},
                                                   {true, true, false}}),
                                        partition({{false}, {true}, {true, false}},
                                                  {{false, false, true}, {true, false}}),
                                        partition({{true, true, true}, {true, true, true}, {true}, {true}},
                                                  {{false, false, true}},
                                                  {{false, true, false}, {false, true, false}, {true}},
                                                  {{true, false, false}, {true, true, false}, {true, false}, {false},
                                                   {false, true}}),
                                        partition({{true, true, false}}, {{false}},
                                                  {{false, false, false}, {true, false, false}, {false, true, true},
                                                   {false}})}),
                     mset(partition({mset(true, false), mset(true, false)}))
                         --> partition({partition({{true, false, true}},
                                                  {{false}, {false, true, true}, {true, false}, {true, true, false},
                                                   {false, false}},
                                                  {{false, true, false}}),
                                        partition({{false}, {true}, {true, true, false}, {true, true, true}}),
                                        partition({{false}, {true, true, false}, {false}, {true, false, true}, {false}},
                                                  {{false, true}, {false, false}}),
                                        partition({{false, false}, {false, true}, {false}},
                                                  {{true, false, true}, {true, false}})},
                                       {partition({{false}, {true, false}, {false, false, true}, {false, false}},
                                                  {{true, true}, {false}, {false}, {false}},
                                                  {{false, true}, {true, true, false}},
                                                  {{true, false}, {false, true, false}, {true, true}, {false, false},
                                                   {true, false, false}}),
                                        partition({{true}, {true, true, false}, {true, true}, {false, true, true},
                                                   {true, true, true}}),
                                        partition({{false, true}, {true}, {true, false}}),
                                        partition({{false, true, true}}, {{true}}, {{true}})},
                                       {partition({{false}, {false, false}, {true, true}},
                                                  {{false, false}, {false, true}, {false, true}, {true, true}},
                                                  {{false}, {false}, {false, false, false}, {false, true}, {false}},
                                                  {{false, false}}),
                                        partition({{true, true}, {false, false, true}, {true}, {false},
                                                   {false, true, false}},
                                                  {{false, true, false}, {false, false}, {true, false, false}, {false},
                                                   {true, true, false}},
                                                  {{true, true}, {true, false}, {false, false, false}, {true}},
                                                  {{true, false}, {false}, {true, true, true}, {false, true}}),
                                        partition({{false, false, false}, {false, true}, {false, true}},
                                                  {{false, true, false}, {true, false}, {false}}, {{false}}),
                                        partition({{false}, {true, true, true}, {false, false, true},
                                                   {false, false, false}, {false}},
                                                  {{false, false}},
                                                  {{true, false}, {true, true}, {false, false}, {false, false}},
                                                  {{true, true}, {false, false}, {false, true}, {true}},
                                                  {{false, false}, {false, false, false}, {true, false, true}})}),
                     mset(partition({mset(true, false), mset(true, true), mset(true), mset(false, false), mset(false)}),
                          partition({mset(false, true, true), mset(true, true), mset(false)},
                                    {mset(false, true, true), mset(false, true, true), mset(true),
                                     mset(true, true, true)}),
                          partition({mset(true, false, true), mset(false, false), mset(false, false), mset(true)},
                                    {mset(false, true, false), mset(true, false, true), mset(true, false, true)}))
                         --> partition({partition({{true, false, true}, {true, false}, {true, false, false}, {false}},
                                                  {{false}, {true, true, true}, {true, true, true}, {false},
                                                   {true, true}},
                                                  {{true, true}, {false, true, false}}, {{true, true}, {true, false}},
                                                  {{true}}),
                                        partition({{true, true}, {false, true, true}, {false}, {true, false}}),
                                        partition({{false}}, {{true}}),
                                        partition({{false}, {false}, {false, true}, {false}},
                                                  {{true, true}, {true, true}, {true, false, true}, {false, true}},
                                                  {{true}, {true, false}, {true, false}, {true, false}},
                                                  {{true, false, false}, {false}})},
                                       {partition({{true, false}},
                                                  {{false}, {true}, {true, true, false}, {true, false, false},
                                                   {false, true, true}},
                                                  {{false, true}, {false, true}, {false}},
                                                  {{false}, {true, false, true}, {false, false, true}}),
                                        partition({{true, true}, {false, true, true}, {false, true, false},
                                                   {false, true, false}, {true, false}})},
                                       {partition({{false}},
                                                  {{false, false}, {true}, {true}, {false, false, true}, {true, false}},
                                                  {{false}, {true}, {true, false}, {false, true, true}}),
                                        partition({{false, false, true}, {true, true, true}})},
                                       {partition({{true, true, false}, {false, false}, {false, true},
                                                   {true, false, true}}),
                                        partition({{false}}),
                                        partition({{false}, {true, false, false}, {true, true}})}),
                     mset(partition({mset(false, false)},
                                    {mset(false, true), mset(true), mset(false, true), mset(false, true, true)}))
                         --> partition({partition({{true, false}, {true, false}}, {{true, false, false}},
                                                  {{false, true, true}},
                                                  {{false, true, true}, {false}, {true, true, true}, {false, false},
                                                   {true, true}},
                                                  {{false, true}, {true, true, false}, {false, true}, {false, false},
                                                   {true, true}}),
                                        partition({{true, false, true}, {false}, {false, false}, {false, false, false}},
                                                  {{false, true, false}, {true, false, false}, {true, false}},
                                                  {{true, false, false}, {false, false, true}, {false, true, false},
                                                   {true}},
                                                  {{false, true}, {false, true, true}, {false, false, true}, {true}})},
                                       {partition({{false, true}, {true, true, true}}),
                                        partition({{false, true, true}, {false}}, {{false, true}},
                                                  {{true}, {false, true}, {true}}),
                                        partition({{false, true, false}, {false, false}, {true, true, false}},
                                                  {{true}, {false, true, true}},
                                                  {{true, true, false}, {false, false, false}, {false, true},
                                                   {true, false}, {true, true, false}}),
                                        partition({{false}, {true}}),
                                        partition({{false}, {true, true}, {false}}, {{false, true}},
                                                  {{true, false, true}, {true}, {false}, {false, false, false},
                                                   {false, false, true}})}),
                     mset(partition({mset(true, true, true)}, {mset(true, false, false), mset(false)},
                                    {mset(true, false), mset(true), mset(true, false, true), mset(true),
                                     mset(false, false)},
                                    {mset(true, false, true)},
                                    {mset(true, false, true), mset(true), mset(false), mset(true), mset(false, false)}),
                          partition({mset(false)}, {mset(true, true)},
                                    {mset(false, false, true), mset(false, true), mset(true, true, true),
                                     mset(false, true), mset(false)},
                                    {mset(false), mset(true), mset(false, false, true), mset(false, false, true),
                                     mset(true, false)},
                                    {mset(false)}))
                         --> partition({partition({{false, false}, {false, true}})},
                                       {partition({{false, false}}, {{true}, {true}}),
                                        partition({{false, true, true}, {false}, {false}, {false, true}},
                                                  {{true, false, false}, {false, false, true}, {true}}, {{false}},
                                                  {{true, false, false}, {true, false, false}, {false}})}))),
    !(mset({mset(false, false)}, {mset(false), mset(false, true, true), mset(false)}) supset
      mset({mset(true), mset(false, false, true)}, {mset(false, true), mset(true)}, {mset(false, false)})),
    !false,
    mset({mset(relation((4, 3), (5, 3), (4, 2)), relation((2, 2), (0, 2), (2, 2), (5, 4)), relation((0, 0), (2, 2))),
          (mset() : `mset of relation of (int * int)`)},
         {mset(relation((1, 2), (2, 0)), relation((0, 1), (4, 2), (4, 4), (3, 5), (3, 0)),
               relation((5, 3), (5, 1), (3, 2), (1, 1)))},
         ({} : `set of mset of relation of (int * int)`))
    subset
    mset({mset(relation((4, 5)), (relation() : `relation of (int * int)`), relation((0, 5))),
          mset(relation((4, 1), (5, 3), (0, 3)), relation((4, 0), (5, 5), (0, 4), (4, 5)), relation((3, 3), (2, 0)))},
         ({} : `set of mset of relation of (int * int)`))
