language Essence 1.3

find var1: (bool, bool, bool)
find var2: partition from bool
find var3: matrix indexed by [int(4, 3..4)] of bool
find var4: function (maxSize 5) bool --> bool
such that
    inverse(function(([] : `matrix indexed by [int] of bool`)
                         --> function(false --> false, false --> true, true --> true, true --> true, true --> false),
                     ([] : `matrix indexed by [int] of bool`) --> (function() : `function bool --> bool`),
                     [false, true, false; int(2..4)]
                         --> function(false --> false, false --> false, false --> true, false --> true, false --> true),
                     [true, false; int(1..2)] --> (function() : `function bool --> bool`)),
            function(function(true --> false, true --> true, true --> false, false --> false)
                         --> ([] : `matrix indexed by [int] of bool`),
                     function(true --> true, false --> true, true --> true, false --> false, true --> true)
                         --> ([] : `matrix indexed by [int] of bool`),
                     (function() : `function bool --> bool`)
                         --> [false, false, false, true, true; int(5..6, 3, 14, 11)],
                     function(false --> false, false --> true, false --> true, true --> true, true --> true)
                         --> [true; int(1)])),
    allDiff(([] : `matrix indexed by [int] of partition from bool`)),
    (true <= false) <= (false > false) -> allDiff(var3)
