language Essence 1.3

find var1: bool
find var2: (partition from int(-4..1), (bool, bool), function int(1..4) --> bool)
find var3: bool
such that
    partition({{[(false, -3), (false, 6); int(0, 5)], [(true, 2); int(1)], [(true, -10), (false, 6); int(-2, -3)],
                [(true, 0); int(1)],
                [(true, -2), (false, -9), (true, -7), (false, 8), (false, -3), (true, 1), (false, -8); int(-3..2, 5)]}},
              {{[(true, -4), (true, -2); int(1..2)], [(true, -10); int(-5)],
                [(true, -4), (true, -10), (true, 4); int(4..5, -5)],
                [(false, -8), (false, -1), (false, 6), (false, -2), (false, -5), (true, 0); int(-2..3, 1)],
                [(false, 1), (true, -3); int(-5, 3)]},
               ({} : `set of matrix indexed by [int] of (bool, int)`)})
    =
    partition({({} : `set of matrix indexed by [int] of (bool, int)`)},
              {{[(false, 0); int(5)], [(false, -1), (true, -8); int(4..5)],
                [(false, -6), (false, -4), (false, -9); int(-4..-3, 0)], [(false, 10), (true, -7); int(3, 5)],
                [(false, -10), (false, 0); int(-2, -1)], [(true, -4); int(-5, -5)]}},
              {{[(true, -2), (true, 7); int(-5, -3)], [(false, -9); int(-3)],
                [(false, 10), (false, -5), (true, -7), (false, 4), (false, -2); int(-4..0)],
                [(true, 5), (true, -8), (false, -4), (true, -10); int(1..4)], [(false, 0), (true, -10); int(-1, 1)]}},
              {{[(true, 5), (false, -5), (true, 6), (false, -4), (true, -8), (true, -5); int(-2..0, 0..3)],
                [(true, -6), (false, 5), (false, -6); int(0, -1..1)], [(true, 5); int(5)],
                [(true, -7), (false, -9), (false, 8), (false, -10); int(0..3, 0)],
                [(false, 5), (true, 9), (false, 2), (false, 5), (true, -6), (true, 6), (false, -3); int(-3..2, -4)]}},
              {{[(false, -4), (false, 9), (true, 1); int(2..4, 4)], [(false, -5); int(0)]}},
              {{[(false, -3), (false, 8), (false, -2); int(2, 0..1)], [(true, -9), (true, 2); int(4, -2)]}},
              {{[(false, 9), (true, -9), (false, -10), (false, -4), (false, -8), (false, 5), (true, -8), (true, 8);
                     int(-3..4, 0..1)],
                [(false, -5); int(5)], [(true, -2); int(5)], [(false, 6), (true, 6), (false, -9); int(3, 1..2)],
                [(true, 0), (false, -2), (true, -2), (true, -2), (false, 5); int(4, 1..5)]}},
              {{[(false, -4); int(1)], [(false, -5); int(-2)],
                [(true, -6), (true, 4), (false, 6), (false, 10); int(-5..-2)]}}),
    true,
    function([mset(false, true) - (mset() : `mset of bool`), toMSet({true, true}); int(-4, -2)]
                 --> (relation((toInt(var3), function(false --> -5) = function(true --> -6)),
                               (-7, function(-4 --> -8, -8 --> -1) != function(-2 --> -4, -2 --> 1)),
                               (|{-4}|, var2 != var2)),
                      tuple (tuple (-8)), |({} : `set of int`)|,
                      function((mset() : `mset of bool`) --> partition({3}))),
             [toMSet({false, false}), (mset() : `mset of bool`), mset(var3, true, -10 != -8),
              (mset() : `mset of bool`) - mset(false);
                  int(2..5, 2..5)]
                 --> (toRelation(function(1 --> false, 4 --> false)), tuple (tuple (-2)), 3,
                      function((mset() : `mset of bool`) --> partition({2, 2}), mset(true) --> partition({-9}),
                               mset(false, false) --> partition({-7}), (mset() : `mset of bool`) --> partition({0}))),
             [mset(false, true) intersect (mset() : `mset of bool`), mset(true) intersect mset(true, false); int(-2, 5)]
                 --> (toRelation(function(2 --> true, -5 --> false)), tuple (tuple (-8)), -9,
                      function(mset(false) --> partition({8}, {9}), mset(true) --> partition({-9, -3}))))
    !=
    function([toMSet({true}), mset(var3, var1, var1), mset(false, false), mset(var1, false <-> true),
              mset(true, false) - mset(false), mset(true) intersect mset(true), mset(-5 = -7, false),
              (mset() : `mset of bool`) union (mset() : `mset of bool`);
                  int(-2..4, -4)]
                 --> (toRelation(function(4 --> true)), tuple (tuple (3)), -6,
                      function(mset(false, true) --> partition({6}, {-6}),
                               (mset() : `mset of bool`) --> partition({-8}, {-7}))),
             [mset(false) union (mset() : `mset of bool`), mset(false <-> false, true -> false, true, true \/ true),
              (mset() : `mset of bool`) intersect (mset() : `mset of bool`), toMSet(({} : `set of bool`)),
              mset(false \/ true, false -> true, var3, true != false);
                  int(0, 1..4)]
                 --> (relation((-9, var1), (|(mset() : `mset of int`)|, toInt(true) in (mset() : `mset of int`)),
                               (toInt(var1), var2 != var2)),
                      tuple (tuple (5)), |partition({0, 3})|, function((mset() : `mset of bool`) --> partition({-2}))),
             [mset(false, var3, true /\ true, false <-> true), mset(false \/ false, true = true),
              (mset() : `mset of bool`) - (mset() : `mset of bool`), toMSet({false, true}),
              mset(true) - mset(true, false), (mset() : `mset of bool`), mset(false, false != true),
              toMSet({false, false}), (mset() : `mset of bool`);
                  int(-2..4, -4..1)]
                 --> (relation((-3, toInt(true) in (mset() : `mset of int`)), (0, (5 = 8) in {true, false}),
                               (toInt(var3), toInt(false) in (mset() : `mset of int`))),
                      tuple (tuple (7)), -2, function((mset() : `mset of bool`) --> partition({-9}))),
             [toMSet({false}); int(-5)]
                 --> (toRelation(function(6 --> true)), tuple (tuple (-1)), toInt(false) + -10,
                      function((mset() : `mset of bool`) --> partition({5}, {0}))),
             [mset(true <-> false, 3 = 10, false -> false), mset(true -> false); int(-5, -2)]
                 --> (relation((4, var1), (toInt(false) % 9, var3 /\ (false \/ true)), (-9, var2 = var2)),
                      tuple (tuple (-2)), toInt(true) * (2 * 4), function(mset(false, false) --> partition({8}, {-4}))),
             [mset(0 = -4); int(0)]
                 --> (relation((|{7}|, false), (-5, false), (1 * 1 * 10, false != false <-> false)), tuple (tuple (10)),
                      10, function((mset() : `mset of bool`) --> partition({-1, 8}), mset(true) --> partition({10})))),
    (false <-> mset(tuple (false)) = mset(tuple (false))) <-> false,
    false
