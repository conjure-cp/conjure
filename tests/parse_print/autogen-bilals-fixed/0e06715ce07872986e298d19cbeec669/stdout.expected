language Essence 1.3

find var1: int(4, 2..4)
find var2: function (minSize 0, total, injective) (bool, bool, bool, int(3, 0)) --> tuple (bool)
find var3: set (size 4) of mset (size 2, minOccur 5, maxOccur 5) of bool
find var4: mset (minSize 2 % 1, maxOccur 5 % 3) of matrix indexed by [int(2, 4)] of bool
find var5:
        function (maxSize 0) set (minSize 2, maxSize 5) of int(2..3, 3) -->
            relation (minSize 5) of (bool * bool * int(3, 2..4))
find var6: set (size 3) of partition (maxNumParts 0, minPartSize 0, regular) from int(2, 5)
such that
    or([true, true, false, true, false; int(0, 5..7, 9)]),
    true,
    false
maximising var1
