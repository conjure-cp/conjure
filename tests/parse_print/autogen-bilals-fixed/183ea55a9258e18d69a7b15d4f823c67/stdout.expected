language Essence 1.3

find var1: matrix indexed by [int(3, 3)] of partition (regular) from bool
find var2: mset (minSize 5, maxSize 5, minOccur 2, maxOccur 2) of partition (minNumParts 3, partSize 2) from bool
find var3: mset (minOccur 1, maxOccur 1) of set (minSize 1, maxSize 2) of int(0, 5)
such that
    2 <= 5,
    false,
    function(function(partition({false, true, true}, {false, false, false, true}) --> mset(false),
                      partition({false, false, false, false}, {true, true, true, true, false},
                                {false, false, false, true}, {true, false, true}, {true})
                          --> mset(true, true, true))
                 --> mset(relation((true, false, true), (false, true, false), (true, true, true), (false, true, true),
                                   (true, true, true)),
                          relation((false, false, true), (false, false, false), (false, true, false),
                                   (true, false, false)),
                          relation((false, false, false))),
             function(partition({false, false, true, false}, {true, false, true, true}) --> mset(true, false),
                      partition({false}, {false, true, false, true, true}, {false}, {false},
                                {true, false, true, false, true})
                          --> mset(false, true),
                      partition({false, true, false, true, false}, {true, true}) --> mset(true),
                      partition({false, false, false, true, true}, {true, true, true}, {false})
                          --> mset(true, false, true))
                 --> mset(relation((false, false, false), (false, true, false)), relation((true, true, false))))
    subset
    function(function(partition({true, false, true, true}, {true, true, false, false}) --> mset(false, false),
                      partition({false, true}, {true, true}, {false, false, true}, {true, true}, {true}) --> mset(true),
                      partition({true}, {true}, {false, true, false, false}, {true, true, true, true}) --> mset(false))
                 --> mset(relation((false, true, false), (true, false, true)),
                          relation((false, true, false), (false, true, true), (false, false, false)),
                          relation((false, false, true), (true, false, false), (false, true, false))),
             function(partition({true, true, false, true}, {false, true, true, true, true},
                                {true, false, true, false, true}, {true, false, false, true}, {false, true})
                          --> mset(false))
                 --> mset(relation((false, true, true), (false, true, false), (true, false, true), (false, true, true),
                                   (false, false, true)),
                          relation((false, false, false), (false, false, true)),
                          relation((false, false, true), (false, true, false))),
             function(partition({true}, {false, false, true}, {true, false, false, true}) --> mset(false, true),
                      partition({true, true, false}, {true, true}, {true, true}, {true, true, false, false},
                                {false, true, true, false, false})
                          --> mset(true),
                      partition({false, false}, {true, false, false, true, true}) --> mset(false, true, true),
                      partition({false, false, false}, {false, true, false}, {false, false}) --> mset(true, true))
                 --> mset(relation((false, true, true), (true, false, false), (false, true, false)),
                          relation((true, false, true), (true, false, false)))),
    and([factorial(2) >= 0 | l_1 : bool, l_1]),
    allDiff([mset(mset(false, false, true)), mset(mset(true), mset(true, true, false), mset(true, true)),
             mset(mset(true)), mset(mset(false, true, false), mset(false, true), (mset() : `mset of bool`));
                 int(2, 1..3)]),
    {[function(2 --> true, 4 --> false, 2 --> true, 1 --> false), (function() : `function int --> bool`); int(1..2)]} !=
    ({} : `set of matrix indexed by [int] of function int --> bool`),
    image(function(mset(true, true, false) --> [1, 2; int(3..4)],
                   mset(true, true, false) --> [1, 1, 3, 4; int(1..2, 7, 6)],
                   mset(false, true) --> [0, 3, 1; int(4, 3, 6)], mset(true) --> [3; int(2)],
                   mset(false, false, false) --> [5, 2, 0; int(1, 7..8)]),
          (mset() : `mset of bool`))
    <=lex
    image(function(relation((true, 2), (false, 2), (false, 3)) --> [3, 2, 2, 0, 4; int(11, 2, 5..7)],
                   relation((true, 0), (false, 4)) --> [0; int(0)],
                   relation((false, 0)) --> [3, 5, 3, 3; int(2, 7, 5, 0)],
                   (relation() : `relation of (bool * int)`) --> [0, 0; int(0..1)],
                   relation((false, 0), (false, 4), (false, 3)) --> [4, 4, 1; int(8, 1..2)]),
          toRelation(function(true --> 3, false --> 4))),
    function(mset(mset(4, 0), mset(1, 1, 3), mset(0, 1))
                 --> mset(relation((true, false, true), (false, false, true), (true, false, true)),
                          relation((true, false, true), (true, false, false), (false, true, false), (false, true, true),
                                   (true, true, false)),
                          relation((true, true, true), (true, true, false), (false, true, true), (false, false, true))),
             mset(mset(2))
                 --> mset(relation((false, false, true)),
                          relation((true, true, false), (false, true, true), (false, true, false), (true, true, true),
                                   (true, false, true))))
    !=
    function((mset() : `mset of mset of int`) --> mset(relation((true, true, true))),
             mset(mset(5, 4, 2), mset(5), mset(5, 1, 5))
                 --> mset(relation((true, false, false), (false, false, false), (true, true, false),
                                   (false, true, true), (false, false, false))))
