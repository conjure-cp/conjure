language Essence 1.3

find var1: function (size 4, total) int(2..5, 5) --> tuple (bool)
find var2: function (size factorial(1), surjective) int(2..3, 2) --> matrix indexed by [int(2..3, 4)] of int(0..1, 0..2)
find var3: bool
find var4: set (minSize toInt(true)) of set (minSize 0) of bool
such that
    true,
    var3,
    relation(tuple (function(relation((false, 3, true), (false, 2, false), (false, 2, true))
                                 --> (function() : `function bool --> int`),
                             relation((false, 3, true), (true, 1, false), (false, 0, true), (true, 3, true))
                                 --> function(var3 --> 5, false --> 4, var3 --> 2, false --> 5))),
             tuple (function(relation((false, 1, false)) --> function(true --> 2))),
             tuple (function(relation((false, 1, false), (true, 4, true), (true, 2, false))
                                 --> function(false --> 3, true --> 5, false --> 2),
                             relation((false, 1, true), (false, 3, true), (false, 0, false), (true, 4, true),
                                      (true, 2, true))
                                 --> function(true --> 0, false --> 2, false --> 4))))
    subsetEq
    relation(tuple (function(relation((var3, 0, true)) --> (function() : `function bool --> int`))),
             tuple (function(relation((false, 5, true), (true, 5, true), (false, 3, true), (false, 0, false),
                                      (true, 2, true))
                                 --> function(true --> 3, false --> 0, false --> 4),
                             relation((false, 5, true), (true, 4, true), (true, 4, true))
                                 --> function(false --> 1, false --> 1),
                             relation((true, 3, false), (true, 3, false), (false, 5, false))
                                 --> function(false --> 0, true --> 5, false --> 3)))),
    var3,
    inverse(function([partition({1, 0, 4}, {2, 5, 1, 3, 1}, {2, 1, 4}, {3, 5, 4}), partition({4, 5}),
                      partition({0, 2}, {4});
                          int(0, 3, 5)]
                         --> (relation((4, 0, var3, true), (5, 5, var3, true)), var3),
                     [partition({1, 4}, {4, 2, 2}, {5, 5, 3}), partition({1}, {4, 0}, {0, 3}, {5, 2}, {0, 5, 4}),
                      partition({3, 2, 1, 5});
                          int(4, 2, 7)]
                         --> (relation((1, 3, true, true)), false),
                     [partition({2}, {2, 2, 5}, {1, 4, 0, 2}, {1}, {4, 1, 3, 3, 5}),
                      partition({1, 4, 1, 2}, {5, 3, 2, 1, 0}, {4, 4, 2, 5}, {2, 1, 5, 5}),
                      partition({0, 2}, {2, 2, 3, 4, 0});
                          int(2..4)]
                         --> (relation((0, 0, true, true), (5, 0, true, false), (1, 5, false, false),
                                       (4, 1, true, true)),
                              true),
                     [partition({4}, {5, 3, 0, 1, 1}, {3}), partition({2}, {1, 5, 1, 3}, {0}, {4, 5, 1, 3}); int(0..1)]
                         --> (relation((5, 2, false, true), (2, 1, false, false)), var3)),
            function((relation((2, 5, true, false), (1, 2, true, true)), true)
                         --> [partition({4, 0, 4, 3}, {2, 0}), partition({3, 5, 3, 1}, {2}, {3, 4, 5}),
                              partition({2, 4, 4, 3, 3}, {1, 4}), partition({1, 4, 2, 4, 3}, {1}),
                              partition({0}, {0}, {3, 2}, {0, 5, 3}, {1});
                                  int(3, 4, 8, 6, 13)])),
    var3
