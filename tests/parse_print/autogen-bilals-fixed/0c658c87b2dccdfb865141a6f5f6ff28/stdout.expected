language Essence 1.3

find var1: tuple (partition from bool)
find var10: (bool, int(-3))
find var2: (partition from bool, function bool --> bool)
find var3: set of set of int(1)
find var4: function bool --> int(-1)
find var5: tuple (int(-3))
find var6: partition from set of int(-5, 3..4)
find var7: partition from bool
find var8: partition from bool
find var9: bool
such that
    true,
    and([true | q_11 : set of set of int(1), -4 = |q_11|]),
    or([partition({[var5, var5, tuple (6), tuple (4); int(-5, -1..1)],
                   [var5, tuple (1), tuple (-1), var5, tuple (2), tuple (-8), var5, tuple (10), tuple (7);
                        int(-4..4, -3..-2)]},
                  {[var5, var5; int(-4, -1)]}, {[var5; int(5)]})
        !=
        partition({[tuple (7), var5, var5, var5, var5, tuple (-3), var5; int(-4..-1, -2..2)]},
                  {[tuple (6), tuple (8), tuple (9), var5, var5, var5, var5, tuple (2), var5; int(-5..3)],
                   [tuple (-2), tuple (-8); int(-3, -5)]},
                  {[var5, tuple (-1), var5, tuple (5), var5, var5, tuple (4), tuple (9); int(0..3, -4..-1)],
                   [tuple (2); int(5)]})
            | q_12 : set of set of int(1)]),
    or([true
            | q_13 : set of set of int(1),
              range(function(relation(tuple (false), tuple (false), tuple (true)) --> {7, -10} - ({} : `set of int`),
                             relation(tuple (false), tuple (true), tuple (true)) --> toSet(mset(0, 0)),
                             relation(tuple (false), tuple (false), tuple (false)) --> {image(var4, var9), 0 ** 1},
                             relation(tuple (false), tuple (true), tuple (true)) --> participants(partition({6}, {1}))))
              = q_13])
