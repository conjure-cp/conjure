language Essence 1.3

find var1:
        function (maxSize factorial(4), total, bijective) (bool, bool, bool) --> relation (size 4) of (int(2, 5) * bool)
find var2: (set (minSize 1, maxSize 2) of bool, (int(5, 3..5), bool, bool), (bool, bool, bool, bool))
such that
    true,
    true,
    true,
    false,
    true,
    (function() : `function bool --> partition from bool`) supset
    function(false
                 --> partition({true}, {false, true}, {false, true, true, true, true}, {true, false, true, true, false},
                               {true, false}),
             true --> partition({false, false}),
             true
                 --> partition({true, true, true, false, false}, {false, false, true}, {false, false},
                               {false, true, false, true, true}))
