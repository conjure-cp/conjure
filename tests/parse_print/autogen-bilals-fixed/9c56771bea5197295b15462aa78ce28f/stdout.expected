language Essence 1.3

find var1: int(-4..2, -3..1)
find var2: function bool --> function int(0) --> int(3)
find var3: bool
such that
    partition({([partition({3}, {-4}); int(5)], toInt(var3),
                relation((false, var1 <= var1, 5),
                         (var3 <-> false /\ false, mset(4, -3) = (mset() : `mset of int`), toInt(true) + toInt(false)),
                         (var3 <-> var3, false /\ false \/ (true -> true), toInt(false \/ false))),
                {2, -6 % -5},
                relation((9, var3, {false, false} = {false}), (3, {true} = ({} : `set of bool`), var3 in mset(false)),
                         (4, var3, toInt(false) in (mset() : `mset of int`)))),
               ([partition({0}, {-9}), partition({10}), partition({6}), partition({0, -7}), partition({-10}),
                 partition({-8, 0});
                     int(0..5)],
                8,
                relation((false in {false}, (false -> true) \/ (true <-> true), toInt(var3)),
                         (var3 in ({} : `set of bool`), toInt(true) in mset(-9, 2), toInt(var3)),
                         (1 != -2 <-> true, var3 in {false}, toInt(true) / 7)),
                toSet(mset(-10)),
                relation((9 / -2 + var1, toInt(true) in {0}, true),
                         (toInt(false) + 0 % -5, 3 != 1 /\ 0 != 8, false \/ true -> false != false),
                         (var1, function(true --> false, false --> false) = function(true --> true, false --> true),
                          (false -> false) -> (false -> true)))),
               ([partition({3}); int(-3)], -4,
                relation((var1 in (mset() : `mset of int`), true, toInt(var3)),
                         (true != (false != false), true, toInt(var3)),
                         (var3 \/ var3, (false = false) in mset(true, false), -10)),
                {var1},
                relation((10, var3, 2 * -2 in {10, -9}), (|partition({1})|, false, (-10, false) = (-7, false)),
                         (var1, function(4 --> -3) != var2(false <-> true), var1 <= var1)))},
              {([partition({-4}), partition({2}), partition({1}), partition({-5}), partition({1}); int(5, 1..4)], -9,
                relation((false, false, toInt(false)), (var3, true, toInt(var3)),
                         (toInt(true) in mset(3, -5), true, 4)),
                {var1},
                relation((2, var3 /\ var3, var2(var3) != function(-2 --> -4)),
                         (1, toInt(false) in mset(7), mset(true) = mset(true, true)),
                         (-2, ({} : `set of bool`) = {false, true}, false /\ false \/ var3)))},
              {([partition({-3}, {-9}); int(-4)], 7,
                relation((var3 in mset(true, false), toInt(false) in {-7}, 5),
                         (toInt(false) in {4}, var3 in (mset() : `mset of bool`), |(mset() : `mset of int`)|),
                         (-5 in ({} : `set of int`), var2(true <-> true) = var2(var3), var1)),
                {7} - {5},
                relation((-1, (-9 != 2) in {false, true}, toInt(true) in {-9, 3}),
                         (|({} : `set of bool`)|, toInt(false) in mset(2), true),
                         (toInt(var3), tuple (10) = tuple (3), var3)))},
              {([partition({-6}), partition({-8}); int(2, 5)], |mset(false, false)|,
                relation((var3, toInt(true) in mset(-10, 10), -3), (var1 <= var1, var3 in mset(false, false), 3),
                         (var3, tuple (true) != tuple (true), var1 + var1)),
                {var1},
                relation((toInt(false) + 5, true, 3 != 1 \/ (false <-> true)),
                         (5 / -6 + -4 % 5, false, var3 <-> 10 != -1), (-3, toInt(true) in {-3}, true)))})
    !=
    partition({([partition({-3}), partition({-3}), partition({-3}), partition({-8, 2}), partition({-2}, {-4}),
                 partition({-4});
                     int(-2..1, -4..-2)],
                var1,
                relation((tuple (1) != tuple (5), var1 <= var1, 0), ({-2, 10} = {-9, 1}, var3 in mset(false, true), 9),
                         (true, partition({10, 4}) != partition({8, -8}), -4)),
                {var1},
                relation((|partition({8})|, var1 in mset(8),
                          function(false --> true, false --> false) != function(true --> true)),
                         (8, 1 = -1 /\ false != false, true), (2, false -> true != false, (false -> false) /\ var3)))}),
    var1 != var1 -> false,
    true /\
    function([mset(true, true), mset(true, false), mset(true); int(-3..-2, 4)]
                 --> ({8, -3}, function(0 --> 9, 5 --> 4), function(-3 --> 3), (true, 10)))
    =
    function([(mset() : `mset of bool`), mset(false, true); int(-1, 3)]
                 --> ({-10, 6}, var2(-9 != 6), function(-7 --> -7, -3 --> 3), (false, -4)),
             [mset(true); int(-4)] --> (({} : `set of int`), var2(false), var2(var3), (false, 10)),
             [mset(false, true); int(5)] --> ({-7}, function(3 --> -2, -2 --> -9), function(10 --> 0), (false, 7))),
    and([false | q_4 : int(-4..2, -3..1)])
