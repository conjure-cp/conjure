language Essence 1.3

find var1:
        function (minSize 1, maxSize 2, total, injective) (int(2, 1..4), int(4, 1), bool) -->
            function (minSize 4, maxSize 4, injective) int(4, 2) --> int(4, 3)
such that
    (mset() : `mset of (partition from bool, partition from bool, matrix indexed by [int] of bool, set of bool)`) in
    {mset((partition({true}, {true, true, true, true}, {false, true, true, false}), partition({false, true}, {false}),
           [false, true, true, false, true; int(3, 7..8, 12..13)], {false, true, false}),
          (partition({true, false, false}, {true, false, false, false}, {true, false, true, false},
                     {false, true, false, false}, {true, false}),
           partition({true, false, false, true, false}), [false, true, true; int(4..6)], {false, false}))}
