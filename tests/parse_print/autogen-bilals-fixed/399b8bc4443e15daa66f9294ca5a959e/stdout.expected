language Essence 1.3

find var1: bool
find var2: tuple (int(-4..1))
find var3: set of set of int(3..4)
find var4: relation of (int(-5, -2) * set of bool)
such that
    false,
    and([function((partition({3}), true = false, tuple (-7), function(10 --> -6, -3 --> 5))
                      --> partition({function(true --> false)}, {function(true --> true)}, {function(false --> true)},
                                    {function(true --> false)}),
                  (partition({1}), true, tuple (7), function(3 --> 1, 3 --> 7))
                      --> partition({function(false --> true)}))
         =
         function((partition({0}), var1, tuple (-1), function(6 --> 0, 8 --> -10))
                      --> partition({function(false --> true, true --> true)}))
             | q_5 : set of set of int(3..4), toInt(var1) * var2[1] != |q_5|]),
    and([function(partition({1}) --> (false, -3), partition({5, -10}) --> (false, -6),
                  partition({-8, -5}) --> (true, 2), partition({10}, {6}) --> (true, 1))
         = function(partition({-2, -2}) --> (true, 0), partition({-4, -7}) --> (true, -2))
         /\ false
             | q_6 : set of set of int(3..4), var3 = q_6]),
    ({} : `set of partition from (set of int, function int --> int, tuple(int))`) =
    ({} : `set of partition from (set of int, function int --> int, tuple(int))`),
    false,
    true,
    ({relation((true, -10), (true, -5), (true, -2)), relation((true, -10), (true, -10), (true, 9))},
     relation(({-8}, function(5 --> -4), (false, -2), -10 % -1, var1),
              ({3, -8}, function(6 --> 1), (false, 0), toInt(true), true),
              ({6, -1}, function(-6 --> -8), (true, -1), 6, var1)),
     mset(toRelation(function(-1 --> 4, -5 --> 0)), relation((-9, -9), (-2, 4), (-10, 3)),
          relation((-8, 1), (9, 7), (5, 2)), toRelation(function(4 --> -2, -6 --> 7))),
     function(({true, true}, {true}, (mset() : `mset of int`), partition({true}, {false}))
                  --> relation((8, true, false), (-1, false, true), (3, true, false)),
              ({true}, ({} : `set of bool`), mset(7), partition({false, false}))
                  --> relation((9, true, false), (8, false, false), (-10, true, true)),
              ({false}, ({} : `set of bool`), mset(-5), partition({true}))
                  --> relation((0, false, true), (-7, true, true), (8, false, true)),
              ({false, true}, ({} : `set of bool`), mset(4, -7), partition({false}))
                  --> relation((-3, true, false), (-4, true, true), (9, false, true)),
              ({true, true}, ({} : `set of bool`), mset(1), partition({false, false}))
                  --> relation((4, false, false), (3, true, true), (1, false, true)),
              ({false, false}, ({} : `set of bool`), (mset() : `mset of int`), partition({true}))
                  --> relation((9, true, false), (-3, true, true), (8, true, false))),
     mset([{false, true}; int(2)]), toMSet(({} : `set of int`) intersect {7 ** (-6)}))
    =
    ({relation((false, 1), (true, -1), (true, 6)), relation((false, 3), (true, -2), (false, 8)),
      relation((false, -4), (true, -1), (true, 10)), relation((false, 5), (false, 5), (true, -10)),
      relation((false, -9), (false, -5), (true, 6))},
     relation(({3, 9}, function(-2 --> 7, -6 --> -5), (false, -1), 6 / 2, 4 != 0),
              ({4, 6}, function(-3 --> 3, -2 --> 2), (false, 4), -2, true -> true),
              ({-3, -6}, function(4 --> 1), (false, -3), 2 * 9, var1)),
     (mset() : `mset of relation of (int * int)`),
     function((({} : `set of bool`), ({} : `set of bool`), (mset() : `mset of int`), partition({false}, {false}))
                  --> relation((-1, true, false), (2, false, true), (8, true, true)),
              (({} : `set of bool`), ({} : `set of bool`), mset(2, -10), partition({false, true}))
                  --> relation((0, true, true), (-9, true, false), (9, false, false))),
     mset([{false, false}, {true, false}; int(-1..0, 0)], [({} : `set of bool`); int(-2)],
          [({} : `set of bool`), {false, false}, {true, true}, {true}; int(1..3, 4)],
          [({} : `set of bool`), ({} : `set of bool`); int(-1..0)], [{true}; int(0, 0)], [{false}; int(3)]),
     mset((-6 % 2) ** (-1 + 6), |(mset() : `mset of int`)|, toInt(var1), |function(false --> 9)|, (3 + 7) ** (-1 % -7),
          -9)),
    and([relation(tuple (function(true --> false, false --> false)), tuple (function(false --> true, false --> true)),
                  tuple (function(false --> true)))
         =
         relation(tuple (function(true --> false)), tuple (function(false --> false, false --> false)),
                  tuple (function(false --> false)))
             | q_7 <- var3,
               |q_7| !=
               min(mset(freq(mset(false, false), true \/ true), |mset(-2)|, sum([toInt(false) | q_20 <- q_7]),
                        |function(false --> 0, true --> -9)|, |q_7|))])
