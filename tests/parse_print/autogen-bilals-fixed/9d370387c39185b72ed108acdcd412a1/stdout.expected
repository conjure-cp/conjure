language Essence 1.3

find var1: partition from function int(-2..1) --> bool
find var2: (int(1, 2), tuple (bool), bool, bool)
find var3: (tuple (int(3..5)), bool)
find var4: bool
find var5: set of (int(3), bool)
find var6: tuple (partition from int(-5, -3))
find var7: partition from int(-3)
such that
    or([false | q_8 <- var5]),
    and([mset((tuple (-6), mset(false, true), function(false --> -5)),
              (tuple (6), mset(false, false), function(true --> 5)), (tuple (-8), mset(false), function(false --> -8)),
              (tuple (-4), (mset() : `mset of bool`), function(false --> -10)),
              (tuple (1), mset(true), function(false --> -5)))
         !=
         mset((tuple (0), mset(false, false), function(false --> 7)),
              (tuple (2), mset(false, false), function(true --> -6, true --> 8)),
              (tuple (-10), (mset() : `mset of bool`), function(false --> -1, false --> -4)),
              (tuple (5), mset(false, false), function(false --> -1)))
             | q_9 <- var5, q_9 = (9, true)]),
    and([function(function(function(false --> true) --> function(-7 --> false))
                      --> relation((4, -5, -8), (2, 6, -9), (10, -4, -1)),
                  function(function(true --> true, true --> false) --> function(10 --> false, 10 --> false),
                           function(false --> true) --> function(-7 --> false),
                           function(true --> true) --> function(-4 --> false, 10 --> true))
                      --> relation((-7, 2, -8), (6, 10, 0), (-6, -9, 8)),
                  function(function(true --> false) --> function(0 --> false))
                      --> relation((3, 6, -7), (-5, -6, 9), (-4, -9, 4)),
                  function(function(false --> true, true --> true) --> function(-10 --> true))
                      --> relation((-4, -3, -4), (-4, 9, 5), (-4, 5, 5)),
                  function(function(true --> true) --> function(5 --> false, -10 --> false))
                      --> relation((-10, -5, -5), (-5, -9, 5), (-4, -8, 7)),
                  function(function(true --> true, true --> false) --> function(8 --> false))
                      --> relation((-3, 0, -5), (-3, -8, 1), (-6, -3, 7)))
         =
         function(function(function(true --> false, true --> true) --> function(10 --> false),
                           function(false --> true, false --> false) --> function(10 --> false, -6 --> true),
                           function(true --> true, true --> false) --> function(-5 --> true, -1 --> true),
                           function(false --> true, true --> true) --> function(-8 --> false))
                      --> relation((2, 5, 2), (-2, 0, -2), (-4, 2, 5)),
                  function(function(false --> true, true --> true) --> function(-2 --> false),
                           function(true --> false) --> function(7 --> false, 10 --> true))
                      --> relation((6, 6, -10), (3, 5, -6), (-1, -8, -2)),
                  function(function(true --> true) --> function(-8 --> false))
                      --> relation((9, -1, 4), (9, 5, -3), (4, -7, 6)),
                  function(function(false --> true, true --> true) --> function(-1 --> true),
                           function(true --> false, false --> false) --> function(-1 --> true),
                           function(true --> true) --> function(9 --> true))
                      --> relation((3, 1, -7), (4, 5, 4), (-10, -6, -5)),
                  function(function(true --> true, true --> true) --> function(1 --> true),
                           function(false --> false, false --> true) --> function(6 --> true))
                      --> relation((-8, -6, 8), (1, -2, 5), (6, 5, 0)))
             | q_10 : set of (int(3), bool)]),
    and([toInt(true \/ (true <-> false)) = 10
             | q_11 : set of (int(3), bool),
               toSet(toRelation(function(8 --> true, 1 --> true)) -
                     (toRelation(function(-2 --> true, -6 --> true)) union
                      relation((8, false), (10, false), (0, false))))
               = q_11]),
    (mset() : `mset of (partition from mset of bool, mset of function bool --> bool, function mset of bool --> int,
                        function set of int --> partition from int)`)
    !=
    mset((partition({(mset() : `mset of bool`), mset(true, false), mset(true)}),
          mset(function(true --> true), function(true --> true, true --> false), function(true --> false)),
          function(mset(false) --> -4 + -10, mset(false) --> 2 * 7),
          function({-2, -6} --> partition({10, 8}), {8} --> partition({2}, {-6}), {-8, -7} --> var7)))
