language Essence 1.3

find var1: function (size 3) int(2, 1..3) --> int(5, 1..3)
such that
    !(factorial(5) < 1 % 4 -> ((true <-> false) -> true > true)),
    apart(({} : `set of function matrix indexed by [int] of int --> int`),
          partition({(function() : `function matrix indexed by [int] of int --> int`),
                     function([1, 1; int(0, 2)] --> 0),
                     function(([] : `matrix indexed by [int] of int`) --> 5, [1, 1, 2, 2; int(1..4)] --> 2 ** 5,
                              [3, 1, 4, 4, 4; int(5, 7, 4, 6, 9)] --> 5 / 5),
                     function([5; int(2)] --> 1, [0, 3, 4; int(1..3)] --> 3, [0; int(0)] --> 1,
                              [4, 1, 2, 2; int(8, 5, 12, 6)] --> 1, [4, 5, 5, 0, 2; int(0..4)] --> 1)},
                    {function([0, 3; int(3..4)] --> factorial(5), ([] : `matrix indexed by [int] of int`) --> 1 - 5,
                              [2, 3; int(4..5)] --> toInt(true)),
                     (function() : `function matrix indexed by [int] of int --> int`)},
                    {function([3, 0, 4, 5, 5; int(11, 10, 4..6)] --> -2, [4, 3; int(4, 2)] --> factorial(0),
                              [0, 2, 1, 3, 4; int(1..2, 12, 0, 5)] --> 5 % 3,
                              [0, 3, 2, 0; int(2, 4..5, 0)] --> factorial(5))},
                    {(function() : `function matrix indexed by [int] of int --> int`),
                     function([5, 4, 3, 2; int(10..11, 12, 0)] --> toInt(true),
                              [3, 5, 4, 5; int(0, 5..7)] --> toInt(true), [0, 0; int(2..3)] --> -0,
                              ([] : `matrix indexed by [int] of int`) --> toInt(true))},
                    {function([3, 2, 2, 0; int(3..6)] --> 5 % 2, ([] : `matrix indexed by [int] of int`) --> 4 / 3,
                              [0, 2, 5; int(6, 7..8)] --> 3, [0; int(1)] --> factorial(1),
                              [3, 3, 4, 4, 0; int(9, 1, 4, 0, 13)] --> 4 ** 2),
                     function([2, 4, 5; int(4..5, 3)] --> 4 / 3, [4, 3, 4; int(3, 4..5)] --> 2 % 4,
                              [5, 0, 3, 3; int(11, 0, 3, 9)] --> -4)})),
    relation((relation((partition({true, false, false}), (false, 0)), (partition({false, true}), (false, 0)),
                       (partition({true, true}, {false, false, false, false, false}, {false, true, false}), (true, 3)),
                       (partition({true, false, false}, {true}, {false, true}, {true, false, true},
                                  {true, false, false, true}),
                        (false, 5))),
              relation(tuple ((function() : `function bool --> int`)), tuple (function(false --> 5)),
                       tuple ((function() : `function bool --> int`)),
                       tuple (function(true --> 1, true --> 0, true --> 1)))),
             (relation(((partition() : `partition from bool`), (false, 4)),
                       (partition({true, true, true, true}, {true, false, false, false}, {true}, {true}), (false, 3)),
                       (partition({true, true}, {false, false, true, true, false}, {false, true, true, false, true},
                                  {true}),
                        (true, 0))),
              (relation() : `relation of (function bool --> int)`)),
             (relation((partition({false, false, true, false}, {false}), (false, 4)),
                       (partition({true, false, true, true}, {false}, {true, false, false, false, false}), (false, 0))),
              relation(tuple (function(false --> 2, true --> 4, true --> 5, true --> 2)), tuple (function(false --> 3)),
                       tuple (function(false --> 0, true --> 2)), tuple (function(true --> 3, true --> 3, true --> 5)),
                       tuple (function(false --> 0, false --> 5)))),
             (relation((partition({false, false, true, true}), (false, 5)),
                       ((partition() : `partition from bool`), (false, 5)),
                       (partition({true, false}, {false, false, false, true, false}, {true, false, false, false}),
                        (true, 0))),
              (relation() : `relation of (function bool --> int)`)))
    supset
    relation((relation((partition({false}, {false, true}, {true, false, false}, {false, true, true},
                                  {false, false, true, false}),
                        (true, 5))),
              relation(tuple (function(false --> 1, false --> 1, false --> 5)),
                       tuple (function(true --> 0, true --> 5, true --> 1, true --> 0, false --> 2)),
                       tuple (function(true --> 1, true --> 4, true --> 2)), tuple (function(true --> 2)))),
             ((relation() : `relation of (partition from bool * (bool, int))`),
              (relation() : `relation of (function bool --> int)`)),
             (relation((partition({true}, {false, true, false, true, false}, {false, false, false}), (false, 1)),
                       (partition({true, true, false}, {true, false, true, true, false}), (true, 3))),
              relation(tuple (function(false --> 2, false --> 1, false --> 3)),
                       tuple (function(true --> 0, true --> 2)),
                       tuple (function(true --> 2, false --> 5, false --> 5, true --> 3)))),
             (relation((partition({false, false}, {false, false, false}, {false, true}), (true, 2)),
                       (partition({true, false, true, true, false}), (false, 0))),
              relation(tuple (function(false --> 5, true --> 4, false --> 5, true --> 1, true --> 1)),
                       tuple (function(true --> 2, true --> 2, false --> 3, false --> 3)), tuple (function(true --> 2)),
                       tuple (function(false --> 3, true --> 3, true --> 2, false --> 1)))),
             (relation((partition({false, false}), (false, 0)),
                       (partition({false, false, true}, {true}, {true, true, true, true, true}), (true, 1)),
                       (partition({false, true}, {false}, {true, false, true, false, false}), (true, 5))),
              relation(tuple (function(true --> 0, false --> 1, true --> 3)),
                       tuple (function(true --> 0, false --> 2, true --> 0))))),
    {(relation() : `relation of (tuple(int))`),
     relation(tuple (tuple (0)), tuple (tuple (0)), tuple (tuple (1)), tuple (tuple (2)))}
    supsetEq
    {relation(tuple (tuple (4)), tuple (tuple (4)), tuple (tuple (2)), tuple (tuple (1))), relation(tuple (tuple (2))),
     (relation() : `relation of (tuple(int))`)},
    [l_2 | l_1 : bool, l_2 : bool, true]
        [freq(mset(mset(true), (mset() : `mset of bool`), (mset() : `mset of bool`)), (mset() : `mset of bool`))],
    [l_4 | l_3 : bool, l_4 : bool, l_4] <lex [l_5 | l_5 : bool, l_6 : bool, l_5]
