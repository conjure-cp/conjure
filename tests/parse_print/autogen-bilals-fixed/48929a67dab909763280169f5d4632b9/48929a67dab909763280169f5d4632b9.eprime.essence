language ESSENCE' 1.0

find var1_ExplicitVarSizeWithFlags_Flags: matrix indexed by [int(1..16)] of bool
find var1_ExplicitVarSizeWithFlags_Values_PartitionAsSet_ExplicitVarSizeWithMarker_Marker:
        matrix indexed by [int(1..16)] of int(0..0)
find var1_ExplicitVarSizeWithFlags_Values_PartitionAsSet_ExplicitVarSizeWithMarker_Values_ExplicitVarSizeWithMarker_Marker:
        matrix indexed by [int(1..16), int(1..0)] of int(0..2)
find var1_ExplicitVarSizeWithFlags_Values_PartitionAsSet_ExplicitVarSizeWithMarker_Values_ExplicitVarSizeWithMarker_Values:
        matrix indexed by [int(1..16), int(1..0), int(1..2)] of bool
such that
    and([var1_ExplicitVarSizeWithFlags_Flags[q1 + 1] ->
         var1_ExplicitVarSizeWithFlags_Values_PartitionAsSet_ExplicitVarSizeWithMarker_Marker[q1]
         <
         var1_ExplicitVarSizeWithFlags_Values_PartitionAsSet_ExplicitVarSizeWithMarker_Marker[q1
                                                                                              + 1]
         \/
         var1_ExplicitVarSizeWithFlags_Values_PartitionAsSet_ExplicitVarSizeWithMarker_Marker[q1]
         =
         var1_ExplicitVarSizeWithFlags_Values_PartitionAsSet_ExplicitVarSizeWithMarker_Marker[q1
                                                                                              + 1]
         /\
         (var1_ExplicitVarSizeWithFlags_Values_PartitionAsSet_ExplicitVarSizeWithMarker_Values_ExplicitVarSizeWithMarker_Marker[q1,
                                                                                                                                ..]
          .<
          var1_ExplicitVarSizeWithFlags_Values_PartitionAsSet_ExplicitVarSizeWithMarker_Values_ExplicitVarSizeWithMarker_Marker[q1
                                                                                                                                +
                                                                                                                                1,
                                                                                                                                ..]
          \/
          flatten(var1_ExplicitVarSizeWithFlags_Values_PartitionAsSet_ExplicitVarSizeWithMarker_Values_ExplicitVarSizeWithMarker_Values[q1,
                                                                                                                                        ..,
                                                                                                                                        ..])
          .<
          flatten(var1_ExplicitVarSizeWithFlags_Values_PartitionAsSet_ExplicitVarSizeWithMarker_Values_ExplicitVarSizeWithMarker_Values[q1
                                                                                                                                        +
                                                                                                                                        1,
                                                                                                                                        ..,
                                                                                                                                        ..]))
             | q1 : int(1..15)]),
    and([var1_ExplicitVarSizeWithFlags_Flags[q2] = false ->
         var1_ExplicitVarSizeWithFlags_Values_PartitionAsSet_ExplicitVarSizeWithMarker_Marker[q2]
         = 0 | q2 : int(1..16)]),
    and([var1_ExplicitVarSizeWithFlags_Flags[q3 + 1] ->
         var1_ExplicitVarSizeWithFlags_Flags[q3]
             | q3 : int(1..15)]),
    and([var1_ExplicitVarSizeWithFlags_Flags[q5] -> false | q5 : int(1..16)]),
    and([var1_ExplicitVarSizeWithFlags_Flags[q5] ->
         var1_ExplicitVarSizeWithFlags_Values_PartitionAsSet_ExplicitVarSizeWithMarker_Marker[q5]
         <= 0
             | q5 : int(1..16)])

