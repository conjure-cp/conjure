language Essence 1.3

find var1: int(-4, -1)
find var2: function bool --> set of int(-2..5)
find var3: int(4, 4)
find var4: partition from (bool, bool)
find var5: int(-3..3, 5)
find var6: tuple (tuple (int(2..4)))
such that
    function(([var2(true <-> true); int(-1, -1)], partition({var2(true \/ false), {-2}}),
              [function(8 --> false, -7 --> false); int(2)])
                 --> (relation((function(true --> false, false --> true) != function(false --> true, true --> false),
                                toInt(false) in mset(1)),
                               ((false \/ false) in ({} : `set of bool`),
                                function(false --> true, true --> false) != function(false --> true, false --> true)),
                               ((false = true) = false, false = false /\ false)),
                      ((10, false), partition({true}, {true}))),
             ([({} : `set of int`), var2(true /\ false); int(4..5)], partition({{-5, 2}}),
              [function(1 --> false, -9 --> true), function(6 --> false), function(-3 --> true, -4 --> false),
               function(-1 --> true, -5 --> true), function(8 --> true, -9 --> true), function(3 --> true, 6 --> true),
               function(9 --> true, 9 --> true);
                   int(3, -2..4)])
                 --> (relation((false <-> (false <-> true), 1 != 8 \/ false), (var2 != var2, var1 = var1),
                               (true, toInt(false) in mset(-1))),
                      ((7, false), partition({false}, {false}))),
             ([{5, -2}, var2(false <-> false); int(3, 5)], partition({var2(false <-> false)}, {var2(-7 != -2)}, {{0}}),
              [function(8 --> true, 6 --> false); int(-1)])
                 --> (toRelation(function(true --> true)), ((-10, true), partition({true}))),
             ([({} : `set of int`), var2(true -> false), {9}; int(1..3)], partition({var2(false \/ false)}),
              [function(2 --> true, -5 --> true); int(0)])
                 --> (relation((true, var3 != var3), (var1 > var1, true),
                               (tuple (true) != tuple (false), var6 != var6)),
                      ((5, true), partition({false}))),
             ([({} : `set of int`); int(-5)], partition({{-1, -3}}, {var2(-6 = 8), {2, 4}}),
              [function(-2 --> true, -9 --> false); int(-5)])
                 --> (toRelation(function(true --> false, false --> false)), ((-8, true), partition({true}))),
             ([({} : `set of int`); int(3)], partition({var2(false <-> true), var2(false)}, {var2(false)}),
              [function(10 --> true), function(-5 --> false), function(-10 --> true), function(7 --> false, 6 --> true),
               function(10 --> true, -6 --> true), function(7 --> false, 3 --> false), function(8 --> true, 3 --> true);
                   int(-1..5)])
                 --> (relation((var1 != var1, false), (true, toInt(false) in {-4, 10}),
                               (partition({false}) = partition({false}, {false}), var1 > var1)),
                      ((-4, false), partition({true}, {false}))),
             ([var2(false), var2(-6 != 5), var2(true != true), {-3, -3}, {2}, ({} : `set of int`), {5}, var2(false),
               {5}, var2(false = false);
                   int(-4..5, 2)],
              partition({({} : `set of int`), var2(false), ({} : `set of int`), var2(false <-> true)}),
              [function(-10 --> false, 10 --> false), function(6 --> false, 10 --> false),
               function(-2 --> true, -7 --> true), function(9 --> true, -4 --> false), function(9 --> false);
                   int(1, 0..4)])
                 --> (toRelation(function(false --> true)), ((-10, false), partition({false}, {true}))))
    !=
    function(([var2(false \/ false); int(4, 4)], partition({{-6, 1}}, {{-6, -10}}),
              [function(0 --> true, -9 --> true); int(1)])
                 --> (relation((toInt(true) = -10, true <-> false /\ false),
                               (var1 != var1, function(true --> -9, false --> 10) = function(false --> 0, false --> 9)),
                               ((true, true) != (false, true), false)),
                      ((0, true), partition({false}, {true})))),
    false
