language Essence 1.3

find var1: (bool, int(5, 1))
find var2: matrix indexed by [int(0..2, 0)] of int(2, 5)
find var3: function (size 2, injective) int(4..5, 2..2) --> int(0..4, 5)
find var4: tuple (int(0, 0))
such that
    true,
    (relation() : `relation of (relation of (matrix indexed by [int] of bool) * mset of tuple(int))`) =
    relation((relation(tuple ([true, false; int(2..3)]), tuple (([] : `matrix indexed by [int] of bool`))),
              mset(tuple (0), tuple (0))),
             (relation(tuple ([true; int(2..2)]), tuple ([true, true, false; int(3..5)]),
                       tuple ([false, false, true, false; int(4..5, 9..10)])),
              mset(var4)),
             (relation(tuple ([true, true, false; int(2, 1, 5..5)])), mset(tuple (5), tuple (2)))),
    min([-l_1 | l_1 : int(3, 4)]) > 3,
    image(function(mset(1, 4) --> [0, 1, 0; int(3, 5, 1..1)], (mset() : `mset of int`) --> [1, 4; int(5, 0..0)],
                   mset(1, 5, 2) --> [4, 4, 2, 4, 1; int(8..10, 4, 14..14)]),
          toMSet({0, 1}))
    .<= [l_3 | l_2 : int(0..3, 5), l_3 : int(5..5, 4)],
    true,
    or([l_4 | l_4 : bool, l_5 : bool, l_4]),
    mset(mset([2, 1, 3, 5, 4; int(0, 2..3, 15, 4..4)], [1, 1, 5, 1, 4; int(2..6)],
              [2, 3, 0, 3, 3; int(5, 3, 9, 14, 6..6)]))
    supsetEq
    mset(mset([5, 4, 5, 5, 4; int(7..11)], ([] : `matrix indexed by [int] of int`)),
         (mset() : `mset of matrix indexed by [int] of int`), mset([0, 0, 2, 4, 1; int(9, 0, 7, 10, 4..4)], var2))
