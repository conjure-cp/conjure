language Essence 1.3

find var1: tuple (set (minSize 5 , maxSize 5) of int(5, 2))
find var2:
        function (minSize 4 , maxSize 5, total, injective)
            (int(5, 2), bool) --> (bool, bool, bool)
find var3:
        (function (minSize 2) bool --> bool,
         function (size 4, injective) int(1..1, 4..5) --> bool,
         partition (maxNumParts 0, maxPartSize 2) from int(1, 5),
         matrix indexed by [int(5, 5)] of bool)
find var4:
        set (minSize -3) of partition (maxNumParts 0, minPartSize 4) from int(2, 2)
find var5: set (minSize 5 , maxSize 5) of tuple (int(2, 4))
such that
    tuple (false)[1] >
    ([l_2 | l_1 : int(4, 2), l_2 : int(2, 5..5), true] .<
     [l_3 | l_3 : int(4..5, 4)])
